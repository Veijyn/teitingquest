{"version":3,"file":"src_app_views_scanner_scanner_module_ts.js","mappings":"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","sources":["./src/app/core/services/inventory.service.ts","./src/app/core/services/player.service.ts","./src/app/core/services/qr-action.service.ts","./src/app/views/scanner/scanner.component.ts","./src/app/views/scanner/scanner.module.ts","./src/data/qr-actions.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Item } from '../models/item.model';\r\nimport { ToastService } from '@views/toasts/toast.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InventoryService {\r\n  private items$ = new BehaviorSubject<Item[]>([]);\r\n\r\n  constructor(private toast: ToastService) {}\r\n\r\n  setInventory(items: Item[]) {\r\n    this.items$.next([...items]);\r\n  }\r\n\r\n  getInventory() {\r\n    return this.items$.asObservable();\r\n  }\r\n\r\n  \r\naddItem(item: Item) {\r\n  const current = this.items$.value;\r\n  this.items$.next([...current, item]);\r\n\r\n  /*if (item.available !== false) {\r\n    this.toast.show(`ðŸ“¦ Neues Item erhalten: ${item.name}`);\r\n  }*/\r\n}\r\n\r\n  addItems(items: Item[]) {\r\n  const current = this.items$.value;\r\n  this.items$.next([...current, ...items]);\r\n  }\r\n\r\n  getSnapshot(): Item[] {\r\n    return this.items$.value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { PlayerStats } from '../models/player-stats.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PlayerService {\r\n  private player$ = new BehaviorSubject<PlayerStats | null>(null);\r\n\r\n  setPlayer(stats: PlayerStats) {\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  getPlayer() {\r\n    return this.player$.asObservable();\r\n  }\r\n\r\n  updatePlayer(stats: PlayerStats) {\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  heal(amount: number) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    stats.hp += amount;\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  pay(amount: number): boolean {\r\n    const stats = this.player$.value;\r\n    if (!stats || stats.money < amount) return false;\r\n    stats.money -= amount;\r\n    this.player$.next({ ...stats });\r\n    return true;\r\n  }\r\n\r\n  addMoney(amount: number) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    stats.money += amount;\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  addXp(amount: number) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    stats.experience += amount;\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  updateStats(partial: Partial<PlayerStats>) {\r\n    const current = this.player$.value!;\r\n    this.player$.next({ ...current, ...partial });\r\n  }\r\n\r\n\r\n  getSnapshot(): PlayerStats | null {\r\n    return this.player$.value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { QrActionMap } from '../../../data/qr-actions';\r\nimport { QrAction } from '../models/qr-action.model';\r\nimport { Item } from '../models/item.model';\r\nimport { InventoryService } from './inventory.service';\r\nimport { PlayerService } from './player.service';\r\nimport { SoundService } from './sound.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class QrActionService {\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private inventoryService: InventoryService,\r\n    private soundService: SoundService\r\n  ) { }\r\n\r\n  handleQrCode(code: string): string {\r\n    const action = QrActionMap[code];\r\n    if (!action) return 'Unbekannter Code.';\r\n\r\n    switch (action.type) {\r\n      case 'heal':\r\n        this.playerService.heal(action.amount);\r\n        this.soundService.playEffect('heal');\r\n        return action.description ?? `+${action.amount} HP geheilt.`;\r\n\r\n      case 'item':\r\n        const item: Item = {\r\n          id: action.itemId,\r\n          name: action.itemId,\r\n          description: 'Ein mÃ¤chtiges Item.',\r\n          icon: 'placeholder.png',\r\n          type: 'equipment',\r\n          acquiredAt: new Date()\r\n        };\r\n        this.inventoryService.addItem(item);\r\n        this.soundService.playEffect('item');\r\n        return `Item erhalten: ${action.itemId}`;\r\n\r\n      case 'quest':\r\n        // questService.addQuest(action.questId); // spÃ¤ter\r\n        this.soundService.playEffect('quest');\r\n        return `Neue Quest erhalten: ${action.questId}`;\r\n\r\n      case 'startBattle':\r\n        // navigationService.navigateToBattle(action.bossId); â†’ spÃ¤ter\r\n        return `Kampf gegen Boss gestartet: ${action.bossId}`;\r\n\r\n      default:\r\n        return 'Unbekannte Aktion.';\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { QrActionService } from '@core/services/qr-action.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-scanner',\r\n  standalone: false,\r\n  template: `\r\n    <h2>QR-Code scannen</h2>\r\n<zxing-scanner (scanSuccess)=\"onScan($event)\"></zxing-scanner>\r\n<p *ngIf=\"message\">{{ message }}</p>\r\n\r\n<button class=\"rpg-button\" (click)=\"goBack()\">ZurÃ¼ck</button>\r\n  `\r\n})\r\nexport class ScannerComponent {\r\n  message = '';\r\n\r\n  constructor(\r\n    private qrActionService: QrActionService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  onScan(result: string) {\r\n    this.message = this.qrActionService.handleQrCode(result);\r\n\r\n    // Optional: Auto zurÃ¼ck nach 3 Sek.\r\n    setTimeout(() => this.router.navigate(['/game']), 3000);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/game']);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ScannerComponent } from './scanner.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\r\n\r\nconst routes: Routes = [{ path: '', component: ScannerComponent }];\r\n\r\n@NgModule({\r\n  declarations: [ScannerComponent],\r\n  imports: [CommonModule, RouterModule.forChild(routes), ZXingScannerModule]\r\n})\r\nexport class ScannerModule {}","import { QrAction } from '../app/core/models/qr-action.model';\r\n\r\nexport const QrActionMap: Record<string, QrAction> = {\r\n  'heal-bier': {\r\n    type: 'heal',\r\n    amount: 10,\r\n    description: 'Du trinkst ein Bier und fÃ¼hlst dich besser.'\r\n  },\r\n  'item-schwert': {\r\n    type: 'item',\r\n    itemId: 'sword-of-glory'\r\n  },\r\n  'start-battle-max': {\r\n    type: 'startBattle',\r\n    bossId: 'max'\r\n  },\r\n  'quest-goldene-hose': {\r\n    type: 'quest',\r\n    questId: 'goldene-hose'\r\n  }\r\n};\r\n"],"names":["BehaviorSubject","ToastService","InventoryService","toast","items$","constructor","setInventory","items","next","getInventory","asObservable","addItem","item","current","value","addItems","getSnapshot","i0","ÉµÉµinject","i1","factory","Éµfac","providedIn","PlayerService","player$","setPlayer","stats","getPlayer","updatePlayer","heal","amount","hp","pay","money","addMoney","addXp","experience","updateStats","partial","QrActionMap","SoundService","QrActionService","playerService","inventoryService","soundService","handleQrCode","code","action","type","playEffect","description","id","itemId","name","icon","acquiredAt","Date","questId","bossId","i2","i3","Router","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµadvance","ÉµÉµtextInterpolate","ctx_r0","message","ScannerComponent","qrActionService","router","onScan","result","setTimeout","navigate","goBack","ÉµÉµdirectiveInject","selectors","decls","vars","consts","template","ScannerComponent_Template","rf","ctx","ÉµÉµlistener","ScannerComponent_Template_zxing_scanner_scanSuccess_2_listener","$event","ÉµÉµtemplate","ScannerComponent_p_3_Template","ScannerComponent_Template_button_click_4_listener","ÉµÉµproperty","CommonModule","RouterModule","ZXingScannerModule","routes","path","component","ScannerModule","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}