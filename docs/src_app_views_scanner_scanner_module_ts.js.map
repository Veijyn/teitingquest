{"version":3,"file":"src_app_views_scanner_scanner_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AACqD;AAEf;;;AAQ/B,IAAME,eAAe;EAAtB,MAAOA,eAAe;IAINC,EAAA;IAHZC,eAAe;IACfC,sBAAsB;IAE9BC,YAAoBH,EAAuB;MAAvB,KAAAA,EAAE,GAAFA,EAAE;IAAwB;IAE9CI,uBAAuBA,CAACC,OAAwB;MAC9C,IAAI,CAACH,sBAAsB,GAAGG,OAAO;IACvC;IAEMC,WAAWA,CAACC,KAA4B;MAAA,IAAAC,KAAA;MAAA,OAAAC,wKAAA;QAC5CF,KAAK,CAACG,SAAS,GAAG,IAAIC,IAAI,EAAE;QAC5B,MAAMC,MAAM,SAASd,oDAAc,CAACU,KAAI,CAACR,EAAE,CAACa,GAAG,CAAC,YAAY,EAAEN,KAAK,CAAC,CAAC;QACrE,MAAMO,EAAE,GAAG,OAAOF,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAIA,MAAc,CAACE,EAAE;QACnEN,KAAI,CAACP,eAAe,GAAGa,EAAE;QACzB,OAAO;UAAE,GAAGP,KAAK;UAAEO;QAAE,CAAE;MAAC;IAC1B;IAEMC,iBAAiBA,CAAA;MAAA,IAAAC,MAAA;MAAA,OAAAP,wKAAA;QACrB,IAAI,CAACO,MAAI,CAACd,sBAAsB,EAAE,MAAM,IAAIe,KAAK,CAAC,iCAAiC,CAAC;QACpF,MAAMC,QAAQ,GAAGF,MAAI,CAACd,sBAAsB,EAAE;QAC9CgB,QAAQ,CAACR,SAAS,GAAG,IAAIC,IAAI,EAAE;QAC/B,OAAOK,MAAI,CAACG,UAAU,CAACD,QAAQ,CAAC;MAAC;IACnC;IAEMC,UAAUA,CAACZ,KAAgB;MAAA,IAAAa,MAAA;MAAA,OAAAX,wKAAA;QAC/B,MAAMX,oDAAc,CAACsB,MAAI,CAACpB,EAAE,CAACqB,MAAM,CAAC,YAAY,EAAEd,KAAK,CAAC,CAAC;QACzD,OAAOA,KAAK;MAAC;IACf;IAEMe,QAAQA,CAACR,EAAU;MAAA,IAAAS,MAAA;MAAA,OAAAd,wKAAA;QACvBc,MAAI,CAACtB,eAAe,GAAGa,EAAE;QACzB,OAAOhB,oDAAc,CAACyB,MAAI,CAACvB,EAAE,CAACwB,QAAQ,CAAC,YAAY,EAAEV,EAAE,CAAC,CAAC;MAAC;IAC5D;IAEMW,SAASA,CAAA;MAAA,IAAAC,MAAA;MAAA,OAAAjB,wKAAA;QACb,OAAOX,oDAAc,CAAC4B,MAAI,CAAC1B,EAAE,CAAC2B,MAAM,CAAC,YAAY,CAAC,CAAC;MAAC;IACtD;;uBArCW5B,eAAe,EAAA6B,sDAAA,CAAAE,+DAAA;IAAA;;aAAf/B,eAAe;MAAAgC,OAAA,EAAfhC,eAAe,CAAAiC,IAAA;MAAAC,UAAA,EADF;IAAM;;SACnBlC,eAAe;AAAA,K;;;;;;;;;;;;;;;;;;ACVW;AAEoB;AACL;;;;AAG/C,IAAMqC,gBAAgB;EAAvB,MAAOA,gBAAgB;IAGPC,KAAA;IAA6BC,QAAA;IAFzCC,MAAM,GAAG,IAAIL,iDAAe,CAAS,EAAE,CAAC;IAEhD/B,YAAoBkC,KAAmB,EAAUC,QAAyB;MAAtD,KAAAD,KAAK,GAALA,KAAK;MAAwB,KAAAC,QAAQ,GAARA,QAAQ;IAAoB;IAE7EE,YAAYA,CAACC,KAAa;MACxB,IAAI,CAACC,MAAM,CAACD,KAAK,CAAC;IACpB;IAEAE,YAAYA,CAAA;MACV,OAAO,IAAI,CAACJ,MAAM,CAACK,YAAY,EAAE;IACnC;IAEAC,OAAOA,CAACC,IAAU;MAChB,MAAMC,OAAO,GAAG,IAAI,CAACR,MAAM,CAACS,KAAK;MACjC,MAAMC,OAAO,GAAG,CAAC,GAAGF,OAAO,EAAED,IAAI,CAAC;MAClC,IAAI,CAACJ,MAAM,CAACO,OAAO,CAAC;IACtB;IAEAC,QAAQA,CAACT,KAAa;MACpB,MAAMM,OAAO,GAAG,IAAI,CAACR,MAAM,CAACS,KAAK;MACjC,MAAMC,OAAO,GAAG,CAAC,GAAGF,OAAO,EAAE,GAAGN,KAAK,CAAC;MACtC,IAAI,CAACC,MAAM,CAACO,OAAO,CAAC;IACtB;IAEAE,UAAUA,CAACrC,EAAU;MACnB,MAAMiC,OAAO,GAAG,IAAI,CAACR,MAAM,CAACS,KAAK;MACjC,MAAMC,OAAO,GAAGF,OAAO,CAACK,MAAM,CAACN,IAAI,IAAIA,IAAI,CAAChC,EAAE,KAAKA,EAAE,CAAC;MACtD,IAAI,CAAC4B,MAAM,CAACO,OAAO,CAAC;IACtB;IAEAI,oBAAoBA,CAACvC,EAAU,EAAEwC,QAAiB;MAClD,MAAMP,OAAO,GAAG,IAAI,CAACR,MAAM,CAACS,KAAK;MACjC,MAAMC,OAAO,GAAGF,OAAO,CAACQ,GAAG,CAACT,IAAI,IAC9BA,IAAI,CAAChC,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGgC,IAAI;QAAEQ;MAAQ,CAAE,GAAGR,IAAI,CAC9C;MACD,IAAI,CAACJ,MAAM,CAACO,OAAO,CAAC;IACtB;IAEAO,gBAAgBA,CAACC,YAAkB;MACjC,MAAMV,OAAO,GAAG,IAAI,CAACR,MAAM,CAACS,KAAK;MACjC,MAAMU,KAAK,GAAGX,OAAO,CAACY,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAC9C,EAAE,KAAK2C,YAAY,CAAC3C,EAAE,IAAI8C,CAAC,CAACC,UAAU,KAAKJ,YAAY,CAACI,UAAU,CAAC;MAC1G,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBX,OAAO,CAACe,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;QACxB,IAAI,CAAChB,MAAM,CAAC,CAAC,GAAGK,OAAO,CAAC,CAAC;MAC3B;IACF;IAGEgB,WAAWA,CAAA;MACT,OAAO,IAAI,CAACxB,MAAM,CAACS,KAAK;IAC1B;IAEQN,MAAMA,CAACO,OAAe;MAC5B,IAAI,CAACV,MAAM,CAACyB,IAAI,CAACf,OAAO,CAAC;MACzB,IAAI,CAACX,QAAQ,CAACvB,iBAAiB,EAAE;IACnC;;uBAxDWqB,gBAAgB,EAAAR,sDAAA,CAAAE,qEAAA,GAAAF,sDAAA,CAAAqC,+DAAA;IAAA;;aAAhB7B,gBAAgB;MAAAL,OAAA,EAAhBK,gBAAgB,CAAAJ,IAAA;MAAAC,UAAA,EADH;IAAM;;SACnBG,gBAAgB;AAAA,K;;;;;;;;;;;;;;;;;;;;ACNU;AAGyC;AAC1B;AACJ;AACS;;;;AAGpD,IAAMgC,aAAa;EAApB,MAAOA,aAAa;IAGJ9B,QAAA;IAAmCD,KAAA;IAF/CgC,OAAO,GAAG,IAAInC,iDAAe,CAAqB,IAAI,CAAC;IAE/D/B,YAAoBmC,QAAyB,EAAUD,KAAmB;MAAtD,KAAAC,QAAQ,GAARA,QAAQ;MAA2B,KAAAD,KAAK,GAALA,KAAK;IAAkB;IAE9EiC,SAASA,CAACC,KAAkB;MAC1B,IAAI,CAACF,OAAO,CAACL,IAAI,CAAC;QAAE,GAAGO;MAAK,CAAE,CAAC;IACjC;IAEAC,SAASA,CAAA;MACP,OAAO,IAAI,CAACH,OAAO,CAACzB,YAAY,EAAE;IACpC;IAEAmB,WAAWA,CAAA;MACT,OAAO,IAAI,CAACM,OAAO,CAACrB,KAAK;IAC3B;IAEAyB,YAAYA,CAACF,KAAkB;MAC7B,IAAI,CAACF,OAAO,CAACL,IAAI,CAAC;QAAE,GAAGO;MAAK,CAAE,CAAC;MAC/B,IAAI,CAACjC,QAAQ,CAACvB,iBAAiB,EAAE;IACnC;IAEA2D,GAAGA,CAACC,MAAc;MAChB,MAAMJ,KAAK,GAAG,IAAI,CAACF,OAAO,CAACrB,KAAK;MAChC,IAAI,CAACuB,KAAK,IAAIA,KAAK,CAACK,KAAK,GAAGD,MAAM,EAAE,OAAO,KAAK;MAEhDJ,KAAK,CAACK,KAAK,IAAID,MAAM;MACrB,IAAI,CAACjC,MAAM,CAAC6B,KAAK,CAAC,CAAC,CAAC;MACpB,OAAO,IAAI;IACb;IAEAM,KAAKA,CAACF,MAAc;MAClB,MAAMJ,KAAK,GAAG,IAAI,CAACF,OAAO,CAACrB,KAAK;MAChC,IAAI,CAACuB,KAAK,EAAE;MAEZ,MAAMO,QAAQ,GAAGP,KAAK,CAACQ,KAAK;MAC5B,MAAMC,KAAK,GAAGT,KAAK,CAACU,UAAU,GAAGN,MAAM;MACvC,MAAMO,QAAQ,GAAGf,8DAAa,CAACa,KAAK,CAAC;MAErC,MAAMG,SAAS,GAAGD,QAAQ,GAAGJ,QAAQ;MAErC,IAAIK,SAAS,GAAG,CAAC,EAAE;QACjB,IAAI,CAAC9C,KAAK,CAAC+C,IAAI,CAAC,uBAAuBF,QAAQ,GAAG,CAAC;QAEnD;QACAX,KAAK,CAACc,EAAE,IAAI,CAAC,GAAGF,SAAS;QACzBZ,KAAK,CAACe,QAAQ,IAAI,CAAC,GAAGH,SAAS;QAC/BZ,KAAK,CAACgB,OAAO,IAAI,CAAC,GAAGJ,SAAS;QAC9BZ,KAAK,CAACiB,YAAY,IAAI,CAAC,GAAGL,SAAS;MACrC;MAEA,IAAI,CAACzC,MAAM,CAAC;QACV,GAAG6B,KAAK;QACRU,UAAU,EAAED,KAAK;QACjBD,KAAK,EAAEG;OACR,CAAC;IACJ;IAEAO,QAAQA,CAACd,MAAc;MACrB,MAAMJ,KAAK,GAAG,IAAI,CAACF,OAAO,CAACrB,KAAK;MAChC,IAAI,CAACuB,KAAK,EAAE;MACZA,KAAK,CAACK,KAAK,IAAID,MAAM;MACrB,IAAI,CAACjC,MAAM,CAAC6B,KAAK,CAAC;IACpB;IAEAmB,IAAIA,CAACf,MAAc;MACjB,MAAMJ,KAAK,GAAG,IAAI,CAACF,OAAO,CAACrB,KAAK;MAChC,IAAI,CAACuB,KAAK,EAAE;MACZA,KAAK,CAACc,EAAE,IAAIV,MAAM;MAClB,IAAI,CAACjC,MAAM,CAAC6B,KAAK,CAAC;IACpB;IAEAoB,WAAWA,CAACC,OAA6B;MACvC,MAAMrB,KAAK,GAAG,IAAI,CAACF,OAAO,CAACrB,KAAK;MAChC,IAAI,CAACuB,KAAK,EAAE;MACZ,IAAI,CAAC7B,MAAM,CAAC;QAAE,GAAG6B,KAAK;QAAE,GAAGqB;MAAO,CAAE,CAAC;IACvC;IAEAC,iBAAiBA,CAAA;MACf,MAAMC,MAAM,GAAG,IAAI,CAACzB,OAAO,CAACrB,KAAK;MACjC,OAAO8C,MAAM,GAAG5B,8FAAuB,CAAC4B,MAAM,CAAC,GAAG,IAAI;IACxD;IAEAC,kBAAkBA,CAAA;MAChB,MAAMxB,KAAK,GAAG,IAAI,CAACF,OAAO,CAACrB,KAAK;MAChC,IAAI,CAACuB,KAAK,IAAI,CAACA,KAAK,CAACyB,WAAW,EAAE;MAElC,MAAMC,GAAG,GAAG,IAAItF,IAAI,EAAE;MACtB,MAAMuF,UAAU,GAAG3B,KAAK,CAACyB,WAAW,CAAC5C,MAAM,CAAC+C,IAAI,IAAG;QACjD,MAAMC,UAAU,GAAID,IAAY,CAACC,UAAU;QAC3C,OAAO,CAACA,UAAU,IAAI,IAAIzF,IAAI,CAACyF,UAAU,CAAC,GAAGH,GAAG;MAClD,CAAC,CAAC;MAEF,IAAIC,UAAU,CAACG,MAAM,KAAK9B,KAAK,CAACyB,WAAW,CAACK,MAAM,EAAE;QAClD,IAAI,CAAC3D,MAAM,CAAC;UAAE,GAAG6B,KAAK;UAAEyB,WAAW,EAAEE;QAAU,CAAE,CAAC;MACpD;IACF;IAGAI,SAASA,CAACxD,IAAU;MAClB,MAAMyB,KAAK,GAAG,IAAI,CAACF,OAAO,CAACrB,KAAK;MAChC,IAAI,CAACuB,KAAK,IAAI,CAACzB,IAAI,CAACyD,IAAI,EAAE;MAC1B,MAAMC,QAAQ,GAAG,CAACjC,KAAK,CAACkC,aAAa,IAAI,EAAE,EAAErD,MAAM,CAACQ,CAAC,IAAIA,CAAC,CAAC2C,IAAI,KAAKzD,IAAI,CAACyD,IAAI,CAAC;MAC9E,MAAMG,WAAW,GAAG;QAAE,GAAG5D,IAAI;QAAEQ,QAAQ,EAAE;MAAI,CAAE;MAC/CiB,KAAK,CAACkC,aAAa,GAAG,CAAC,GAAGD,QAAQ,EAAEE,WAAW,CAAC;MAChD,IAAI,CAAChE,MAAM,CAAC6B,KAAK,CAAC;IACpB;IAEAoC,WAAWA,CAACJ,IAAY;MACtB,MAAMhC,KAAK,GAAG,IAAI,CAACF,OAAO,CAACrB,KAAK;MAChC,IAAI,CAACuB,KAAK,EAAE;MACZA,KAAK,CAACkC,aAAa,GAAG,CAAClC,KAAK,CAACkC,aAAa,IAAI,EAAE,EAAErD,MAAM,CAACQ,CAAC,IAAIA,CAAC,CAAC2C,IAAI,KAAKA,IAAI,CAAC;MAC9E,IAAI,CAAC7D,MAAM,CAAC6B,KAAK,CAAC;IACpB;IAEAqC,OAAOA,CAAC9D,IAAU,EAAE+D,UAAkB;MACpC,MAAMtC,KAAK,GAAG,IAAI,CAACF,OAAO,CAACrB,KAAK;MAChC,IAAI,CAACuB,KAAK,EAAE;MACZ,MAAMuC,QAAQ,GAAG;QACf,GAAGhE,IAAI;QACPsD,UAAU,EAAE,IAAIzF,IAAI,CAACA,IAAI,CAACsF,GAAG,EAAE,GAAGY,UAAU;OAC7C;MACDtC,KAAK,CAACyB,WAAW,GAAG,CAAC,IAAIzB,KAAK,CAACyB,WAAW,IAAI,EAAE,CAAC,EAAEc,QAAQ,CAAC;MAC5D,IAAI,CAACpE,MAAM,CAAC6B,KAAK,CAAC;IACpB;IAEQ7B,MAAMA,CAACO,OAAoB;MACjC,IAAI,CAACoB,OAAO,CAACL,IAAI,CAAC;QAAE,GAAGf;MAAO,CAAE,CAAC;MACjC,IAAI,CAACX,QAAQ,CAACvB,iBAAiB,EAAE;IACnC;;uBAjIWqD,aAAa,EAAAxC,sDAAA,CAAAE,+DAAA,GAAAF,sDAAA,CAAAqC,qEAAA;IAAA;;aAAbG,aAAa;MAAArC,OAAA,EAAbqC,aAAa,CAAApC,IAAA;MAAAC,UAAA,EADA;IAAM;;SACnBmC,aAAa;AAAA,K;;;;;;;;;;;;;;;;;;;ACT6B;AAGA;AACN;AACF;;;;;AAGxC,IAAM6C,eAAe;EAAtB,MAAOA,eAAe;IAGhBC,aAAA;IACAC,gBAAA;IACAC,YAAA;IAHVjH,YACU+G,aAA4B,EAC5BC,gBAAkC,EAClCC,YAA0B;MAF1B,KAAAF,aAAa,GAAbA,aAAa;MACb,KAAAC,gBAAgB,GAAhBA,gBAAgB;MAChB,KAAAC,YAAY,GAAZA,YAAY;IAClB;IAEJC,YAAYA,CAACC,IAAY;MACvB,MAAMC,MAAM,GAAGR,yDAAW,CAACO,IAAI,CAAC;MAChC,IAAI,CAACC,MAAM,EAAE,OAAO,mBAAmB;MAEvC,QAAQA,MAAM,CAACC,IAAI;QACjB,KAAK,MAAM;UACT,IAAI,CAACN,aAAa,CAACxB,IAAI,CAAC6B,MAAM,CAAC5C,MAAM,CAAC;UACtC,IAAI,CAACyC,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;UACpC,OAAOF,MAAM,CAACG,WAAW,IAAI,IAAIH,MAAM,CAAC5C,MAAM,cAAc;QAE9D,KAAK,MAAM;UACT,MAAM7B,IAAI,GAAS;YACjBhC,EAAE,EAAEyG,MAAM,CAACI,MAAM;YACjBC,IAAI,EAAEL,MAAM,CAACI,MAAM;YACnBD,WAAW,EAAE,qBAAqB;YAClCG,IAAI,EAAE,iBAAiB;YACvBL,IAAI,EAAE,WAAW;YACjB3D,UAAU,EAAE,IAAIlD,IAAI;WACrB;UACD,IAAI,CAACwG,gBAAgB,CAACtE,OAAO,CAACC,IAAI,CAAC;UACnC,IAAI,CAACsE,YAAY,CAACK,UAAU,CAAC,aAAa,CAAC;UAC3C,OAAO,kBAAkBF,MAAM,CAACI,MAAM,EAAE;QAE1C,KAAK,OAAO;UACV;UACA,IAAI,CAACP,YAAY,CAACK,UAAU,CAAC,eAAe,CAAC;UAC7C,OAAO,wBAAwBF,MAAM,CAACO,OAAO,EAAE;QAEjD,KAAK,aAAa;UAChB;UACA,OAAO,+BAA+BP,MAAM,CAACQ,MAAM,EAAE;QAEvD;UACE,OAAO,oBAAoB;MAC/B;IACF;;uBA3CWd,eAAe,EAAArF,sDAAA,CAAAE,0DAAA,GAAAF,sDAAA,CAAAqC,gEAAA,GAAArC,sDAAA,CAAAoG,wDAAA;IAAA;;aAAff,eAAe;MAAAlF,OAAA,EAAfkF,eAAe,CAAAjF,IAAA;MAAAC,UAAA,EADF;IAAM;;SACnBgF,eAAe;AAAA,K;;;;;;;;;;;;;;;;ACNrB,IAAMD,YAAY;EAAnB,MAAOA,YAAY;IACvBiB,IAAIA,CAACC,GAAW;MACd,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACF,GAAG,CAAC;MAC5BC,KAAK,CAACE,MAAM,GAAG,GAAG,CAAC,CAAC;MACpBF,KAAK,CAACF,IAAI,EAAE,CAACK,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC,CAAC;IAC/D;IAEAd,UAAUA,CAACG,IAAY;MACrB,IAAI,CAACK,IAAI,CAAC,kBAAkBL,IAAI,MAAM,CAAC;IACzC;IAEAc,aAAaA,CAACX,MAAc;MAC1B,IAAI,CAACE,IAAI,CAAC,uBAAuBF,MAAM,MAAM,CAAC;IAChD;;uBAbWf,YAAY;IAAA;;aAAZA,YAAY;MAAAjF,OAAA,EAAZiF,YAAY,CAAAhF,IAAA;MAAAC,UAAA,EADC;IAAM;;SACnB+E,YAAY;AAAA,K;;;;;;;;;;;;;;ACCnB,SAAU9C,uBAAuBA,CAAC4B,MAAmB;EACzD,MAAMG,GAAG,GAAG,IAAItF,IAAI,EAAE;EAEtB,MAAMgI,YAAY,GAA0B,CAAC,UAAU,EAAE,SAAS,EAAE,cAAc,EAAE,IAAI,CAAC;EAEzF,MAAMC,OAAO,GAAsC;IAC/CtD,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAE,CAAC;IACVC,YAAY,EAAE,CAAC;IACfH,EAAE,EAAE,CAAC;IACLT,KAAK,EAAE,CAAC;IACRG,KAAK,EAAE,CAAC;IACRE,UAAU,EAAE,CAAC;IACb4D,eAAe,EAAE,CAAC;IAClBpC,aAAa,EAAE,CAAC;IAChBT,WAAW,EAAE,CAAC;IACd8C,kBAAkB,EAAE,CAAC;IACrBC,gBAAgB,EAAE;GACrB;EAED;EACA,KAAK,MAAMjG,IAAI,IAAIgD,MAAM,CAACW,aAAa,IAAI,EAAE,EAAE;IAC7C,IAAI,CAAC3D,IAAI,CAACkG,UAAU,EAAE;IAEtB,KAAK,MAAMC,GAAG,IAAInG,IAAI,CAACkG,UAAU,EAAE;MACjC,MAAME,IAAI,GAAGD,GAAwB;MACrC,MAAME,GAAG,GAAGrG,IAAI,CAACkG,UAAU,CAACE,IAAI,CAAC;MACjC,IAAIP,YAAY,CAACS,QAAQ,CAACF,IAAI,CAAC,IAAI,OAAOC,GAAG,KAAK,QAAQ,EAAE;QAC1DP,OAAO,CAACM,IAAI,CAAC,IAAIC,GAAG,CAAC,CAAC;MACxB;IACF;EACF;EAEA;EACA,KAAK,MAAMrG,IAAI,IAAKgD,MAAM,CAACE,WAAW,IAAI,EAAE,EAAG;IAC7C,MAAMI,UAAU,GAAItD,IAAY,CAACsD,UAA8B;IAC/D,IAAIA,UAAU,IAAI,IAAIzF,IAAI,EAAE,GAAG,IAAIA,IAAI,CAACyF,UAAU,CAAC,EAAE;IAErD,IAAI,CAACtD,IAAI,CAACkG,UAAU,EAAE;IAEtB,KAAK,MAAMC,GAAG,IAAInG,IAAI,CAACkG,UAAU,EAAE;MACjC,MAAME,IAAI,GAAGD,GAAwB;MACrC,MAAME,GAAG,GAAGrG,IAAI,CAACkG,UAAU,CAACE,IAAI,CAAC;MACjC,IAAIP,YAAY,CAACS,QAAQ,CAACF,IAAI,CAAC,IAAI,OAAOC,GAAG,KAAK,QAAQ,EAAE;QAC1DP,OAAO,CAACM,IAAI,CAAC,IAAIC,GAAG,CAAC,CAAC;MACxB;IACF;EACF;EAEA,OAAO;IACL,GAAGrD,MAAM;IACTR,QAAQ,EAAEQ,MAAM,CAACR,QAAQ,GAAGsD,OAAO,CAACtD,QAAQ;IAC5CC,OAAO,EAAEO,MAAM,CAACP,OAAO,GAAGqD,OAAO,CAACrD,OAAO;IACzCC,YAAY,EAAEM,MAAM,CAACN,YAAY,GAAGoD,OAAO,CAACpD,YAAY;IACxDH,EAAE,EAAES,MAAM,CAACT,EAAE,GAAGuD,OAAO,CAACvD;GACzB;AACH,C;;;;;;;;;;;;;;;AC5DO,MAAMgE,QAAQ,GAAG,CACtB,CAAC;AAAM;AACP,GAAG;AAAI;AACP,GAAG;AAAI;AACP,GAAG;AAAI;AACP,IAAI;AAAG;AACP,IAAI;AAAG;AACP,IAAI;AAAG;AACP,IAAI;AAAG;AACP,IAAI;AAAG;AACP,IAAI,CAAG;AAAA,CACR;AAEK,SAAUlF,aAAaA,CAACmF,EAAU;EACtC,KAAK,IAAI1F,CAAC,GAAGyF,QAAQ,CAAChD,MAAM,GAAG,CAAC,EAAEzC,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC7C,IAAI0F,EAAE,IAAID,QAAQ,CAACzF,CAAC,CAAC,EAAE,OAAOA,CAAC,GAAG,CAAC;EACrC;EACA,OAAO,CAAC;AACV,C;;;;;;;;;;;;;;;;;;;ACjBmE;AAC1B;;;;;;;;IAQzChC,4DAAA,QAAmB;IAAAA,oDAAA,GAAa;IAAAA,0DAAA,EAAI;;;;IAAjBA,uDAAA,EAAa;IAAbA,+DAAA,CAAAiI,MAAA,CAAAC,OAAA,CAAa;;;AAKzB,IAAMC,gBAAgB;EAAvB,MAAOA,gBAAgB;IAIjBC,eAAA;IACAC,MAAA;IAJVH,OAAO,GAAG,EAAE;IAEZ3J,YACU6J,eAAgC,EAChCC,MAAc;MADd,KAAAD,eAAe,GAAfA,eAAe;MACf,KAAAC,MAAM,GAANA,MAAM;IACb;IAEHC,MAAMA,CAACtJ,MAAc;MACnB,IAAI,CAACkJ,OAAO,GAAG,IAAI,CAACE,eAAe,CAAC3C,YAAY,CAACzG,MAAM,CAAC;MAExD;MACAuJ,UAAU,CAAC,MAAM,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC;IACzD;IAEAC,MAAMA,CAAA;MACJ,IAAI,CAACJ,MAAM,CAACG,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC;;uBAjBWL,gBAAgB,EAAAnI,+DAAA,CAAAE,6EAAA,GAAAF,+DAAA,CAAAqC,mDAAA;IAAA;;YAAhB8F,gBAAgB;MAAAQ,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAPzBjJ,4DAAA,SAAI;UAAAA,oDAAA,sBAAe;UAAAA,0DAAA,EAAK;UAC5BA,4DAAA,uBAA8C;UAA/BA,wDAAA,yBAAAoJ,+DAAAC,MAAA;YAAA,OAAeH,GAAA,CAAAZ,MAAA,CAAAe,MAAA,CAAc;UAAA,EAAC;UAACrJ,0DAAA,EAAgB;UAC9DA,wDAAA,IAAAuJ,6BAAA,eAAmB;UAEnBvJ,4DAAA,gBAA8C;UAAnBA,wDAAA,mBAAAwJ,kDAAA;YAAA,OAASN,GAAA,CAAAT,MAAA,EAAQ;UAAA,EAAC;UAACzI,oDAAA,kBAAM;UAAAA,0DAAA,EAAS;;;UAFzDA,uDAAA,GAAa;UAAbA,wDAAA,SAAAkJ,GAAA,CAAAhB,OAAA,CAAa;;;;;;;SAKJC,gBAAgB;AAAA,K;;;;;;;;;;;;;;;;;;;ACdkB;AACQ;AACA;AACC;;;AAExD,MAAM0B,MAAM,GAAW,CAAC;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAE5B,gEAAgBA;AAAA,CAAE,CAAC;AAM3D,IAAM6B,aAAa;EAApB,MAAOA,aAAa;;uBAAbA,aAAa;IAAA;;YAAbA;IAAa;;gBAFdN,yDAAY,EAAEC,yDAAY,CAACM,QAAQ,CAACJ,MAAM,CAAC,EAAED,kEAAkB;IAAA;;SAE9DI,aAAa;AAAA;;sHAAbA,aAAa;IAAAE,YAAA,GAHT/B,gEAAgB;IAAAgC,OAAA,GACrBT,yDAAY,EAAAxJ,yDAAA,EAAiC0J,kEAAkB;EAAA;AAAA,K;;;;;;;;;;;;;;ACRpE,MAAMzE,WAAW,GAA6B;EACnD,WAAW,EAAE;IACXS,IAAI,EAAE,MAAM;IACZ7C,MAAM,EAAE,EAAE;IACV+C,WAAW,EAAE;GACd;EACD,cAAc,EAAE;IACdF,IAAI,EAAE,MAAM;IACZG,MAAM,EAAE;GACT;EACD,kBAAkB,EAAE;IAClBH,IAAI,EAAE,aAAa;IACnBO,MAAM,EAAE;GACT;EACD,oBAAoB,EAAE;IACpBP,IAAI,EAAE,OAAO;IACbM,OAAO,EAAE;;CAEZ,C;;;;;;;;;;;;;;;;ACpB8C;AACD;AACvC,SAAShI,cAAcA,CAACoM,MAAM,EAAEC,MAAM,EAAE;EAC3C,MAAMC,SAAS,GAAG,OAAOD,MAAM,KAAK,QAAQ;EAC5C,OAAO,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMC,UAAU,GAAG,IAAIP,uDAAc,CAAC;MAClCjI,IAAI,EAAGhB,KAAK,IAAK;QACbsJ,OAAO,CAACtJ,KAAK,CAAC;QACdwJ,UAAU,CAACC,WAAW,CAAC,CAAC;MAC5B,CAAC;MACDhE,KAAK,EAAE8D,MAAM;MACbG,QAAQ,EAAEA,CAAA,KAAM;QACZ,IAAIN,SAAS,EAAE;UACXE,OAAO,CAACH,MAAM,CAACQ,YAAY,CAAC;QAChC,CAAC,MACI;UACDJ,MAAM,CAAC,IAAIP,wDAAU,CAAC,CAAC,CAAC;QAC5B;MACJ;IACJ,CAAC,CAAC;IACFE,MAAM,CAACU,SAAS,CAACJ,UAAU,CAAC;EAChC,CAAC,CAAC;AACN,C","sources":["./src/app/core/services/game-save.service.ts","./src/app/core/services/inventory.service.ts","./src/app/core/services/player.service.ts","./src/app/core/services/qr-action.service.ts","./src/app/core/services/sound.service.ts","./src/app/core/utils/calculate-effective-stats.ts","./src/app/core/utils/xp-curve.ts","./src/app/views/scanner/scanner.component.ts","./src/app/views/scanner/scanner.module.ts","./src/data/qr-actions.ts","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\r\nimport { GameState } from '../models/game-state.model';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { PlayerService } from './player.service';\r\nimport { InventoryService } from './inventory.service';\r\nimport { ShopService } from './shop.service';\r\nimport { BattleService } from './battle.service';\r\nimport { BossService } from './boss.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GameSaveService {\r\n  private lastGameStateId!: number;\r\n  private currentSnapshotBuilder!: () => GameState;\r\n\r\n  constructor(private db: NgxIndexedDBService) {}\r\n\r\n  registerSnapshotBuilder(builder: () => GameState) {\r\n    this.currentSnapshotBuilder = builder;\r\n  }\r\n\r\n  async saveNewGame(state: Omit<GameState, 'id'>): Promise<GameState> {\r\n    state.updatedAt = new Date();\r\n    const result = await firstValueFrom(this.db.add('gameStates', state));\r\n    const id = typeof result === 'number' ? result : (result as any).id;\r\n    this.lastGameStateId = id;\r\n    return { ...state, id };\r\n  }\r\n\r\n  async updateCurrentGame(): Promise<GameState> {\r\n    if (!this.currentSnapshotBuilder) throw new Error('No snapshot builder registered.');\r\n    const snapshot = this.currentSnapshotBuilder();\r\n    snapshot.updatedAt = new Date();\r\n    return this.updateGame(snapshot);\r\n  }\r\n\r\n  async updateGame(state: GameState): Promise<GameState> {\r\n    await firstValueFrom(this.db.update('gameStates', state));\r\n    return state;\r\n  }\r\n\r\n  async loadGame(id: number): Promise<GameState> {\r\n    this.lastGameStateId = id;\r\n    return firstValueFrom(this.db.getByKey('gameStates', id));\r\n  }\r\n\r\n  async listGames(): Promise<GameState[]> {\r\n    return firstValueFrom(this.db.getAll('gameStates'));\r\n  }\r\n}\r\n\r\n  /* deleteGame(id: number): Promise<void> {\r\n   return firstValueFrom(this.db.delete('gameStates', id));\r\n   }*/\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Item } from '../models/item.model';\r\nimport { ToastService } from '@views/toasts/toast.service';\r\nimport { GameSaveService } from './game-save.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InventoryService {\r\n  private items$ = new BehaviorSubject<Item[]>([]);\r\n\r\n  constructor(private toast: ToastService, private gameSave: GameSaveService) {}\r\n\r\n  setInventory(items: Item[]) {\r\n    this.commit(items);\r\n  }\r\n\r\n  getInventory() {\r\n    return this.items$.asObservable();\r\n  }\r\n\r\n  addItem(item: Item) {\r\n    const current = this.items$.value;\r\n    const updated = [...current, item];\r\n    this.commit(updated);\r\n  }\r\n\r\n  addItems(items: Item[]) {\r\n    const current = this.items$.value;\r\n    const updated = [...current, ...items];\r\n    this.commit(updated);\r\n  }\r\n\r\n  removeItem(id: string) {\r\n    const current = this.items$.value;\r\n    const updated = current.filter(item => item.id !== id);\r\n    this.commit(updated);\r\n  }\r\n\r\n  updateEquippedStatus(id: string, equipped: boolean) {\r\n  const current = this.items$.value;\r\n  const updated = current.map(item =>\r\n    item.id === id ? { ...item, equipped } : item\r\n  );\r\n  this.commit(updated);\r\n}\r\n\r\nremoveSingleItem(itemToRemove: Item) {\r\n  const current = this.items$.value;\r\n  const index = current.findIndex(i => i.id === itemToRemove.id && i.acquiredAt === itemToRemove.acquiredAt);\r\n  if (index !== -1) {\r\n    current.splice(index, 1);\r\n    this.commit([...current]);\r\n  }\r\n}\r\n\r\n\r\n  getSnapshot(): Item[] {\r\n    return this.items$.value;\r\n  }\r\n\r\n  private commit(updated: Item[]) {\r\n    this.items$.next(updated);\r\n    this.gameSave.updateCurrentGame();\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { PlayerStats } from '../models/player-stats.model';\r\nimport { Item } from '@core/models/item.model';\r\nimport { calculateEffectiveStats } from '@core/utils/calculate-effective-stats';\r\nimport { GameSaveService } from './game-save.service';\r\nimport { getLevelForXp } from '../utils/xp-curve';\r\nimport { ToastService } from '@views/toasts/toast.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PlayerService {\r\n  private player$ = new BehaviorSubject<PlayerStats | null>(null);\r\n\r\n  constructor(private gameSave: GameSaveService, private toast: ToastService) { }\r\n\r\n  setPlayer(stats: PlayerStats) {\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  getPlayer() {\r\n    return this.player$.asObservable();\r\n  }\r\n\r\n  getSnapshot(): PlayerStats | null {\r\n    return this.player$.value;\r\n  }\r\n\r\n  updatePlayer(stats: PlayerStats) {\r\n    this.player$.next({ ...stats });\r\n    this.gameSave.updateCurrentGame();\r\n  }\r\n\r\n  pay(amount: number): boolean {\r\n    const stats = this.player$.value;\r\n    if (!stats || stats.money < amount) return false;\r\n\r\n    stats.money -= amount;\r\n    this.commit(stats); // nutzt jetzt zentrale commit-Methode\r\n    return true;\r\n  }\r\n\r\n  addXp(amount: number) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n\r\n    const oldLevel = stats.level;\r\n    const newXp = stats.experience + amount;\r\n    const newLevel = getLevelForXp(newXp);\r\n\r\n    const levelDiff = newLevel - oldLevel;\r\n\r\n    if (levelDiff > 0) {\r\n      this.toast.show(`Du bist jetzt Level ${newLevel}!`);\r\n\r\n      // Dauerhafte Stat-Increases (Basiswerte!)\r\n      stats.hp += 3 * levelDiff;\r\n      stats.strength += 1 * levelDiff;\r\n      stats.agility += 1 * levelDiff;\r\n      stats.intelligence += 1 * levelDiff;\r\n    }\r\n\r\n    this.commit({\r\n      ...stats,\r\n      experience: newXp,\r\n      level: newLevel\r\n    });\r\n  }\r\n\r\n  addMoney(amount: number) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    stats.money += amount;\r\n    this.commit(stats);\r\n  }\r\n\r\n  heal(amount: number) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    stats.hp += amount;\r\n    this.commit(stats);\r\n  }\r\n\r\n  updateStats(partial: Partial<PlayerStats>) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    this.commit({ ...stats, ...partial });\r\n  }\r\n\r\n  getEffectiveStats(): PlayerStats | null {\r\n    const player = this.player$.value;\r\n    return player ? calculateEffectiveStats(player) : null;\r\n  }\r\n\r\n  removeExpiredBuffs() {\r\n    const stats = this.player$.value;\r\n    if (!stats || !stats.activeBuffs) return;    \r\n\r\n    const now = new Date();\r\n    const stillValid = stats.activeBuffs.filter(buff => {\r\n      const validUntil = (buff as any).validUntil;\r\n      return !validUntil || new Date(validUntil) > now;\r\n    });\r\n\r\n    if (stillValid.length !== stats.activeBuffs.length) {\r\n      this.commit({ ...stats, activeBuffs: stillValid });\r\n    }\r\n  }\r\n\r\n\r\n  equipItem(item: Item): void {\r\n    const stats = this.player$.value;\r\n    if (!stats || !item.slot) return;\r\n    const filtered = (stats.equippedItems ?? []).filter(i => i.slot !== item.slot);\r\n    const updatedItem = { ...item, equipped: true };\r\n    stats.equippedItems = [...filtered, updatedItem];\r\n    this.commit(stats);\r\n  }\r\n\r\n  unequipItem(slot: string): void {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    stats.equippedItems = (stats.equippedItems ?? []).filter(i => i.slot !== slot);\r\n    this.commit(stats);\r\n  }\r\n\r\n  addBuff(item: Item, durationMs: number) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    const buffItem = {\r\n      ...item,\r\n      validUntil: new Date(Date.now() + durationMs)\r\n    };\r\n    stats.activeBuffs = [...(stats.activeBuffs ?? []), buffItem];\r\n    this.commit(stats);\r\n  }\r\n\r\n  private commit(updated: PlayerStats) {\r\n    this.player$.next({ ...updated });\r\n    this.gameSave.updateCurrentGame();\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { QrActionMap } from '../../../data/qr-actions';\r\nimport { QrAction } from '../models/qr-action.model';\r\nimport { Item } from '../models/item.model';\r\nimport { InventoryService } from './inventory.service';\r\nimport { PlayerService } from './player.service';\r\nimport { SoundService } from './sound.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class QrActionService {\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private inventoryService: InventoryService,\r\n    private soundService: SoundService\r\n  ) { }\r\n\r\n  handleQrCode(code: string): string {\r\n    const action = QrActionMap[code];\r\n    if (!action) return 'Unbekannter Code.';\r\n\r\n    switch (action.type) {\r\n      case 'heal':\r\n        this.playerService.heal(action.amount);\r\n        this.soundService.playEffect('heal');\r\n        return action.description ?? `+${action.amount} HP geheilt.`;\r\n\r\n      case 'item':\r\n        const item: Item = {\r\n          id: action.itemId,\r\n          name: action.itemId,\r\n          description: 'Ein mächtiges Item.',\r\n          icon: 'placeholder.png',\r\n          type: 'equipment',\r\n          acquiredAt: new Date()\r\n        };\r\n        this.inventoryService.addItem(item);\r\n        this.soundService.playEffect('item-kaufen');\r\n        return `Item erhalten: ${action.itemId}`;\r\n\r\n      case 'quest':\r\n        // questService.addQuest(action.questId); // später\r\n        this.soundService.playEffect('quest-annahme');\r\n        return `Neue Quest erhalten: ${action.questId}`;\r\n\r\n      case 'startBattle':\r\n        // navigationService.navigateToBattle(action.bossId); → später\r\n        return `Kampf gegen Boss gestartet: ${action.bossId}`;\r\n\r\n      default:\r\n        return 'Unbekannte Aktion.';\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SoundService {\r\n  play(src: string): void {\r\n    const audio = new Audio(src);\r\n    audio.volume = 0.8; // anpassbar\r\n    audio.play().catch(err => console.error('Soundfehler:', err));\r\n  }\r\n\r\n  playEffect(name: string): void {\r\n    this.play(`/assets/sounds/${name}.mp3`);\r\n  }\r\n\r\n  playBossMusic(bossId: string): void {\r\n    this.play(`/assets/sounds/boss-${bossId}.mp3`);\r\n  }\r\n\r\n\r\n}\r\n","// utils/calculate-effective-stats.ts\r\nimport { PlayerStats } from '../models/player-stats.model';\r\nimport { Item } from '../models/item.model';\r\n\r\nexport function calculateEffectiveStats(player: PlayerStats): PlayerStats {\r\n  const now = new Date();\r\n\r\n  const numericStats: (keyof PlayerStats)[] = ['strength', 'agility', 'intelligence', 'hp'];\r\n\r\n  const bonuses: Record<keyof PlayerStats, number> = {\r\n      strength: 0,\r\n      agility: 0,\r\n      intelligence: 0,\r\n      hp: 0,\r\n      money: 0,\r\n      level: 0,\r\n      experience: 0,\r\n      questsCompleted: 0,\r\n      equippedItems: 0,\r\n      activeBuffs: 0,\r\n      lastBuffFoodUsedAt: 0,\r\n      lastPotionUsedAt: 0\r\n  };\r\n\r\n  // Ausrüstung\r\n  for (const item of player.equippedItems ?? []) {\r\n    if (!item.bonusStats) continue;\r\n\r\n    for (const key in item.bonusStats) {\r\n      const stat = key as keyof PlayerStats;\r\n      const val = item.bonusStats[stat];\r\n      if (numericStats.includes(stat) && typeof val === 'number') {\r\n        bonuses[stat] += val; // ✅ berücksichtigt auch negative Werte\r\n      }\r\n    }\r\n  }\r\n\r\n  // Aktive Buffs\r\n  for (const item of (player.activeBuffs ?? [])) {\r\n    const validUntil = (item as any).validUntil as Date | undefined;\r\n    if (validUntil && new Date() > new Date(validUntil)) continue;\r\n\r\n    if (!item.bonusStats) continue;\r\n\r\n    for (const key in item.bonusStats) {\r\n      const stat = key as keyof PlayerStats;\r\n      const val = item.bonusStats[stat];\r\n      if (numericStats.includes(stat) && typeof val === 'number') {\r\n        bonuses[stat] += val; // ✅ auch hier: negativ erlaubt\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...player,\r\n    strength: player.strength + bonuses.strength,\r\n    agility: player.agility + bonuses.agility,\r\n    intelligence: player.intelligence + bonuses.intelligence,\r\n    hp: player.hp + bonuses.hp,\r\n  };\r\n}\r\n","export const XP_TABLE = [\r\n  0,     // Level 1\r\n  100,   // Level 2\r\n  350,   // Level 3\r\n  700,   // Level 4\r\n  1200,  // Level 5\r\n  1900,  // Level 6\r\n  2800,  // Level 7\r\n  3900,  // Level 8\r\n  5200,  // Level 9\r\n  7400   // Level 10\r\n];\r\n\r\nexport function getLevelForXp(xp: number): number {\r\n  for (let i = XP_TABLE.length - 1; i >= 0; i--) {\r\n    if (xp >= XP_TABLE[i]) return i + 1;\r\n  }\r\n  return 1;\r\n}","import { Component } from '@angular/core';\r\nimport { QrActionService } from '@core/services/qr-action.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-scanner',\r\n  standalone: false,\r\n  template: `\r\n    <h2>QR-Code scannen</h2>\r\n<zxing-scanner (scanSuccess)=\"onScan($event)\"></zxing-scanner>\r\n<p *ngIf=\"message\">{{ message }}</p>\r\n\r\n<button class=\"rpg-button\" (click)=\"goBack()\">Zurück</button>\r\n  `\r\n})\r\nexport class ScannerComponent {\r\n  message = '';\r\n\r\n  constructor(\r\n    private qrActionService: QrActionService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  onScan(result: string) {\r\n    this.message = this.qrActionService.handleQrCode(result);\r\n\r\n    // Optional: Auto zurück nach 3 Sek.\r\n    setTimeout(() => this.router.navigate(['/game']), 3000);\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/game']);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ScannerComponent } from './scanner.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\r\n\r\nconst routes: Routes = [{ path: '', component: ScannerComponent }];\r\n\r\n@NgModule({\r\n  declarations: [ScannerComponent],\r\n  imports: [CommonModule, RouterModule.forChild(routes), ZXingScannerModule]\r\n})\r\nexport class ScannerModule {}","import { QrAction } from '../app/core/models/qr-action.model';\r\n\r\nexport const QrActionMap: Record<string, QrAction> = {\r\n  'heal-bier': {\r\n    type: 'heal',\r\n    amount: 10,\r\n    description: 'Du trinkst ein Bier und fühlst dich besser.'\r\n  },\r\n  'item-schwert': {\r\n    type: 'item',\r\n    itemId: 'sword-of-glory'\r\n  },\r\n  'start-battle-max': {\r\n    type: 'startBattle',\r\n    bossId: 'max'\r\n  },\r\n  'quest-goldene-hose': {\r\n    type: 'quest',\r\n    questId: 'goldene-hose'\r\n  }\r\n};\r\n","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n"],"names":["NgxIndexedDBService","firstValueFrom","GameSaveService","db","lastGameStateId","currentSnapshotBuilder","constructor","registerSnapshotBuilder","builder","saveNewGame","state","_this","_asyncToGenerator","updatedAt","Date","result","add","id","updateCurrentGame","_this2","Error","snapshot","updateGame","_this3","update","loadGame","_this4","getByKey","listGames","_this5","getAll","i0","ɵɵinject","i1","factory","ɵfac","providedIn","BehaviorSubject","ToastService","InventoryService","toast","gameSave","items$","setInventory","items","commit","getInventory","asObservable","addItem","item","current","value","updated","addItems","removeItem","filter","updateEquippedStatus","equipped","map","removeSingleItem","itemToRemove","index","findIndex","i","acquiredAt","splice","getSnapshot","next","i2","calculateEffectiveStats","getLevelForXp","PlayerService","player$","setPlayer","stats","getPlayer","updatePlayer","pay","amount","money","addXp","oldLevel","level","newXp","experience","newLevel","levelDiff","show","hp","strength","agility","intelligence","addMoney","heal","updateStats","partial","getEffectiveStats","player","removeExpiredBuffs","activeBuffs","now","stillValid","buff","validUntil","length","equipItem","slot","filtered","equippedItems","updatedItem","unequipItem","addBuff","durationMs","buffItem","QrActionMap","SoundService","QrActionService","playerService","inventoryService","soundService","handleQrCode","code","action","type","playEffect","description","itemId","name","icon","questId","bossId","i3","play","src","audio","Audio","volume","catch","err","console","error","playBossMusic","numericStats","bonuses","questsCompleted","lastBuffFoodUsedAt","lastPotionUsedAt","bonusStats","key","stat","val","includes","XP_TABLE","xp","Router","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","message","ScannerComponent","qrActionService","router","onScan","setTimeout","navigate","goBack","ɵɵdirectiveInject","selectors","decls","vars","consts","template","ScannerComponent_Template","rf","ctx","ɵɵlistener","ScannerComponent_Template_zxing_scanner_scanSuccess_2_listener","$event","ɵɵtemplate","ScannerComponent_p_3_Template","ScannerComponent_Template_button_click_4_listener","ɵɵproperty","CommonModule","RouterModule","ZXingScannerModule","routes","path","component","ScannerModule","forChild","declarations","imports","EmptyError","SafeSubscriber","source","config","hasConfig","Promise","resolve","reject","subscriber","unsubscribe","complete","defaultValue","subscribe"],"sourceRoot":"webpack:///","x_google_ignoreList":[10]}