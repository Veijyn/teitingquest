{"version":3,"file":"src_app_views_game_game_module_ts.js","mappings":"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","sources":["./src/app/components/boss-list/boss-list.ts","./src/app/components/boss-list/boss-list.html","./src/app/components/inventory/inventory.ts","./src/app/components/inventory/inventory.html","./src/app/components/questlog/questlog.ts","./src/app/components/questlog/questlog.html","./src/app/components/shop/shop.ts","./src/app/components/shop/shop.html","./src/app/components/stats/stats.ts","./src/app/components/stats/stats.html","./src/app/views/game/game.component.ts","./src/app/views/game/game.component.html","./src/app/views/game/game.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { BossService } from '@core/services/boss.service';\r\nimport { Boss } from '@core/models/boss.model';\r\nimport { BattleService } from '@core/services/battle.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-boss-list',\r\n  standalone: false,\r\n  templateUrl: './boss-list.html',\r\n  styleUrls: ['./boss-list.scss']\r\n})\r\nexport class BossListComponent implements OnInit {\r\n  bosses: Boss[] = [];\r\n  advantageVisibility: Record<string, boolean> = {}; \r\n\r\n  constructor(\r\n    private bossService: BossService,\r\n    private battleService: BattleService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.bossService.getBosses().subscribe(b => {\r\n      this.bosses = b;\r\n      this.bosses.forEach(boss => this.advantageVisibility[boss.id] = false); \r\n    });\r\n  }\r\n\r\n  toggleAdvantages(bossId: string) {\r\n    this.advantageVisibility[bossId] = !this.advantageVisibility[bossId];\r\n  }\r\n\r\n  showAdvantages(bossId: string): boolean {\r\n    return this.advantageVisibility[bossId];\r\n  }\r\n\r\n  startBattle(bossId: string) {\r\n    this.battleService.startBattle(bossId);\r\n    this.router.navigate(['/battle']);\r\n  }\r\n\r\n  statIcon(stat: string): string {\r\n  switch (stat) {\r\n    case 'strength': return '🗡️';\r\n    case 'agility': return '🎯';\r\n    case 'intelligence': return '🧠';\r\n    case 'hp': return '❤️';\r\n    case 'level': return '⭐';\r\n    case 'money': return '💰';\r\n    case 'experience': return '📘';\r\n    default: return '❔';\r\n  }\r\n}\r\n\r\n}\r\n","<div class=\"boss-list\">\r\n  <h2>Bossübersicht</h2>\r\n\r\n  <div *ngFor=\"let boss of bosses\" class=\"boss-card\" [class.defeated]=\"boss.defeated\">\r\n    <img [src]=\"'assets/icons/' + boss.image\" alt=\"{{ boss.name }}\" *ngIf=\"boss.image\" />\r\n    <div class=\"boss-details\">\r\n      <h3>{{ boss.name }}</h3>\r\n      <p class=\"description\">{{ boss.description }}</p>\r\n\r\n      <p>Status: <strong>{{ boss.defeated ? 'Besiegt' : 'Bereit zum Kampf' }}</strong></p>\r\n      <p *ngIf=\"boss.attempts\">Versuche: {{ boss.attempts }}</p>\r\n\r\n      <!--<div *ngIf=\"boss.advantages?.length\" class=\"advantages\">\r\n        <button class=\"toggle-btn\" (click)=\"toggleAdvantages(boss.id)\">\r\n          {{ showAdvantages(boss.id) ? '−' : '+' }} Pot. Vorteile\r\n        </button>\r\n\r\n        <div class=\"advantages-list\" *ngIf=\"showAdvantages(boss.id)\">\r\n          <div *ngFor=\"let adv of boss.advantages\" class=\"advantage-entry\">\r\n            <div class=\"advantage-header\">\r\n              <span class=\"advantage-name\">{{ adv.name }}</span>\r\n              <span class=\"advantage-desc\">{{ adv.description }}</span>\r\n            </div>\r\n\r\n            <div class=\"conditions\">\r\n              <span *ngFor=\"let cond of adv.condition\" class=\"condition-pill\">\r\n                <span class=\"icon-stat\">{{ statIcon(cond.stat) }}</span>\r\n                <span>{{ cond.stat }} {{ cond.operator }} {{ cond.value }}</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>-->\r\n\r\n      <button class=\"rpg-button\" (click)=\"startBattle(boss.id)\" [disabled]=\"boss.defeated\">\r\n        Kampf starten\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { Item } from '@core/models/item.model';\r\nimport { GameSaveService } from '@core/services/game-save.service';\r\nimport { PlayerStats } from '@core/models/player-stats.model';\r\nimport { ToastService } from '@views/toasts/toast.service';\r\nimport { SoundService } from '@core/services/sound.service';\r\n\r\ntype NumericStatKey = 'hp' | 'strength' | 'agility' | 'intelligence' | 'money' | 'experience' | 'level';\r\n\r\ntype NumericStats = Pick<PlayerStats, NumericStatKey>;\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  standalone: false,\r\n  templateUrl: './inventory.html',\r\n  styleUrls: ['./inventory.scss']\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n  items: Item[] = [];\r\n  statIcon(stat: string): string {\r\n    switch (stat) {\r\n      case 'strength': return '🗡️';\r\n      case 'agility': return '🎯';\r\n      case 'intelligence': return '🧠';\r\n      case 'hp': return '❤️';\r\n      case 'money': return '💰';\r\n      case 'level': return '⭐';\r\n      case 'experience': return '📘';\r\n      default: return '';\r\n    }\r\n  }\r\n\r\n\r\n  constructor(private inventoryService: InventoryService, private playerService: PlayerService,\r\n    private gameSave: GameSaveService, private toastService: ToastService, private soundService: SoundService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.inventoryService.getInventory().subscribe(items => {\r\n      this.items = items.filter(item => item.available !== false).sort((a, b) => {\r\n        const order = ['equipment', 'consumable', 'buff', 'quest'];\r\n        return order.indexOf(a.type) - order.indexOf(b.type);\r\n      });\r\n    });\r\n  }\r\n\r\n  getGermanItemType(type: string): string {\r\n    switch (type) {\r\n      case 'equipment': return 'Ausrüstung';\r\n      case 'consumable': return 'Verbrauchbar';\r\n      case 'buff': return 'Buff';\r\n      case 'quest': return 'Quest-Gegenstand';\r\n      default: return type;\r\n    }\r\n  }\r\n\r\n  useItem(item: Item) {\r\n    const now = Date.now();\r\n    const durationMs = 1000 * 60 * 5;\r\n    const stats = this.playerService.getSnapshot();\r\n\r\n    const isBuffFood = item.name?.endsWith('(Bufffood)');\r\n    const isPotion = item.id === 'potion';\r\n\r\n    // Bufffood-Cooldown prüfen\r\n    if (isBuffFood && stats?.lastBuffFoodUsedAt) {\r\n      const last = new Date(stats.lastBuffFoodUsedAt).getTime();\r\n      if (now - last < 1000 * 60 * 5) {\r\n        this.toastService.show('Du musst 5 Minuten warten, bevor du weiteres Bufffood verwenden kannst.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Potion-Cooldown prüfen\r\n    if (isPotion && stats?.lastPotionUsedAt) {\r\n      const last = new Date(stats.lastPotionUsedAt).getTime();\r\n      if (now - last < 1000 * 60 * 5) {\r\n        this.toastService.show('Du musst 5 Minuten warten, bevor du einen weiteren Trank trinken kannst.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Bonuswerte für Tooltip sammeln\r\n    const buffs = Object.entries(item.bonusStats ?? {}).map(([key, val]) => {\r\n      const amount = typeof val === 'number' ? val : 0;\r\n      return `${this.statIcon(key)} +${amount}`;\r\n    });\r\n\r\n    // Buff-Item mit Dauer\r\n    if (item.type === 'buff') {\r\n      this.playerService.addBuff(item, durationMs);\r\n\r\n      // Cooldown-Zeit setzen\r\n      if (isBuffFood) {\r\n        this.playerService.updateStats({ lastBuffFoodUsedAt: new Date().toISOString() });\r\n        setTimeout(() => {\r\n        this.playerService.removeExpiredBuffs();\r\n      }, durationMs);\r\n      }\r\n      if (isPotion) {\r\n        this.playerService.updateStats({ lastPotionUsedAt: new Date().toISOString() });\r\n      }    \r\n\r\n      this.soundService.playEffect('trank-benutzen');\r\n      this.inventoryService.removeSingleItem(item);\r\n      this.toastService.show(`Buff aktiv: ${buffs.join(', ')}`);\r\n    }\r\n\r\n    // Consumable → direkte Stats-Änderung\r\n    if (item.type === 'consumable') {\r\n      const statsToApply: Partial<NumericStats> = {};\r\n\r\n      for (const [key, val] of Object.entries(item.bonusStats ?? {})) {\r\n        if (typeof val === 'number' && (key as NumericStatKey)) {\r\n          statsToApply[key as NumericStatKey] = val;\r\n        }\r\n      }\r\n\r\n      this.soundService.playEffect('item-benutzen');\r\n      this.playerService.updateStats(statsToApply);\r\n      this.inventoryService.removeSingleItem(item); // 👈 nur EIN Item entfernen!\r\n      this.toastService.show(`Verbraucht: ${buffs.join(', ')}`);\r\n    }\r\n\r\n    this.gameSave.updateCurrentGame();\r\n  }\r\n\r\n  checkForUnlockedEquipment() {\r\n    const player = this.playerService.getSnapshot() ?? { questsCompleted: 0 };\r\n    const inventory = this.inventoryService.getSnapshot();\r\n\r\n    const unlocked: Item[] = [];\r\n\r\n    const updated = inventory.map(item => {\r\n      if (\r\n        item.type === 'equipment' &&\r\n        item.questsRequired != null &&\r\n        item.questsRequired <= (player.questsCompleted ?? 0) &&\r\n        item.available !== true\r\n      ) {\r\n        unlocked.push({ ...item, available: true });\r\n        return { ...item, available: true };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    if (unlocked.length > 0) {\r\n      this.inventoryService.setInventory(updated);\r\n      // optional: notify the player\r\n      //console.log('Neue Ausrüstung verfügbar:', unlocked.map(i => i.name).join(', '));\r\n    }\r\n  }\r\n\r\n  toggleEquip(item: Item) {\r\n    const equipped = !item.equipped;\r\n\r\n    // 1. Inventory aktualisieren\r\n    this.inventoryService.updateEquippedStatus(item.id, equipped);\r\n\r\n    // 2. Neuestes Item holen\r\n    const latestItem = this.inventoryService.getSnapshot().find(i => i.id === item.id);\r\n    if (!latestItem || !latestItem.slot) {\r\n      console.warn('Kein gültiger Slot-Item gefunden für Equip:', latestItem);\r\n      return;\r\n    }\r\n\r\n    // 3. Player aktualisieren\r\n    if (equipped) {\r\n      this.playerService.equipItem(latestItem);\r\n    } else {\r\n      this.playerService.unequipItem(latestItem.slot);\r\n    }\r\n\r\n    // 4. Spiel speichern\r\n    this.gameSave.updateCurrentGame();\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"inventory\">\r\n  <h2>Inventar</h2>\r\n  <div *ngIf=\"items.length === 0\" class=\"empty-note\">\r\n    Du besitzt keine Items.\r\n  </div>\r\n\r\n  <div class=\"item-list\">\r\n    <div class=\"item-card\" *ngFor=\"let item of items\">\r\n      <img class=\"item-icon\" [src]=\"'assets/icons/' + item.icon\" alt=\"{{ item.name }}\" />\r\n      <div class=\"item-details\">\r\n        <div class=\"item-header\">\r\n          <strong class=\"item-name\">{{ item.name }}</strong>\r\n          <span class=\"item-type\">({{ getGermanItemType(item.type) }})</span>\r\n        </div>\r\n        <p class=\"item-description\">{{ item.description }}</p>\r\n\r\n        <div class=\"item-bonuses\" *ngIf=\"item.bonusStats\">\r\n          <span *ngIf=\"item.bonusStats.hp\">❤️ HP +{{ item.bonusStats.hp }}</span>\r\n          <span *ngIf=\"item.bonusStats.strength\">🗡️ Stärke +{{ item.bonusStats.strength }}</span>\r\n          <span *ngIf=\"item.bonusStats.agility\">🎯 Geschicklichkeit +{{ item.bonusStats.agility }}</span>\r\n          <span *ngIf=\"item.bonusStats.intelligence\">🧠 Intelligenz +{{ item.bonusStats.intelligence }}</span>\r\n        </div>\r\n        <div class=\"item-actions\">\r\n          <button class=\"rpg-button small buff-button\" *ngIf=\"item.type === 'buff'\" (click)=\"useItem(item)\"\r\n            title=\"Temporärer Effekt – hält 30 Minuten\">\r\n            Anwenden\r\n          </button>\r\n\r\n          <button class=\"rpg-button small consumable-button\" *ngIf=\"item.type === 'consumable'\" (click)=\"useItem(item)\"\r\n            title=\"Einmaliger Soforteffekt\">\r\n            Verwenden\r\n          </button>\r\n\r\n          <button class=\"rpg-button small equipment-button\" *ngIf=\"item.type === 'equipment'\"\r\n            (click)=\"toggleEquip(item)\" [title]=\"item.equipped ? 'Ausrüstung entfernen' : 'Ausrüstung anlegen'\">\r\n            {{ item.equipped ? 'Entfernen' : 'Anlegen' }}\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { QuestService } from '@core/services/quest.service';\r\nimport { Quest } from '@core/models/quest.model';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\n\r\n@Component({\r\n  selector: 'app-questlog',\r\n  standalone: false,\r\n  templateUrl: './questlog.html',\r\n  styleUrls: ['./questlog.scss']\r\n})\r\nexport class QuestlogComponent implements OnInit {\r\n  quests: Quest[] = [];\r\n  filter: 'main' | 'side' = 'main';\r\n\r\n  constructor(private questService: QuestService, private inventoryService: InventoryService,\r\n    private playerService: PlayerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.questService.getQuests().subscribe(qs => this.quests = qs);\r\n  }\r\n\r\n  toggleFilter(type: 'main' | 'side') {\r\n    this.filter = type;\r\n  }\r\n\r\n  get filteredQuests() {\r\n    return this.quests.filter(q => q.type === this.filter && q.acquired);\r\n  }\r\n\r\n  startQuest(id: string) {\r\n    this.questService.startQuest(id);\r\n  }\r\n\r\n  failQuest(id: string) {\r\n    this.questService.failQuest(id);\r\n  }\r\n\r\n  completeQuest(id: string) {\r\n    this.questService.markCompleted(id, this.inventoryService, this.playerService);\r\n  }\r\n\r\n  // confirmingAction: { type: 'complete' | 'fail'; questId: string } | null = null;\r\n\r\n  // openConfirm(type: 'complete' | 'fail', questId: string) {\r\n  //   this.confirmingAction = { type, questId };\r\n  // }\r\n\r\n  // cancelConfirm() {\r\n  //   this.confirmingAction = null;\r\n  // }\r\n\r\n  // confirmAction() {\r\n  //   if (!this.confirmingAction) return;\r\n  //   const { type, questId } = this.confirmingAction;\r\n  //   if (type === 'complete') this.questService.markCompleted(questId, this.inventoryService, this.playerService);\r\n  //   else this.questService.failQuest(questId);\r\n  //   this.confirmingAction = null;\r\n  // }\r\n\r\n  get completedQuestsCount() {\r\n    return this.quests.filter(q => q.status === 'completed').length;\r\n  }\r\n\r\n  isInteractiveQuest(quest: Quest): boolean {\r\n    const isSide = quest.type === 'side';\r\n    const isTutorial = quest.id === 'tutorial';\r\n    const isFinale = quest.id === 'finale-tracking';\r\n\r\n    if (isSide || isTutorial) return true;\r\n\r\n    if (isFinale) {\r\n      const otherMainQuests = this.quests.filter(q =>\r\n        q.type === 'main' &&\r\n        q.id !== 'finale-tracking' &&\r\n        q.acquired &&\r\n        q.status !== 'completed' &&\r\n        q.status !== 'failed'\r\n      );\r\n      // Nur interaktiv, wenn KEINE andere Hauptquest mehr aktiv ist\r\n      return otherMainQuests.length === 0;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  cancelQuest(id: string) {\r\n    this.questService.cancelQuest(id);\r\n  }\r\n\r\n}\r\n","<!-- Modal auskommentieren -->\r\n<!--\r\n<div class=\"modal-backdrop\" *ngIf=\"confirmingAction\">\r\n  <div class=\"modal-panel\">\r\n    <p>Diese Quest wirklich {{ confirmingAction.type === 'complete' ? 'abschließen' : 'als fehlgeschlagen' }} markieren?</p>\r\n    <div class=\"modal-buttons\">\r\n      <button class=\"rpg-button\" (click)=\"confirmAction()\">Ja</button>\r\n      <button class=\"rpg-button\" (click)=\"cancelConfirm()\">Nein</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n-->\r\n<div class=\"questlog\">\r\n  <h2>Questlog</h2>\r\n  <p class=\"quest-stats\">Abgeschlossene Quests: {{ completedQuestsCount }}</p>\r\n  <div class=\"filters\">\r\n    <button [class.active]=\"filter === 'main'\" (click)=\"toggleFilter('main')\">Hauptquests</button>\r\n    <button [class.active]=\"filter === 'side'\" (click)=\"toggleFilter('side')\">Nebenquests</button>\r\n  </div>\r\n\r\n  <ul>\r\n    <li *ngFor=\"let quest of filteredQuests\" [class.completed]=\"quest.status === 'completed'\">\r\n      <h3>{{ quest.title }}\r\n        <button *ngIf=\"quest.type === 'side' && quest.status === 'doing'\" class=\"quest-cancel-btn\"\r\n          title=\"Quest abbrechen\" (click)=\"cancelQuest(quest.id)\">\r\n          ✖\r\n        </button>\r\n      </h3>\r\n      <p>{{ quest.description }}</p>\r\n      <p class=\"status\" [ngClass]=\"quest.status\">Status: {{ quest.status }}</p>\r\n\r\n      <div *ngIf=\"quest.rewardItems?.length || quest.rewardXp || quest.rewardMoney\" class=\"reward\">\r\n        <strong>Belohnung:</strong>\r\n        <ul>\r\n          <li *ngFor=\"let item of quest.rewardItems\">{{ item.name }}</li>\r\n          <li *ngIf=\"quest.rewardXp\">XP: {{ quest.rewardXp }}</li>\r\n          <li *ngIf=\"quest.rewardMoney\">💰: {{ quest.rewardMoney }}</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div *ngIf=\"quest.failedAttempts\">Fehlversuche: {{ quest.failedAttempts }}</div>\r\n\r\n      <div class=\"actions\" *ngIf=\"isInteractiveQuest(quest) && quest.status === 'open'\">\r\n        <button class=\"rpg-button\" (click)=\"startQuest(quest.id)\">Quest starten</button>\r\n      </div>\r\n\r\n      <div class=\"actions\" *ngIf=\"isInteractiveQuest(quest) && quest.status === 'doing'\">\r\n        <button class=\"rpg-button\" (click)=\"completeQuest(quest.id)\">Erledigt</button>\r\n        <button class=\"rpg-button\" (click)=\"failQuest(quest.id)\">Fehlgeschlagen</button>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { SoundService } from '@core/services/sound.service';\r\nimport { ShopItem } from '@core/models/item.model';\r\nimport { createShopItems } from './shop.factory';\r\nimport { GameState } from '@core/models/game-state.model';\r\nimport { GameSaveService } from '@core/services/game-save.service';\r\nimport { ShopService } from '@core/services/shop.service';\r\nimport { ToastService } from '@views/toasts/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  standalone: false,\r\n  templateUrl: './shop.html',\r\n  styleUrls: ['./shop.scss']\r\n})\r\nexport class ShopComponent implements OnInit {\r\n  itemsForSale: ShopItem[] = [];\r\n\r\n  constructor(\r\n    private inventoryService: InventoryService,\r\n    private playerService: PlayerService,\r\n    private soundService: SoundService,\r\n    private shopService: ShopService,\r\n    private gameSave: GameSaveService,\r\n    private toast: ToastService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.shopService.getShopItems().subscribe(items => {\r\n      this.itemsForSale = items;\r\n    });\r\n  }\r\n\r\n  async buy(item: ShopItem) {\r\n    if (item.stock <= 0) return;\r\n\r\n    if (this.playerService.pay(item.price!)) {\r\n      const purchasedItem = { ...item, acquiredAt: new Date() };\r\n      this.inventoryService.addItem(purchasedItem);\r\n      this.shopService.updateStock(item.id, -1);\r\n\r\n      try {\r\n        await this.gameSave.updateCurrentGame();\r\n        this.soundService.playEffect('item-kaufen');\r\n        this.toast.show(`Gekauft: ${item.name}`);\r\n      } catch (err) {\r\n        console.error('Fehler beim Speichern:', err);\r\n        //this.showMessage('Fehler beim Speichern!');\r\n      }\r\n    } else {\r\n      this.toast.show('Nicht genug Gil!');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"shop\">\r\n  <h2>Shop</h2>\r\n  <div class=\"item-list\">\r\n    <div class=\"item\" *ngFor=\"let item of itemsForSale\">\r\n      <img class=\"item-icon\" [src]=\"'assets/icons/' + item.icon\" />\r\n      <div class=\"item-info\">\r\n        <strong>{{ item.name }}</strong>\r\n        <p>{{ item.description }}</p>\r\n        <p>Preis: {{ item.price }} Gil</p>\r\n        <p *ngIf=\"item.stock > 0\">Verfügbar: {{ item.stock }}</p>\r\n        <p *ngIf=\"item.stock === 0\" class=\"sold-out\">Ausverkauft</p>\r\n        <button class=\"rpg-button small\" [disabled]=\"item.stock === 0\" (click)=\"buy(item)\">\r\n          Kaufen\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { PlayerStats } from '@core/models/player-stats.model';\r\nimport { calculateStatBonuses } from '@core/utils/bonus';\r\nimport { EquipmentSlot, Item } from '@core/models/item.model';\r\n\r\n@Component({\r\n  selector: 'app-stats',\r\n  templateUrl: './stats.html',\r\n  styleUrls: ['./stats.scss']\r\n})\r\nexport class StatsComponent implements OnInit {\r\n  baseStats: PlayerStats | null = null;\r\n  bonusStats: Partial<PlayerStats> = {};\r\n  equippedItems: Item[] = [];\r\n  activeBuffs: Item[] = [];\r\n\r\n  XP_TABLE = [0, 100, 200, 350, 500, 700, 950, 1200, 1500, 1900];\r\n\r\n  // Slots in gewünschter Reihenfolge\r\n  equipmentSlots: EquipmentSlot[] = [\r\n    'head', 'chest', 'hands', 'legs', 'feet',\r\n    'weapon', 'back', 'shoulders', 'belt', 'wrist'\r\n  ];\r\n\r\n  slotLabels: Record<EquipmentSlot, string> = {\r\n    head: 'Kopf',\r\n    chest: 'Brust',\r\n    hands: 'Hände',\r\n    legs: 'Beine',\r\n    feet: 'Füße',\r\n    weapon: 'Waffe',\r\n    back: 'Rücken',\r\n    shoulders: 'Schultern',\r\n    belt: 'Gürtel',\r\n    wrist: 'Handgelenke'\r\n  };\r\n\r\n  statsKeys: (keyof PlayerStats)[] = [\r\n    'hp', 'strength', 'agility', 'intelligence',\r\n    'money'\r\n  ];\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private inventoryService: InventoryService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.playerService.getPlayer().subscribe(p => {\r\n      if (!p) return;\r\n      this.playerService.removeExpiredBuffs();\r\n      const effectiveStats = this.playerService.getEffectiveStats();\r\n      if (!effectiveStats) return;\r\n\r\n      this.baseStats = p;\r\n      this.equippedItems = p.equippedItems ?? [];\r\n      this.bonusStats = {\r\n        strength: effectiveStats.strength - p.strength,\r\n        agility: effectiveStats.agility - p.agility,\r\n        intelligence: effectiveStats.intelligence - p.intelligence,\r\n        hp: effectiveStats.hp - p.hp\r\n      };\r\n      this.activeBuffs = (p.activeBuffs ?? []).filter(buff => {\r\n        const validUntil = (buff as any).validUntil as Date;\r\n        return !validUntil || validUntil > new Date();\r\n      });\r\n    });\r\n  }\r\n\r\n  getBonus(key: keyof PlayerStats): number {\r\n    const value = this.bonusStats?.[key];\r\n    return typeof value === 'number' ? value : 0;\r\n  }\r\n\r\n  getBonusPrefix(key: keyof PlayerStats): string {\r\n    const bonus = this.getBonus(key);\r\n    return bonus > 0 ? '+' : '';\r\n  }\r\n\r\n  // Hilfsfunktion für Tooltip\r\n  formatBuffTooltip(buff: Item): string {\r\n    const untilRaw = (buff as any).validUntil;\r\n    const until = typeof untilRaw === 'string' ? new Date(untilRaw) : untilRaw;\r\n    const timeLeft = until instanceof Date\r\n      ? Math.ceil((until.getTime() - Date.now()) / 60000)\r\n      : null;\r\n\r\n    const bonuses = Object.entries(buff.bonusStats ?? {})\r\n      .map(([key, val]) => `${this.getStatLabel(key)} +${val}`)\r\n      .join(', ');\r\n\r\n    return `${bonuses}${timeLeft !== null ? `\\n🕒 ${timeLeft} Min aktiv` : ''}`;\r\n  }\r\n\r\n  statIcon(stat: string): string {\r\n    switch (stat) {\r\n      case 'strength': return '🗡️';\r\n      case 'agility': return '🎯';\r\n      case 'intelligence': return '🧠';\r\n      case 'hp': return '❤️';\r\n      case 'money': return '💰';\r\n      case 'level': return '⭐';\r\n      case 'experience': return '📘';\r\n      default: return '';\r\n    }\r\n  }\r\n\r\n  getEquippedItem(slot: EquipmentSlot): Item | undefined {\r\n    return this.equippedItems.find(i => i.slot === slot);\r\n  }\r\n\r\n  getXpPercent(): number {\r\n    const currentXp = this.baseStats?.experience ?? 0;\r\n    const xpForNext = 100; // Beispiel – oder dynamisch\r\n    return Math.min((currentXp / xpForNext) * 100, 100);\r\n  }\r\n\r\n  getXpProgress(): number {\r\n    const stats = this.baseStats;\r\n    if (!stats) return 0;\r\n\r\n    const currentLevel = stats.level ?? 1;\r\n    const totalXp = stats.experience ?? 0;\r\n\r\n    if (currentLevel >= this.XP_TABLE.length) return 100; // Max-Level erreicht\r\n\r\n    const xpAtCurrent = this.XP_TABLE[currentLevel - 1];\r\n    const xpAtNext = this.XP_TABLE[currentLevel];\r\n\r\n    const progress = ((totalXp - xpAtCurrent) / (xpAtNext - xpAtCurrent)) * 100;\r\n\r\n    return Math.max(0, Math.min(100, Math.floor(progress)));\r\n  }\r\n\r\n  getStatBonuses(item: Item | undefined): string[] {\r\n    if (!item?.bonusStats) return [];\r\n    return Object.entries(item.bonusStats).map(([stat, val]) => {\r\n      const icon = this.statIcon(stat);\r\n      return `${icon} +${val}`;\r\n    });\r\n  }\r\n\r\n  getBonusSourcesTooltip(stat: keyof PlayerStats): string {\r\n    const sources: string[] = [];\r\n\r\n    const allItems = [...(this.baseStats?.equippedItems ?? []), ...(this.activeBuffs ?? [])];\r\n\r\n    for (const item of allItems) {\r\n      const bonus = item.bonusStats?.[stat];\r\n      if (bonus && typeof bonus === 'number') {\r\n        const label = item.type === 'buff' ? `Buff: ${item.name}` : item.name;\r\n        sources.push(`+${bonus} durch ${label}`);\r\n      }\r\n    }\r\n\r\n    return sources.length > 0 ? sources.join('\\n') : 'Kein Bonus';\r\n  }\r\n\r\n  isNumericBonus(key: keyof PlayerStats): boolean {\r\n  const numericKeys: (keyof PlayerStats)[] = ['strength', 'agility', 'intelligence', 'hp'];\r\n  return numericKeys.includes(key);\r\n  }\r\n\r\n  getStatLabel(stat: string): string {\r\n    const labels: Record<string, string> = {\r\n      hp: 'HP',\r\n      strength: 'Stärke',\r\n      agility: 'Geschicklichkeit',\r\n      intelligence: 'Intelligenz',\r\n      money: 'Gil',\r\n      level: 'Level',\r\n      experience: 'Erfahrung'\r\n    };\r\n    return labels[stat] ?? stat;\r\n  }\r\n\r\n  isBonusPositive(stat: keyof PlayerStats): boolean {\r\n    return Number(this.bonusStats[stat] ?? 0) > 0;\r\n  }\r\n\r\n  getTotal(stat: keyof PlayerStats): number {\r\n    const base = this.baseStats?.[stat] ?? 0;\r\n    const bonus = this.bonusStats[stat] ?? 0;\r\n    return (base as number) + (bonus as number);\r\n  }\r\n}\r\n","<div class=\"stats-wrapper\">\r\n\r\n  <!-- ⭐ LEVEL & XP -->\r\n  <div class=\"level-display\">\r\n    <span class=\"level-label\">⭐ Level {{ baseStats?.level }}</span>\r\n    <div class=\"xp-bar\">\r\n      <div class=\"xp-fill\" [style.width.%]=\"getXpProgress()\"></div>\r\n    </div>\r\n    <span class=\"xp-label\">{{ baseStats?.experience }} XP</span>\r\n  </div>\r\n\r\n  <!-- 🧾 STATS-KARTE -->\r\n  <div class=\"stats-card\">\r\n    <h3>🧾 Statuswerte</h3>\r\n\r\n    <div class=\"stat-row\" *ngFor=\"let key of statsKeys\">\r\n      <span class=\"stat-icon\">{{ statIcon(key) }}</span>\r\n      <span class=\"stat-label\">{{ getStatLabel(key) }}</span>\r\n\r\n      <div class=\"stat-block\">\r\n        <span class=\"stat-base\">{{ baseStats?.[key] ?? 0 }}</span>\r\n\r\n        <ng-container *ngIf=\"getBonus(key) !== 0; else bonusPlaceholder\">\r\n          <span class=\"stat-bonus\" [title]=\"getBonusSourcesTooltip(key)\" [ngClass]=\"{\r\n        positive: getBonus(key) > 0,\r\n        negative: getBonus(key) < 0\r\n      }\">\r\n            {{ getBonusPrefix(key) }}{{ getBonus(key) }}\r\n          </span>\r\n        </ng-container>\r\n        <ng-template #bonusPlaceholder>\r\n          <span class=\"stat-bonus invisible\">+0</span>\r\n        </ng-template>\r\n\r\n        <span class=\"stat-equals\">=</span>\r\n        <span class=\"stat-total\">{{ getTotal(key) }}</span>\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n    <!-- 🛡️ AUSRÜSTUNG -->\r\n    <div class=\"equipment-section\">\r\n      <h3>🛡️ Ausrüstung</h3>\r\n      <div class=\"equipment-slots\">\r\n        <div class=\"slot-card\" *ngFor=\"let slot of equipmentSlots\">\r\n          <ng-container *ngIf=\"getEquippedItem(slot); else empty\">\r\n            <img class=\"slot-icon\" [src]=\"'assets/icons/' + getEquippedItem(slot)?.icon\"\r\n              [alt]=\"getEquippedItem(slot)?.name\" />\r\n            <div class=\"slot-info\">\r\n              <strong>{{ getEquippedItem(slot)?.name }}</strong>\r\n              <div class=\"bonuses\">\r\n                <span *ngFor=\"let stat of getStatBonuses(getEquippedItem(slot))\">\r\n                  {{ stat }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n          <ng-template #empty>\r\n            <img class=\"slot-icon\" src=\"assets/icons/equipment-slot.svg\" />\r\n            <div class=\"slot-info\">\r\n              <strong>{{ slotLabels[slot] }}</strong>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>","import { Component, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  standalone: false,\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.scss']\r\n})\r\nexport class GameComponent {\r\n  currentIndex = 0;\r\n  readonly maxIndex = 4;\r\n  navIcons = ['skills.svg', 'backpack.svg', 'scroll-quill.svg', 'brute.svg', 'swap-bag.svg'];\r\n  navLabels = ['Charakter', 'Inventar', 'Quests', 'Bosse', 'Shop'];\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  // Optional: mit Touch-Events\r\n  startX = 0;\r\n\r\n  @HostListener('touchstart', ['$event'])\r\n  onTouchStart(event: TouchEvent) {\r\n    this.startX = event.touches[0].clientX;\r\n  }\r\n\r\n  @HostListener('touchend', ['$event'])\r\n  onTouchEnd(event: TouchEvent) {\r\n    const endX = event.changedTouches[0].clientX;\r\n    const diff = endX - this.startX;\r\n\r\n    if (diff > 50 && this.currentIndex > 0) {\r\n      this.currentIndex--;\r\n    } else if (diff < -50 && this.currentIndex < this.maxIndex) {\r\n      this.currentIndex++;\r\n    }\r\n  }\r\n\r\n  openScanner() {\r\n    this.router.navigate(['/scanner']);\r\n  }\r\n\r\n}\r\n","<div class=\"top-nav\">\r\n  <button *ngFor=\"let i of [0,1,2,3,4]; let idx = index\" [class.active]=\"currentIndex === idx\"\r\n    (click)=\"currentIndex = idx\" [title]=\"navLabels[idx]\">\r\n    <img [src]=\"'assets/icons/' + navIcons[idx]\" class=\"nav-icon\" />\r\n  </button>\r\n</div>\r\n<div class=\"game-wrapper\">\r\n  <div class=\"slider-viewport\">\r\n    <div class=\"slider-container\" [style.transform]=\"'translateX(-' + (currentIndex * 100) + '%)'\">\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-stats></app-stats></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-inventory></app-inventory></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-questlog></app-questlog></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-boss-list></app-boss-list></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-shop></app-shop></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"footer-divider\"></div>\r\n  <div class=\"swipe-footer\">\r\n    <!--<div class=\"swipe-indicator\">\r\n      <span *ngFor=\"let i of [0,1,2,3,4]; let idx = index\" [class.active]=\"idx === currentIndex\">•</span>\r\n    </div>-->\r\n\r\n    <div class=\"swipe-controls\">\r\n      <button (click)=\"currentIndex = (currentIndex - 1 + 5) % 5\">◀</button>\r\n      <button (click)=\"currentIndex = (currentIndex + 1) % 5\">▶</button>\r\n    </div>\r\n    <button class=\"qr-scan-button\" (click)=\"openScanner()\" title=\"QR-Code scannen\">\r\n      <img src=\"assets/icons/eye-target.svg\" class=\"icon qr-icon\" alt=\"QR-Scanner\" />\r\n    </button>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GameComponent } from './game.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { QuestlogComponent } from '../../components/questlog/questlog';\r\nimport { InventoryComponent } from '../../components/inventory/inventory';\r\nimport { StatsComponent } from '../../components/stats/stats';\r\nimport { BossListComponent } from '../../components/boss-list/boss-list';\r\nimport { ShopComponent } from '../../components/shop/shop';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GameComponent,\r\n    QuestlogComponent,\r\n    InventoryComponent,\r\n    StatsComponent,\r\n    BossListComponent,\r\n    ShopComponent\r\n    ],\r\n  imports: [CommonModule, RouterModule.forChild([{ path: '', component: GameComponent }])]\r\n})\r\nexport class GameModule {}\r\n"],"names":["BossService","BattleService","Router","i0","ɵɵelement","ɵɵpropertyInterpolate","boss_r2","name","ɵɵproperty","image","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","attempts","ɵɵtemplate","BossListComponent_div_3_img_1_Template","BossListComponent_div_3_p_11_Template","ɵɵlistener","BossListComponent_div_3_Template_button_click_12_listener","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","startBattle","id","ɵɵclassProp","defeated","ɵɵtextInterpolate","description","BossListComponent","bossService","battleService","router","bosses","advantageVisibility","constructor","ngOnInit","getBosses","subscribe","b","forEach","boss","toggleAdvantages","bossId","showAdvantages","navigate","statIcon","stat","ɵɵdirectiveInject","i1","i2","i3","selectors","decls","vars","consts","template","BossListComponent_Template","rf","ctx","BossListComponent_div_3_Template","InventoryService","PlayerService","GameSaveService","ToastService","SoundService","item_r1","bonusStats","hp","strength","agility","intelligence","InventoryComponent_div_5_div_10_span_1_Template","InventoryComponent_div_5_div_10_span_2_Template","InventoryComponent_div_5_div_10_span_3_Template","InventoryComponent_div_5_div_10_span_4_Template","InventoryComponent_div_5_button_12_Template_button_click_0_listener","_r2","useItem","InventoryComponent_div_5_button_13_Template_button_click_0_listener","_r4","InventoryComponent_div_5_button_14_Template_button_click_0_listener","_r5","toggleEquip","equipped","InventoryComponent_div_5_div_10_Template","InventoryComponent_div_5_button_12_Template","InventoryComponent_div_5_button_13_Template","InventoryComponent_div_5_button_14_Template","icon","getGermanItemType","type","InventoryComponent","inventoryService","playerService","gameSave","toastService","soundService","items","getInventory","filter","item","available","sort","a","order","indexOf","now","Date","durationMs","stats","getSnapshot","isBuffFood","endsWith","isPotion","lastBuffFoodUsedAt","last","getTime","show","lastPotionUsedAt","buffs","Object","entries","map","key","val","amount","addBuff","updateStats","toISOString","setTimeout","removeExpiredBuffs","playEffect","removeSingleItem","join","statsToApply","updateCurrentGame","checkForUnlockedEquipment","player","questsCompleted","inventory","unlocked","updated","questsRequired","push","length","setInventory","updateEquippedStatus","latestItem","find","i","slot","console","warn","equipItem","unequipItem","i4","i5","InventoryComponent_Template","InventoryComponent_div_3_Template","InventoryComponent_div_5_Template","QuestService","QuestlogComponent_li_11_button_3_Template_button_click_0_listener","quest_r2","cancelQuest","item_r4","rewardXp","rewardMoney","QuestlogComponent_li_11_div_8_li_4_Template","QuestlogComponent_li_11_div_8_li_5_Template","QuestlogComponent_li_11_div_8_li_6_Template","rewardItems","failedAttempts","QuestlogComponent_li_11_div_10_Template_button_click_1_listener","startQuest","QuestlogComponent_li_11_div_11_Template_button_click_1_listener","_r6","completeQuest","QuestlogComponent_li_11_div_11_Template_button_click_3_listener","failQuest","QuestlogComponent_li_11_button_3_Template","QuestlogComponent_li_11_div_8_Template","QuestlogComponent_li_11_div_9_Template","QuestlogComponent_li_11_div_10_Template","QuestlogComponent_li_11_div_11_Template","status","title","isInteractiveQuest","QuestlogComponent","questService","quests","getQuests","qs","toggleFilter","filteredQuests","q","acquired","markCompleted","completedQuestsCount","quest","isSide","isTutorial","isFinale","otherMainQuests","QuestlogComponent_Template","QuestlogComponent_Template_button_click_6_listener","QuestlogComponent_Template_button_click_8_listener","QuestlogComponent_li_11_Template","ShopService","item_r2","stock","ShopComponent_div_4_p_9_Template","ShopComponent_div_4_p_10_Template","ShopComponent_div_4_Template_button_click_11_listener","buy","price","ShopComponent","shopService","toast","itemsForSale","getShopItems","_this","_asyncToGenerator","pay","purchasedItem","acquiredAt","addItem","updateStock","err","error","i6","ShopComponent_Template","ShopComponent_div_4_Template","ɵɵelementContainerStart","ctx_r1","getBonusSourcesTooltip","key_r1","ɵɵpureFunction2","_c0","getBonus","ɵɵtextInterpolate2","getBonusPrefix","StatsComponent_div_11_ng_container_8_Template","StatsComponent_div_11_ng_template_9_Template","ɵɵtemplateRefExtractor","getStatLabel","tmp_5_0","baseStats","undefined","bonusPlaceholder_r3","getTotal","stat_r4","StatsComponent_div_16_ng_container_1_span_6_Template","tmp_4_0","getEquippedItem","slot_r5","tmp_6_0","getStatBonuses","slotLabels","StatsComponent_div_16_ng_container_1_Template","StatsComponent_div_16_ng_template_2_Template","empty_r6","StatsComponent","equippedItems","activeBuffs","XP_TABLE","equipmentSlots","head","chest","hands","legs","feet","weapon","back","shoulders","belt","wrist","statsKeys","getPlayer","p","effectiveStats","getEffectiveStats","buff","validUntil","value","bonus","formatBuffTooltip","untilRaw","until","timeLeft","Math","ceil","bonuses","getXpPercent","currentXp","experience","xpForNext","min","getXpProgress","currentLevel","level","totalXp","xpAtCurrent","xpAtNext","progress","max","floor","sources","allItems","label","isNumericBonus","numericKeys","includes","labels","money","isBonusPositive","Number","base","StatsComponent_Template","StatsComponent_div_11_Template","StatsComponent_div_16_Template","ɵɵstyleProp","GameComponent_button_1_Template_button_click_0_listener","idx_r2","index","currentIndex","navLabels","navIcons","GameComponent","maxIndex","startX","onTouchStart","event","touches","clientX","onTouchEnd","endX","changedTouches","diff","openScanner","hostBindings","GameComponent_HostBindings","GameComponent_touchstart_HostBindingHandler","$event","GameComponent_touchend_HostBindingHandler","GameComponent_button_1_Template","GameComponent_Template_button_click_23_listener","GameComponent_Template_button_click_25_listener","GameComponent_Template_button_click_27_listener","ɵɵpureFunction0","CommonModule","RouterModule","GameModule","forChild","path","component","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}