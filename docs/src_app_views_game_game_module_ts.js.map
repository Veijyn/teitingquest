{"version":3,"file":"src_app_views_game_game_module_ts.js","mappings":"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","sources":["./src/app/components/boss-list/boss-list.ts","./src/app/components/boss-list/boss-list.html","./src/app/components/inventory/inventory.ts","./src/app/components/inventory/inventory.html","./src/app/components/questlog/questlog.ts","./src/app/components/questlog/questlog.html","./src/app/components/shop/shop.ts","./src/app/components/shop/shop.html","./src/app/components/stats/stats.ts","./src/app/components/stats/stats.html","./src/app/views/game/game.component.ts","./src/app/views/game/game.component.html","./src/app/views/game/game.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { BossService } from '@core/services/boss.service';\r\nimport { Boss } from '@core/models/boss.model';\r\nimport { BattleService } from '@core/services/battle.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-boss-list',\r\n  standalone: false,\r\n  templateUrl: './boss-list.html',\r\n  styleUrls: ['./boss-list.scss']\r\n})\r\nexport class BossListComponent implements OnInit {\r\n  bosses: Boss[] = [];\r\n  advantageVisibility: Record<string, boolean> = {}; \r\n\r\n  constructor(\r\n    private bossService: BossService,\r\n    private battleService: BattleService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.bossService.getBosses().subscribe(b => {\r\n      this.bosses = b;\r\n      this.bosses.forEach(boss => this.advantageVisibility[boss.id] = false); \r\n    });\r\n  }\r\n\r\n  toggleAdvantages(bossId: string) {\r\n    this.advantageVisibility[bossId] = !this.advantageVisibility[bossId];\r\n  }\r\n\r\n  showAdvantages(bossId: string): boolean {\r\n    return this.advantageVisibility[bossId];\r\n  }\r\n\r\n  startBattle(bossId: string) {\r\n    this.battleService.startBattle(bossId);\r\n    this.router.navigate(['/battle']);\r\n  }\r\n\r\n  statIcon(stat: string): string {\r\n  switch (stat) {\r\n    case 'strength': return '🗡️';\r\n    case 'agility': return '🎯';\r\n    case 'intelligence': return '🧠';\r\n    case 'hp': return '❤️';\r\n    case 'level': return '⭐';\r\n    case 'money': return '💰';\r\n    case 'experience': return '📘';\r\n    default: return '❔';\r\n  }\r\n}\r\n\r\n}\r\n","<div class=\"boss-list\">\r\n  <h2>Bossübersicht</h2>\r\n\r\n  <div *ngFor=\"let boss of bosses\" class=\"boss-card\" [class.defeated]=\"boss.defeated\">\r\n    <img [src]=\"'/assets/bosses/' + boss.image\" alt=\"{{ boss.name }}\" *ngIf=\"boss.image\" />\r\n    <div class=\"boss-details\">\r\n      <h3>{{ boss.name }} <span *ngIf=\"boss.title\">({{ boss.title }})</span></h3>\r\n      <p class=\"description\">{{ boss.description }}</p>\r\n\r\n      <p>Status: <strong>{{ boss.defeated ? 'Besiegt' : 'Bereit zum Kampf' }}</strong></p>\r\n      <p *ngIf=\"boss.attempts\">Versuche: {{ boss.attempts }}</p>\r\n\r\n      <div *ngIf=\"boss.advantages?.length\" class=\"advantages\">\r\n        <button class=\"toggle-btn\" (click)=\"toggleAdvantages(boss.id)\">\r\n          {{ showAdvantages(boss.id) ? '−' : '+' }} Pot. Vorteile\r\n        </button>\r\n\r\n        <div class=\"advantages-list\" *ngIf=\"showAdvantages(boss.id)\">\r\n          <div *ngFor=\"let adv of boss.advantages\" class=\"advantage-entry\">\r\n            <div class=\"advantage-header\">\r\n              <span class=\"advantage-name\">{{ adv.name }}</span>\r\n              <span class=\"advantage-desc\">{{ adv.description }}</span>\r\n            </div>\r\n\r\n            <div class=\"conditions\">\r\n              <span *ngFor=\"let cond of adv.condition\" class=\"condition-pill\">\r\n                <span class=\"icon-stat\">{{ statIcon(cond.stat) }}</span>\r\n                <span>{{ cond.stat }} {{ cond.operator }} {{ cond.value }}</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <button class=\"rpg-button\" (click)=\"startBattle(boss.id)\" [disabled]=\"boss.defeated\">\r\n        Kampf starten\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { Item } from '@core/models/item.model';\r\nimport { GameSaveService } from '@core/services/game-save.service';\r\nimport { PlayerStats } from '@core/models/player-stats.model';\r\nimport { ToastService } from '@views/toasts/toast.service';\r\n\r\ntype NumericStatKey = 'hp' | 'strength' | 'agility' | 'intelligence' | 'money' | 'experience' | 'level';\r\n\r\ntype NumericStats = Pick<PlayerStats, NumericStatKey>;\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  standalone: false,\r\n  templateUrl: './inventory.html',\r\n  styleUrls: ['./inventory.scss']\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n  items: Item[] = [];\r\n  statIcon(stat: string): string {\r\n    switch (stat) {\r\n      case 'strength': return '🗡️';\r\n      case 'agility': return '🎯';\r\n      case 'intelligence': return '🧠';\r\n      case 'hp': return '❤️';\r\n      case 'money': return '💰';\r\n      case 'level': return '⭐';\r\n      case 'experience': return '📘';\r\n      default: return '';\r\n    }\r\n  }\r\n\r\n\r\n  constructor(private inventoryService: InventoryService, private playerService: PlayerService, private gameSave: GameSaveService, private toastService: ToastService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.inventoryService.getInventory().subscribe(items => {\r\n      this.items = items.filter(item => item.available !== false).sort((a, b) => {\r\n        const order = ['equipment', 'consumable', 'buff', 'quest'];\r\n        return order.indexOf(a.type) - order.indexOf(b.type);\r\n      });\r\n    });\r\n  }\r\n\r\n  getGermanItemType(type: string): string {\r\n    switch (type) {\r\n      case 'equipment': return 'Ausrüstung';\r\n      case 'consumable': return 'Verbrauchbar';\r\n      case 'buff': return 'Buff';\r\n      case 'quest': return 'Quest-Gegenstand';\r\n      default: return type;\r\n    }\r\n  }\r\n\r\n  useItem(item: Item) {\r\n    const now = Date.now();\r\n    const durationMs = 1000 * 60 * 30; // 30 Minuten\r\n    const stats = this.playerService.getSnapshot();\r\n\r\n    const isBuffFood = item.name?.endsWith('(Bufffood)');\r\n    const isPotion = item.id === 'potion';\r\n\r\n    // Bufffood-Cooldown prüfen\r\n    if (isBuffFood && stats?.lastBuffFoodUsedAt) {\r\n      const last = new Date(stats.lastBuffFoodUsedAt).getTime();\r\n      if (now - last < 1000 * 60 * 5) {\r\n        this.toastService.show('Du musst 5 Minuten warten, bevor du weiteres Bufffood verwenden kannst.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Potion-Cooldown prüfen\r\n    if (isPotion && stats?.lastPotionUsedAt) {\r\n      const last = new Date(stats.lastPotionUsedAt).getTime();\r\n      if (now - last < 1000 * 60 * 5) {\r\n        this.toastService.show('Du musst 5 Minuten warten, bevor du einen weiteren Trank trinken kannst.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Bonuswerte für Tooltip sammeln\r\n    const buffs = Object.entries(item.bonusStats ?? {}).map(([key, val]) => {\r\n      const amount = typeof val === 'number' ? val : 0;\r\n      return `${this.statIcon(key)} +${amount}`;\r\n    });\r\n\r\n    // Buff-Item mit Dauer\r\n    if (item.type === 'buff') {\r\n      this.playerService.addBuff(item, durationMs);\r\n\r\n      // Cooldown-Zeit setzen\r\n      if (isBuffFood) {\r\n        this.playerService.updateStats({ lastBuffFoodUsedAt: new Date().toISOString() });\r\n      }\r\n      if (isPotion) {\r\n        this.playerService.updateStats({ lastPotionUsedAt: new Date().toISOString() });\r\n      }\r\n\r\n      this.inventoryService.removeSingleItem(item); // 👈 nur EIN Item entfernen!\r\n      this.toastService.show(`Buff aktiv: ${buffs.join(', ')}`);\r\n    }\r\n\r\n    // Consumable → direkte Stats-Änderung\r\n    if (item.type === 'consumable') {\r\n      const statsToApply: Partial<NumericStats> = {};\r\n\r\n      for (const [key, val] of Object.entries(item.bonusStats ?? {})) {\r\n        if (typeof val === 'number' && (key as NumericStatKey)) {\r\n          statsToApply[key as NumericStatKey] = val;\r\n        }\r\n      }\r\n\r\n      this.playerService.updateStats(statsToApply);\r\n      this.inventoryService.removeSingleItem(item); // 👈 nur EIN Item entfernen!\r\n      this.toastService.show(`Verbraucht: ${buffs.join(', ')}`);\r\n    }\r\n\r\n    this.gameSave.updateCurrentGame();\r\n  }\r\n\r\n\r\n\r\n  checkForUnlockedEquipment() {\r\n    const player = this.playerService.getSnapshot() ?? { questsCompleted: 0 };\r\n    const inventory = this.inventoryService.getSnapshot();\r\n\r\n    const unlocked: Item[] = [];\r\n\r\n    const updated = inventory.map(item => {\r\n      if (\r\n        item.type === 'equipment' &&\r\n        item.questsRequired != null &&\r\n        item.questsRequired <= (player.questsCompleted ?? 0) &&\r\n        item.available !== true\r\n      ) {\r\n        unlocked.push({ ...item, available: true });\r\n        return { ...item, available: true };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    if (unlocked.length > 0) {\r\n      this.inventoryService.setInventory(updated);\r\n      // optional: notify the player\r\n      //console.log('Neue Ausrüstung verfügbar:', unlocked.map(i => i.name).join(', '));\r\n    }\r\n  }\r\n\r\n  toggleEquip(item: Item) {\r\n    const equipped = !item.equipped;\r\n\r\n    // 1. Inventory aktualisieren\r\n    this.inventoryService.updateEquippedStatus(item.id, equipped);\r\n\r\n    // 2. Neuestes Item holen\r\n    const latestItem = this.inventoryService.getSnapshot().find(i => i.id === item.id);\r\n    if (!latestItem || !latestItem.slot) {\r\n      console.warn('Kein gültiger Slot-Item gefunden für Equip:', latestItem);\r\n      return;\r\n    }\r\n\r\n    // 3. Player aktualisieren\r\n    if (equipped) {\r\n      this.playerService.equipItem(latestItem);\r\n    } else {\r\n      this.playerService.unequipItem(latestItem.slot);\r\n    }\r\n\r\n    // 4. Spiel speichern\r\n    this.gameSave.updateCurrentGame();\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"inventory\">\r\n  <h2>Inventar</h2>\r\n  <div *ngIf=\"items.length === 0\" class=\"empty-note\">\r\n    Du besitzt keine Items.\r\n  </div>\r\n\r\n  <div class=\"item-list\">\r\n    <div class=\"item-card\" *ngFor=\"let item of items\">\r\n      <img class=\"item-icon\" [src]=\"'/assets/icons/' + item.icon\" alt=\"{{ item.name }}\" />\r\n      <div class=\"item-details\">\r\n        <div class=\"item-header\">\r\n          <strong class=\"item-name\">{{ item.name }}</strong>\r\n          <span class=\"item-type\">({{ getGermanItemType(item.type) }})</span>\r\n        </div>\r\n        <p class=\"item-description\">{{ item.description }}</p>\r\n\r\n        <div class=\"item-bonuses\" *ngIf=\"item.bonusStats\">\r\n          <span *ngIf=\"item.bonusStats.hp\">❤️ HP +{{ item.bonusStats.hp }}</span>\r\n          <span *ngIf=\"item.bonusStats.strength\">🗡️ Stärke +{{ item.bonusStats.strength }}</span>\r\n          <span *ngIf=\"item.bonusStats.agility\">🎯 Geschick +{{ item.bonusStats.agility }}</span>\r\n          <span *ngIf=\"item.bonusStats.intelligence\">🧠 Intelligenz +{{ item.bonusStats.intelligence }}</span>\r\n        </div>\r\n        <div class=\"item-actions\">\r\n          <button class=\"rpg-button small buff-button\" *ngIf=\"item.type === 'buff'\" (click)=\"useItem(item)\"\r\n            title=\"Temporärer Effekt – hält 30 Minuten\">\r\n            Anwenden\r\n          </button>\r\n\r\n          <button class=\"rpg-button small consumable-button\" *ngIf=\"item.type === 'consumable'\" (click)=\"useItem(item)\"\r\n            title=\"Einmaliger Soforteffekt\">\r\n            Verwenden\r\n          </button>\r\n\r\n          <button class=\"rpg-button small equipment-button\" *ngIf=\"item.type === 'equipment'\"\r\n            (click)=\"toggleEquip(item)\" [title]=\"item.equipped ? 'Ausrüstung entfernen' : 'Ausrüstung anlegen'\">\r\n            {{ item.equipped ? 'Entfernen' : 'Anlegen' }}\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { QuestService } from '@core/services/quest.service';\r\nimport { Quest } from '@core/models/quest.model';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\n\r\n@Component({\r\n  selector: 'app-questlog',\r\n  standalone: false,\r\n  templateUrl: './questlog.html',\r\n  styleUrls: ['./questlog.scss']\r\n})\r\nexport class QuestlogComponent implements OnInit {\r\n  quests: Quest[] = [];\r\n  filter: 'main' | 'side' = 'main';\r\n\r\n  constructor(private questService: QuestService, private inventoryService: InventoryService,\r\n    private playerService: PlayerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.questService.getQuests().subscribe(qs => this.quests = qs);\r\n  }\r\n\r\n  toggleFilter(type: 'main' | 'side') {\r\n    this.filter = type;\r\n  }\r\n\r\n  get filteredQuests() {\r\n  return this.quests.filter(q => q.type === this.filter && q.acquired);\r\n}\r\n\r\n  startQuest(id: string) {\r\n    this.questService.startQuest(id);\r\n  }\r\n\r\n  failQuest(id: string) {\r\n    this.questService.failQuest(id);\r\n  }\r\n\r\n  completeQuest(id: string) {\r\n    this.questService.markCompleted(id, this.inventoryService, this.playerService);\r\n  }\r\n\r\n  // confirmingAction: { type: 'complete' | 'fail'; questId: string } | null = null;\r\n\r\n// openConfirm(type: 'complete' | 'fail', questId: string) {\r\n//   this.confirmingAction = { type, questId };\r\n// }\r\n\r\n// cancelConfirm() {\r\n//   this.confirmingAction = null;\r\n// }\r\n\r\n// confirmAction() {\r\n//   if (!this.confirmingAction) return;\r\n//   const { type, questId } = this.confirmingAction;\r\n//   if (type === 'complete') this.questService.markCompleted(questId, this.inventoryService, this.playerService);\r\n//   else this.questService.failQuest(questId);\r\n//   this.confirmingAction = null;\r\n// }\r\n\r\n  cancelQuest(id: string) {\r\n    this.questService.cancelQuest(id);\r\n  }\r\n\r\n}\r\n","<!-- Modal auskommentieren -->\r\n<!--\r\n<div class=\"modal-backdrop\" *ngIf=\"confirmingAction\">\r\n  <div class=\"modal-panel\">\r\n    <p>Diese Quest wirklich {{ confirmingAction.type === 'complete' ? 'abschließen' : 'als fehlgeschlagen' }} markieren?</p>\r\n    <div class=\"modal-buttons\">\r\n      <button class=\"rpg-button\" (click)=\"confirmAction()\">Ja</button>\r\n      <button class=\"rpg-button\" (click)=\"cancelConfirm()\">Nein</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n-->\r\n<div class=\"questlog\">\r\n  <h2>Questlog</h2>\r\n\r\n  <div class=\"filters\">\r\n    <button [class.active]=\"filter === 'main'\" (click)=\"toggleFilter('main')\">Hauptquests</button>\r\n    <button [class.active]=\"filter === 'side'\" (click)=\"toggleFilter('side')\">Nebenquests</button>\r\n  </div>\r\n\r\n  <ul>\r\n    <li *ngFor=\"let quest of filteredQuests\" [class.completed]=\"quest.status === 'completed'\">\r\n      <h3>{{ quest.title }}\r\n        <button *ngIf=\"quest.type === 'side' && quest.status === 'doing'\" class=\"quest-cancel-btn\"\r\n          title=\"Quest abbrechen\" (click)=\"cancelQuest(quest.id)\">\r\n          ✖\r\n        </button>\r\n      </h3>\r\n      <p>{{ quest.description }}</p>\r\n      <p class=\"status\" [ngClass]=\"quest.status\">Status: {{ quest.status }}</p>\r\n\r\n      <div *ngIf=\"quest.rewardItems?.length || quest.rewardXp || quest.rewardMoney\" class=\"reward\">\r\n        <strong>Belohnung:</strong>\r\n        <ul>\r\n          <li *ngFor=\"let item of quest.rewardItems\">{{ item.name }}</li>\r\n          <li *ngIf=\"quest.rewardXp\">XP: {{ quest.rewardXp }}</li>\r\n          <li *ngIf=\"quest.rewardMoney\">💰: {{ quest.rewardMoney }}</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div *ngIf=\"quest.failedAttempts\">Fehlversuche: {{ quest.failedAttempts }}</div>\r\n\r\n      <div class=\"actions\" *ngIf=\"quest.type === 'side' && quest.status === 'open'\">\r\n        <button class=\"rpg-button\" (click)=\"startQuest(quest.id)\">Quest starten</button>\r\n      </div>\r\n\r\n      <div class=\"actions\" *ngIf=\"quest.status === 'doing'\">\r\n        <button class=\"rpg-button\" (click)=\"completeQuest(quest.id)\">Erledigt</button>\r\n<button class=\"rpg-button\" (click)=\"failQuest(quest.id)\">Fehlgeschlagen</button>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { SoundService } from '@core/services/sound.service';\r\nimport { ShopItem } from '@core/models/item.model';\r\nimport { createShopItems } from './shop.factory';\r\nimport { GameState } from '@core/models/game-state.model';\r\nimport { GameSaveService } from '@core/services/game-save.service';\r\nimport { ShopService } from '@core/services/shop.service';\r\nimport { ToastService } from '@views/toasts/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  standalone: false,\r\n  templateUrl: './shop.html',\r\n  styleUrls: ['./shop.scss']\r\n})\r\nexport class ShopComponent implements OnInit {\r\n  itemsForSale: ShopItem[] = [];\r\n\r\n  constructor(\r\n    private inventoryService: InventoryService,\r\n    private playerService: PlayerService,\r\n    private soundService: SoundService,\r\n    private shopService: ShopService,\r\n    private gameSave: GameSaveService,\r\n    private toast: ToastService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.shopService.getShopItems().subscribe(items => {\r\n      this.itemsForSale = items;\r\n    });\r\n  }\r\n\r\n  async buy(item: ShopItem) {\r\n    if (item.stock <= 0) return;\r\n\r\n    if (this.playerService.pay(item.price!)) {\r\n      const purchasedItem = { ...item, acquiredAt: new Date() };\r\n      this.inventoryService.addItem(purchasedItem);\r\n      this.shopService.updateStock(item.id, -1);\r\n\r\n      try {\r\n        await this.gameSave.updateCurrentGame();\r\n        this.soundService.playEffect('item-kaufen');\r\n        this.toast.show(`Gekauft: ${item.name}`);\r\n      } catch (err) {\r\n        console.error('Fehler beim Speichern:', err);\r\n        //this.showMessage('Fehler beim Speichern!');\r\n      }\r\n    } else {\r\n      this.toast.show('Nicht genug Gil!');\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"shop\">\r\n  <h2>Shop</h2>\r\n  <div class=\"item\" *ngFor=\"let item of itemsForSale\">\r\n    <img class=\"item-icon\" [src]=\"'/assets/icons/' + item.icon\" />\r\n    <div class=\"item-info\">\r\n      <strong>{{ item.name }}</strong>\r\n      <p>{{ item.description }}</p>\r\n      <p>Preis: {{ item.price }} Gil</p>\r\n      <p *ngIf=\"item.stock > 0\">Verfügbar: {{ item.stock }}</p>\r\n      <p *ngIf=\"item.stock === 0\" class=\"sold-out\">Ausverkauft</p>\r\n      <button class=\"rpg-button small\" [disabled]=\"item.stock === 0\" (click)=\"buy(item)\">\r\n        Kaufen\r\n      </button>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { PlayerStats } from '@core/models/player-stats.model';\r\nimport { calculateStatBonuses } from '@core/utils/bonus';\r\nimport { EquipmentSlot, Item } from '@core/models/item.model';\r\n\r\n@Component({\r\n  selector: 'app-stats',\r\n  templateUrl: './stats.html',\r\n  styleUrls: ['./stats.scss']\r\n})\r\nexport class StatsComponent implements OnInit {\r\n  baseStats: PlayerStats | null = null;\r\n  bonusStats: Partial<PlayerStats> = {};\r\n  equippedItems: Item[] = [];\r\n  activeBuffs: Item[] = [];\r\n\r\n  XP_TABLE = [0, 100, 200, 350, 500, 700, 950, 1200, 1500, 1900];\r\n\r\n  // Slots in gewünschter Reihenfolge\r\n  equipmentSlots: EquipmentSlot[] = [\r\n    'head', 'chest', 'hands', 'legs', 'feet',\r\n    'weapon', 'back', 'shoulders', 'belt', 'wrist'\r\n  ];\r\n\r\n  slotLabels: Record<EquipmentSlot, string> = {\r\n    head: 'Kopf',\r\n    chest: 'Brust',\r\n    hands: 'Hände',\r\n    legs: 'Beine',\r\n    feet: 'Füße',\r\n    weapon: 'Waffe',\r\n    back: 'Rücken',\r\n    shoulders: 'Schultern',\r\n    belt: 'Gürtel',\r\n    wrist: 'Handgelenke'\r\n  };\r\n\r\n  statsKeys: (keyof PlayerStats)[] = [\r\n    'hp', 'strength', 'agility', 'intelligence',\r\n    'money'\r\n  ];\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private inventoryService: InventoryService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.playerService.getPlayer().subscribe(p => {\r\n      if (!p) return;\r\n      this.playerService.removeExpiredBuffs();\r\n      const effectiveStats = this.playerService.getEffectiveStats();\r\n      if (!effectiveStats) return;\r\n\r\n      this.baseStats = p;\r\n      this.equippedItems = p.equippedItems ?? [];\r\n      this.bonusStats = {\r\n        strength: effectiveStats.strength - p.strength,\r\n        agility: effectiveStats.agility - p.agility,\r\n        intelligence: effectiveStats.intelligence - p.intelligence,\r\n        hp: effectiveStats.hp - p.hp\r\n      };\r\n      this.activeBuffs = (p.activeBuffs ?? []).filter(buff => {\r\n        const validUntil = (buff as any).validUntil as Date;\r\n        return !validUntil || validUntil > new Date();\r\n      });\r\n    });\r\n  }\r\n\r\n  getBonus(key: keyof PlayerStats): number {\r\n    const value = this.bonusStats?.[key];\r\n    return typeof value === 'number' ? value : 0;\r\n  }\r\n\r\n  getBonusPrefix(key: keyof PlayerStats): string {\r\n    const bonus = this.getBonus(key);\r\n    return bonus > 0 ? '+' : '';\r\n  }\r\n\r\n  // Hilfsfunktion für Tooltip\r\n  formatBuffTooltip(buff: Item): string {\r\n    const untilRaw = (buff as any).validUntil;\r\n    const until = typeof untilRaw === 'string' ? new Date(untilRaw) : untilRaw;\r\n    const timeLeft = until instanceof Date\r\n      ? Math.ceil((until.getTime() - Date.now()) / 60000)\r\n      : null;\r\n\r\n    const bonuses = Object.entries(buff.bonusStats ?? {})\r\n      .map(([key, val]) => `${this.getStatLabel(key)} +${val}`)\r\n      .join(', ');\r\n\r\n    return `${bonuses}${timeLeft !== null ? `\\n🕒 ${timeLeft} Min aktiv` : ''}`;\r\n  }\r\n\r\n  statIcon(stat: string): string {\r\n    switch (stat) {\r\n      case 'strength': return '🗡️';\r\n      case 'agility': return '🎯';\r\n      case 'intelligence': return '🧠';\r\n      case 'hp': return '❤️';\r\n      case 'money': return '💰';\r\n      case 'level': return '⭐';\r\n      case 'experience': return '📘';\r\n      default: return '';\r\n    }\r\n  }\r\n\r\n  getEquippedItem(slot: EquipmentSlot): Item | undefined {\r\n    return this.equippedItems.find(i => i.slot === slot);\r\n  }\r\n\r\n  getXpPercent(): number {\r\n    const currentXp = this.baseStats?.experience ?? 0;\r\n    const xpForNext = 100; // Beispiel – oder dynamisch\r\n    return Math.min((currentXp / xpForNext) * 100, 100);\r\n  }\r\n\r\n  getXpProgress(): number {\r\n    const stats = this.baseStats;\r\n    if (!stats) return 0;\r\n\r\n    const currentLevel = stats.level ?? 1;\r\n    const totalXp = stats.experience ?? 0;\r\n\r\n    if (currentLevel >= this.XP_TABLE.length) return 100; // Max-Level erreicht\r\n\r\n    const xpAtCurrent = this.XP_TABLE[currentLevel - 1];\r\n    const xpAtNext = this.XP_TABLE[currentLevel];\r\n\r\n    const progress = ((totalXp - xpAtCurrent) / (xpAtNext - xpAtCurrent)) * 100;\r\n\r\n    return Math.max(0, Math.min(100, Math.floor(progress)));\r\n  }\r\n\r\n  getStatBonuses(item: Item | undefined): string[] {\r\n    if (!item?.bonusStats) return [];\r\n    return Object.entries(item.bonusStats).map(([stat, val]) => {\r\n      const icon = this.statIcon(stat);\r\n      return `${icon} +${val}`;\r\n    });\r\n  }\r\n\r\n  getBonusSourcesTooltip(stat: keyof PlayerStats): string {\r\n    const sources: string[] = [];\r\n\r\n    const allItems = [...(this.baseStats?.equippedItems ?? []), ...(this.activeBuffs ?? [])];\r\n\r\n    for (const item of allItems) {\r\n      const bonus = item.bonusStats?.[stat];\r\n      if (bonus && typeof bonus === 'number') {\r\n        const label = item.type === 'buff' ? `Buff: ${item.name}` : item.name;\r\n        sources.push(`+${bonus} durch ${label}`);\r\n      }\r\n    }\r\n\r\n    return sources.length > 0 ? sources.join('\\n') : 'Kein Bonus';\r\n  }\r\n\r\n  isNumericBonus(key: keyof PlayerStats): boolean {\r\n  const numericKeys: (keyof PlayerStats)[] = ['strength', 'agility', 'intelligence', 'hp'];\r\n  return numericKeys.includes(key);\r\n  }\r\n\r\n  getStatLabel(stat: string): string {\r\n    const labels: Record<string, string> = {\r\n      hp: 'HP',\r\n      strength: 'Stärke',\r\n      agility: 'Agilität',\r\n      intelligence: 'Intelligenz',\r\n      money: 'Gil',\r\n      level: 'Level',\r\n      experience: 'Erfahrung'\r\n    };\r\n    return labels[stat] ?? stat;\r\n  }\r\n\r\n  isBonusPositive(stat: keyof PlayerStats): boolean {\r\n    return Number(this.bonusStats[stat] ?? 0) > 0;\r\n  }\r\n\r\n  getTotal(stat: keyof PlayerStats): number {\r\n    const base = this.baseStats?.[stat] ?? 0;\r\n    const bonus = this.bonusStats[stat] ?? 0;\r\n    return (base as number) + (bonus as number);\r\n  }\r\n}\r\n","<div class=\"stats-wrapper\">\r\n\r\n  <!-- ⭐ LEVEL & XP -->\r\n  <div class=\"level-display\">\r\n    <span class=\"level-label\">⭐ Level {{ baseStats?.level }}</span>\r\n    <div class=\"xp-bar\">\r\n      <div class=\"xp-fill\" [style.width.%]=\"getXpProgress()\"></div>\r\n    </div>\r\n    <span class=\"xp-label\">{{ baseStats?.experience }} XP</span>\r\n  </div>\r\n\r\n  <!-- 🧾 STATS-KARTE -->\r\n  <div class=\"stats-card\">\r\n    <h3>🧾 Statuswerte</h3>\r\n\r\n    <div class=\"stat-row\" *ngFor=\"let key of statsKeys\">\r\n      <span class=\"stat-icon\">{{ statIcon(key) }}</span>\r\n      <span class=\"stat-label\">{{ getStatLabel(key) }}</span>\r\n\r\n      <div class=\"stat-block\">\r\n        <span class=\"stat-base\">{{ baseStats?.[key] ?? 0 }}</span>\r\n\r\n        <ng-container *ngIf=\"getBonus(key) !== 0; else bonusPlaceholder\">\r\n          <span class=\"stat-bonus\" [title]=\"getBonusSourcesTooltip(key)\" [ngClass]=\"{\r\n        positive: getBonus(key) > 0,\r\n        negative: getBonus(key) < 0\r\n      }\">\r\n            {{ getBonusPrefix(key) }}{{ getBonus(key) }}\r\n          </span>\r\n        </ng-container>\r\n        <ng-template #bonusPlaceholder>\r\n          <span class=\"stat-bonus invisible\">+0</span>\r\n        </ng-template>\r\n\r\n        <span class=\"stat-equals\">=</span>\r\n        <span class=\"stat-total\">{{ getTotal(key) }}</span>\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n    <!-- 🛡️ AUSRÜSTUNG -->\r\n    <div class=\"equipment-section\">\r\n      <h3>🛡️ Ausrüstung</h3>\r\n      <div class=\"equipment-slots\">\r\n        <div class=\"slot-card\" *ngFor=\"let slot of equipmentSlots\">\r\n          <ng-container *ngIf=\"getEquippedItem(slot); else empty\">\r\n            <img class=\"slot-icon\" [src]=\"'/assets/icons/' + getEquippedItem(slot)?.icon\"\r\n              [alt]=\"getEquippedItem(slot)?.name\" />\r\n            <div class=\"slot-info\">\r\n              <strong>{{ getEquippedItem(slot)?.name }}</strong>\r\n              <div class=\"bonuses\">\r\n                <span *ngFor=\"let stat of getStatBonuses(getEquippedItem(slot))\">\r\n                  {{ stat }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n          <ng-template #empty>\r\n            <img class=\"slot-icon\" src=\"/assets/icons/equipment-slot.svg\" />\r\n            <div class=\"slot-info\">\r\n              <strong>{{ slotLabels[slot] }}</strong>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>","import { Component, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  standalone: false,\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.scss']\r\n})\r\nexport class GameComponent {\r\n  currentIndex = 0;\r\n  readonly maxIndex = 4;\r\n  navIcons = ['skills.svg', 'backpack.svg', 'scroll-quill.svg', 'brute.svg', 'swap-bag.svg'];\r\n  navLabels = ['Charakter', 'Inventar', 'Quests', 'Bosse', 'Shop'];\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  // Optional: mit Touch-Events\r\n  startX = 0;\r\n\r\n  @HostListener('touchstart', ['$event'])\r\n  onTouchStart(event: TouchEvent) {\r\n    this.startX = event.touches[0].clientX;\r\n  }\r\n\r\n  @HostListener('touchend', ['$event'])\r\n  onTouchEnd(event: TouchEvent) {\r\n    const endX = event.changedTouches[0].clientX;\r\n    const diff = endX - this.startX;\r\n\r\n    if (diff > 50 && this.currentIndex > 0) {\r\n      this.currentIndex--;\r\n    } else if (diff < -50 && this.currentIndex < this.maxIndex) {\r\n      this.currentIndex++;\r\n    }\r\n  }\r\n\r\n  openScanner() {\r\n    this.router.navigate(['/scanner']);\r\n  }\r\n\r\n}\r\n","<div class=\"top-nav\">\r\n  <button *ngFor=\"let i of [0,1,2,3,4]; let idx = index\" [class.active]=\"currentIndex === idx\"\r\n    (click)=\"currentIndex = idx\" [title]=\"navLabels[idx]\">\r\n    <img [src]=\"'assets/icons/' + navIcons[idx]\" class=\"nav-icon\" />\r\n  </button>\r\n</div>\r\n<div class=\"game-wrapper\">\r\n  <div class=\"slider-viewport\">\r\n    <div class=\"slider-container\" [style.transform]=\"'translateX(-' + (currentIndex * 100) + '%)'\">\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-stats></app-stats></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-inventory></app-inventory></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-questlog></app-questlog></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-boss-list></app-boss-list></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-shop></app-shop></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"footer-divider\"></div>\r\n  <div class=\"swipe-footer\">\r\n    <!--<div class=\"swipe-indicator\">\r\n      <span *ngFor=\"let i of [0,1,2,3,4]; let idx = index\" [class.active]=\"idx === currentIndex\">•</span>\r\n    </div>-->\r\n\r\n    <div class=\"swipe-controls\">\r\n      <button (click)=\"currentIndex = (currentIndex - 1 + 5) % 5\">◀</button>\r\n      <button (click)=\"currentIndex = (currentIndex + 1) % 5\">▶</button>\r\n    </div>\r\n    <button class=\"qr-scan-button\" (click)=\"openScanner()\" title=\"QR-Code scannen\">\r\n      <img src=\"assets/icons/eye-target.svg\" class=\"icon qr-icon\" alt=\"QR-Scanner\" />\r\n    </button>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GameComponent } from './game.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { QuestlogComponent } from '../../components/questlog/questlog';\r\nimport { InventoryComponent } from '../../components/inventory/inventory';\r\nimport { StatsComponent } from '../../components/stats/stats';\r\nimport { BossListComponent } from '../../components/boss-list/boss-list';\r\nimport { ShopComponent } from '../../components/shop/shop';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GameComponent,\r\n    QuestlogComponent,\r\n    InventoryComponent,\r\n    StatsComponent,\r\n    BossListComponent,\r\n    ShopComponent\r\n    ],\r\n  imports: [CommonModule, RouterModule.forChild([{ path: '', component: GameComponent }])]\r\n})\r\nexport class GameModule {}\r\n"],"names":["BossService","BattleService","Router","i0","ɵɵelement","ɵɵpropertyInterpolate","boss_r2","name","ɵɵproperty","image","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","title","attempts","ɵɵtextInterpolate","ctx_r3","statIcon","cond_r5","stat","ɵɵtextInterpolate3","operator","value","ɵɵtemplate","BossListComponent_div_3_div_13_div_3_div_1_span_7_Template","adv_r6","description","condition","BossListComponent_div_3_div_13_div_3_div_1_Template","advantages","ɵɵlistener","BossListComponent_div_3_div_13_Template_button_click_1_listener","ɵɵrestoreView","_r3","ɵɵnextContext","$implicit","ɵɵresetView","toggleAdvantages","id","BossListComponent_div_3_div_13_div_3_Template","showAdvantages","BossListComponent_div_3_img_1_Template","BossListComponent_div_3_span_5_Template","BossListComponent_div_3_p_12_Template","BossListComponent_div_3_div_13_Template","BossListComponent_div_3_Template_button_click_14_listener","_r1","startBattle","ɵɵclassProp","defeated","length","BossListComponent","bossService","battleService","router","bosses","advantageVisibility","constructor","ngOnInit","getBosses","subscribe","b","forEach","boss","bossId","navigate","ɵɵdirectiveInject","i1","i2","i3","selectors","decls","vars","consts","template","BossListComponent_Template","rf","ctx","BossListComponent_div_3_Template","InventoryService","PlayerService","GameSaveService","ToastService","item_r1","bonusStats","hp","strength","agility","intelligence","InventoryComponent_div_5_div_10_span_1_Template","InventoryComponent_div_5_div_10_span_2_Template","InventoryComponent_div_5_div_10_span_3_Template","InventoryComponent_div_5_div_10_span_4_Template","InventoryComponent_div_5_button_12_Template_button_click_0_listener","_r2","ctx_r2","useItem","InventoryComponent_div_5_button_13_Template_button_click_0_listener","_r4","InventoryComponent_div_5_button_14_Template_button_click_0_listener","_r5","toggleEquip","equipped","InventoryComponent_div_5_div_10_Template","InventoryComponent_div_5_button_12_Template","InventoryComponent_div_5_button_13_Template","InventoryComponent_div_5_button_14_Template","icon","getGermanItemType","type","InventoryComponent","inventoryService","playerService","gameSave","toastService","items","getInventory","filter","item","available","sort","a","order","indexOf","now","Date","durationMs","stats","getSnapshot","isBuffFood","endsWith","isPotion","lastBuffFoodUsedAt","last","getTime","show","lastPotionUsedAt","buffs","Object","entries","map","key","val","amount","addBuff","updateStats","toISOString","removeSingleItem","join","statsToApply","updateCurrentGame","checkForUnlockedEquipment","player","questsCompleted","inventory","unlocked","updated","questsRequired","push","setInventory","updateEquippedStatus","latestItem","find","i","slot","console","warn","equipItem","unequipItem","i4","InventoryComponent_Template","InventoryComponent_div_3_Template","InventoryComponent_div_5_Template","QuestService","QuestlogComponent_li_9_button_3_Template_button_click_0_listener","quest_r2","cancelQuest","item_r4","rewardXp","rewardMoney","QuestlogComponent_li_9_div_8_li_4_Template","QuestlogComponent_li_9_div_8_li_5_Template","QuestlogComponent_li_9_div_8_li_6_Template","rewardItems","failedAttempts","QuestlogComponent_li_9_div_10_Template_button_click_1_listener","startQuest","QuestlogComponent_li_9_div_11_Template_button_click_1_listener","_r6","completeQuest","QuestlogComponent_li_9_div_11_Template_button_click_3_listener","failQuest","QuestlogComponent_li_9_button_3_Template","QuestlogComponent_li_9_div_8_Template","QuestlogComponent_li_9_div_9_Template","QuestlogComponent_li_9_div_10_Template","QuestlogComponent_li_9_div_11_Template","status","QuestlogComponent","questService","quests","getQuests","qs","toggleFilter","filteredQuests","q","acquired","markCompleted","QuestlogComponent_Template","QuestlogComponent_Template_button_click_4_listener","QuestlogComponent_Template_button_click_6_listener","QuestlogComponent_li_9_Template","SoundService","ShopService","item_r2","stock","ShopComponent_div_3_p_9_Template","ShopComponent_div_3_p_10_Template","ShopComponent_div_3_Template_button_click_11_listener","buy","price","ShopComponent","soundService","shopService","toast","itemsForSale","getShopItems","_this","_asyncToGenerator","pay","purchasedItem","acquiredAt","addItem","updateStock","playEffect","err","error","i5","i6","ShopComponent_Template","ShopComponent_div_3_Template","ɵɵelementContainerStart","ctx_r1","getBonusSourcesTooltip","key_r1","ɵɵpureFunction2","_c0","getBonus","ɵɵtextInterpolate2","getBonusPrefix","StatsComponent_div_11_ng_container_8_Template","StatsComponent_div_11_ng_template_9_Template","ɵɵtemplateRefExtractor","getStatLabel","tmp_5_0","baseStats","undefined","bonusPlaceholder_r3","getTotal","stat_r4","StatsComponent_div_16_ng_container_1_span_6_Template","tmp_4_0","getEquippedItem","slot_r5","tmp_6_0","getStatBonuses","slotLabels","StatsComponent_div_16_ng_container_1_Template","StatsComponent_div_16_ng_template_2_Template","empty_r6","StatsComponent","equippedItems","activeBuffs","XP_TABLE","equipmentSlots","head","chest","hands","legs","feet","weapon","back","shoulders","belt","wrist","statsKeys","getPlayer","p","removeExpiredBuffs","effectiveStats","getEffectiveStats","buff","validUntil","bonus","formatBuffTooltip","untilRaw","until","timeLeft","Math","ceil","bonuses","getXpPercent","currentXp","experience","xpForNext","min","getXpProgress","currentLevel","level","totalXp","xpAtCurrent","xpAtNext","progress","max","floor","sources","allItems","label","isNumericBonus","numericKeys","includes","labels","money","isBonusPositive","Number","base","StatsComponent_Template","StatsComponent_div_11_Template","StatsComponent_div_16_Template","ɵɵstyleProp","GameComponent_button_1_Template_button_click_0_listener","idx_r2","index","currentIndex","navLabels","navIcons","GameComponent","maxIndex","startX","onTouchStart","event","touches","clientX","onTouchEnd","endX","changedTouches","diff","openScanner","hostBindings","GameComponent_HostBindings","GameComponent_touchstart_HostBindingHandler","$event","GameComponent_touchend_HostBindingHandler","GameComponent_button_1_Template","GameComponent_Template_button_click_23_listener","GameComponent_Template_button_click_25_listener","GameComponent_Template_button_click_27_listener","ɵɵpureFunction0","CommonModule","RouterModule","GameModule","forChild","path","component","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}