{"version":3,"file":"src_app_views_game_game_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAC0D;AAEI;AACrB;;;;;;;;ICArCG,uDAAA,cAAuF;;;;IAA3CA,mEAAA,QAAAG,OAAA,CAAAC,IAAA,CAAqB;IAA5DJ,wDAAA,4BAAAG,OAAA,CAAAG,KAAA,EAAAN,2DAAA,CAAsC;;;;;IAErBA,4DAAA,WAAyB;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAO;;;;IAAzBA,uDAAA,EAAkB;IAAlBA,gEAAA,MAAAG,OAAA,CAAAU,KAAA,MAAkB;;;;;IAa/Db,4DAAA,QAAyB;IAAAA,oDAAA,GAA6B;IAAAA,0DAAA,EAAI;;;;IAAjCA,uDAAA,EAA6B;IAA7BA,gEAAA,eAAAG,OAAA,CAAAW,QAAA,KAA6B;;;;;IAgB5Cd,4DADF,eAAgE,eACtC;IAAAA,oDAAA,GAAyB;IAAAA,0DAAA,EAAO;IACxDA,4DAAA,WAAM;IAAAA,oDAAA,GAAoD;IAC5DA,0DAD4D,EAAO,EAC5D;;;;;IAFmBA,uDAAA,GAAyB;IAAzBA,+DAAA,CAAAgB,MAAA,CAAAC,QAAA,CAAAC,OAAA,CAAAC,IAAA,EAAyB;IAC3CnB,uDAAA,GAAoD;IAApDA,gEAAA,KAAAkB,OAAA,CAAAC,IAAA,OAAAD,OAAA,CAAAG,QAAA,OAAAH,OAAA,CAAAI,KAAA,KAAoD;;;;;IAP5DtB,4DAFJ,cAAiE,cACjC,eACC;IAAAA,oDAAA,GAAc;IAAAA,0DAAA,EAAO;IAClDA,4DAAA,eAA6B;IAAAA,oDAAA,GAAqB;IACpDA,0DADoD,EAAO,EACrD;IAENA,4DAAA,cAAwB;IACtBA,wDAAA,IAAAwB,0DAAA,mBAAgE;IAKpExB,0DADE,EAAM,EACF;;;;IAV2BA,uDAAA,GAAc;IAAdA,+DAAA,CAAAyB,MAAA,CAAArB,IAAA,CAAc;IACdJ,uDAAA,GAAqB;IAArBA,+DAAA,CAAAyB,MAAA,CAAAC,WAAA,CAAqB;IAI3B1B,uDAAA,GAAgB;IAAhBA,wDAAA,YAAAyB,MAAA,CAAAE,SAAA,CAAgB;;;;;IAR7C3B,4DAAA,cAA6D;IAC3DA,wDAAA,IAAA4B,mDAAA,kBAAiE;IAanE5B,0DAAA,EAAM;;;;IAbiBA,uDAAA,EAAkB;IAAlBA,wDAAA,YAAAG,OAAA,CAAA0B,UAAA,CAAkB;;;;;;IALzC7B,4DADF,cAAwD,iBACS;IAApCA,wDAAA,mBAAA+B,gEAAA;MAAA/B,2DAAA,CAAAiC,GAAA;MAAA,MAAA9B,OAAA,GAAAH,2DAAA,GAAAmC,SAAA;MAAA,MAAAnB,MAAA,GAAAhB,2DAAA;MAAA,OAAAA,yDAAA,CAASgB,MAAA,CAAAqB,gBAAA,CAAAlC,OAAA,CAAAmC,EAAA,CAAyB;IAAA,EAAC;IAC5DtC,oDAAA,GACF;IAAAA,0DAAA,EAAS;IAETA,wDAAA,IAAAuC,6CAAA,kBAA6D;IAgB/DvC,0DAAA,EAAM;;;;;IAnBFA,uDAAA,GACF;IADEA,gEAAA,MAAAgB,MAAA,CAAAwB,cAAA,CAAArC,OAAA,CAAAmC,EAAA,sCACF;IAE8BtC,uDAAA,EAA6B;IAA7BA,wDAAA,SAAAgB,MAAA,CAAAwB,cAAA,CAAArC,OAAA,CAAAmC,EAAA,EAA6B;;;;;;IAvBjEtC,4DAAA,aAAoF;IAClFA,wDAAA,IAAAyC,sCAAA,iBAAuF;IAErFzC,4DADF,aAA0B,SACpB;IAAAA,oDAAA,GAAgB;IAAAA,wDAAA,IAAA0C,uCAAA,kBAAyB;IAAyB1C,0DAAA,EAAK;IAC3EA,4DAAA,WAAuB;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAI;IAG/CA,4DADF,aAAwB,WAChB;IAAAA,oDAAA,IAA6B;IAAAA,0DAAA,EAAO;IAC1CA,4DAAA,YAAM;IAAAA,oDAAA,IAA2B;IAAAA,0DAAA,EAAO;IACxCA,4DAAA,YAAM;IAAAA,oDAAA,IAAgC;IAAAA,0DAAA,EAAO;IAC7CA,4DAAA,YAAM;IAAAA,oDAAA,IAAsB;IAAAA,0DAAA,EAAO;IACnCA,4DAAA,YAAM;IAAAA,oDAAA,IAAyB;IAAAA,0DAAA,EAAO;IACtCA,4DAAA,YAAM;IAAAA,oDAAA,IAAwB;IAChCA,0DADgC,EAAO,EACjC;IAENA,4DAAA,SAAG;IAAAA,oDAAA,gBAAQ;IAAAA,4DAAA,cAAQ;IAAAA,oDAAA,IAAoD;IAASA,0DAAT,EAAS,EAAI;IAGpFA,wDAFA,KAAA2C,qCAAA,eAAyB,KAAAC,uCAAA,iBAE+B;IAuBxD5C,4DAAA,iBAAqF;IAA1DA,wDAAA,mBAAA6C,0DAAA;MAAA,MAAA1C,OAAA,GAAAH,2DAAA,CAAA8C,GAAA,EAAAX,SAAA;MAAA,MAAAnB,MAAA,GAAAhB,2DAAA;MAAA,OAAAA,yDAAA,CAASgB,MAAA,CAAA+B,WAAA,CAAA5C,OAAA,CAAAmC,EAAA,CAAoB;IAAA,EAAC;IACvDtC,oDAAA,uBACF;IAEJA,0DAFI,EAAS,EACL,EACF;;;;IA7C6CA,yDAAA,aAAAG,OAAA,CAAA8C,QAAA,CAAgC;IACdjD,uDAAA,EAAgB;IAAhBA,wDAAA,SAAAG,OAAA,CAAAG,KAAA,CAAgB;IAE7EN,uDAAA,GAAgB;IAAhBA,gEAAA,KAAAG,OAAA,CAAAC,IAAA,MAAgB;IAAOJ,uDAAA,EAAgB;IAAhBA,wDAAA,SAAAG,OAAA,CAAAU,KAAA,CAAgB;IACpBb,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAG,OAAA,CAAAuB,WAAA,CAAsB;IAGrC1B,uDAAA,GAA6B;IAA7BA,gEAAA,wBAAAG,OAAA,CAAA+C,KAAA,CAAAC,QAAA,KAA6B;IAC7BnD,uDAAA,GAA2B;IAA3BA,gEAAA,kBAAAG,OAAA,CAAA+C,KAAA,CAAAE,OAAA,KAA2B;IAC3BpD,uDAAA,GAAgC;IAAhCA,gEAAA,kBAAAG,OAAA,CAAA+C,KAAA,CAAAG,YAAA,KAAgC;IAChCrD,uDAAA,GAAsB;IAAtBA,gEAAA,kBAAAG,OAAA,CAAA+C,KAAA,CAAAI,EAAA,KAAsB;IACtBtD,uDAAA,GAAyB;IAAzBA,gEAAA,kBAAAG,OAAA,CAAA+C,KAAA,CAAAK,KAAA,KAAyB;IACzBvD,uDAAA,GAAwB;IAAxBA,gEAAA,YAAAG,OAAA,CAAA+C,KAAA,CAAAM,KAAA,KAAwB;IAGbxD,uDAAA,GAAoD;IAApDA,+DAAA,CAAAG,OAAA,CAAA8C,QAAA,kCAAoD;IACnEjD,uDAAA,EAAmB;IAAnBA,wDAAA,SAAAG,OAAA,CAAAW,QAAA,CAAmB;IAEjBd,uDAAA,EAA6B;IAA7BA,wDAAA,SAAAG,OAAA,CAAA0B,UAAA,kBAAA1B,OAAA,CAAA0B,UAAA,CAAA4B,MAAA,CAA6B;IAuBuBzD,uDAAA,EAA0B;IAA1BA,wDAAA,aAAAG,OAAA,CAAA8C,QAAA,CAA0B;;;ADhCnF,IAAMS,iBAAiB;EAAxB,MAAOA,iBAAiB;IAKlBC,WAAA;IACAC,aAAA;IACAC,MAAA;IANVC,MAAM,GAAW,EAAE;IACnBC,mBAAmB,GAA4B,EAAE;IAEjDC,YACUL,WAAwB,EACxBC,aAA4B,EAC5BC,MAAc;MAFd,KAAAF,WAAW,GAAXA,WAAW;MACX,KAAAC,aAAa,GAAbA,aAAa;MACb,KAAAC,MAAM,GAANA,MAAM;IACb;IAEHI,QAAQA,CAAA;MACN,IAAI,CAACN,WAAW,CAACO,SAAS,EAAE,CAACC,SAAS,CAACC,CAAC,IAAG;QACzC,IAAI,CAACN,MAAM,GAAGM,CAAC;QACf,IAAI,CAACN,MAAM,CAACO,OAAO,CAACC,IAAI,IAAI,IAAI,CAACP,mBAAmB,CAACO,IAAI,CAAChC,EAAE,CAAC,GAAG,KAAK,CAAC;MACxE,CAAC,CAAC;IACJ;IAEAD,gBAAgBA,CAACkC,MAAc;MAC7B,IAAI,CAACR,mBAAmB,CAACQ,MAAM,CAAC,GAAG,CAAC,IAAI,CAACR,mBAAmB,CAACQ,MAAM,CAAC;IACtE;IAEA/B,cAAcA,CAAC+B,MAAc;MAC3B,OAAO,IAAI,CAACR,mBAAmB,CAACQ,MAAM,CAAC;IACzC;IAEAxB,WAAWA,CAACwB,MAAc;MACxB,IAAI,CAACX,aAAa,CAACb,WAAW,CAACwB,MAAM,CAAC;MACtC,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;IACnC;IAEAvD,QAAQA,CAACE,IAAY;MACrB,QAAQA,IAAI;QACV,KAAK,UAAU;UAAE,OAAO,KAAK;QAC7B,KAAK,SAAS;UAAE,OAAO,IAAI;QAC3B,KAAK,cAAc;UAAE,OAAO,IAAI;QAChC,KAAK,IAAI;UAAE,OAAO,IAAI;QACtB,KAAK,OAAO;UAAE,OAAO,GAAG;QACxB,KAAK,OAAO;UAAE,OAAO,IAAI;QACzB,KAAK,YAAY;UAAE,OAAO,IAAI;QAC9B;UAAS,OAAO,GAAG;MACrB;IACF;;uBAzCauC,iBAAiB,EAAA1D,+DAAA,CAAA0E,oEAAA,GAAA1E,+DAAA,CAAA2E,wEAAA,GAAA3E,+DAAA,CAAA4E,mDAAA;IAAA;;YAAjBlB,iBAAiB;MAAAmB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCX5BnF,4DADF,aAAuB,SACjB;UAAAA,oDAAA,yBAAa;UAAAA,0DAAA,EAAK;UAEtBA,wDAAA,IAAAqF,gCAAA,mBAAoF;UA8CtFrF,0DAAA,EAAM;;;UA9CkBA,uDAAA,GAAS;UAATA,wDAAA,YAAAoF,GAAA,CAAAtB,MAAA,CAAS;;;;;;;SDSpBJ,iBAAiB;AAAA,K;;;;;;;;;;;;;;;;;;AEXsC;AACN;;;;;;;ICA5D1D,4DAAA,aAAmD;IACjDA,oDAAA,gCACF;IAAAA,0DAAA,EAAM;;;;;IAaEA,4DAAA,WAAiC;IAAAA,oDAAA,GAA+B;IAAAA,0DAAA,EAAO;;;;IAAtCA,uDAAA,EAA+B;IAA/BA,gEAAA,sBAAAwF,OAAA,CAAAC,UAAA,CAAAnC,EAAA,KAA+B;;;;;IAChEtD,4DAAA,WAAuC;IAAAA,oDAAA,GAA0C;IAAAA,0DAAA,EAAO;;;;IAAjDA,uDAAA,EAA0C;IAA1CA,gEAAA,qCAAAwF,OAAA,CAAAC,UAAA,CAAAtC,QAAA,KAA0C;;;;;IACjFnD,4DAAA,WAAsC;IAAAA,oDAAA,GAA0C;IAAAA,0DAAA,EAAO;;;;IAAjDA,uDAAA,EAA0C;IAA1CA,gEAAA,4BAAAwF,OAAA,CAAAC,UAAA,CAAArC,OAAA,KAA0C;;;;;IAChFpD,4DAAA,WAA2C;IAAAA,oDAAA,GAAkD;IAAAA,0DAAA,EAAO;;;;IAAzDA,uDAAA,EAAkD;IAAlDA,gEAAA,+BAAAwF,OAAA,CAAAC,UAAA,CAAApC,YAAA,KAAkD;;;;;IAJ/FrD,4DAAA,cAAkD;IAIhDA,wDAHA,IAAA0F,+CAAA,mBAAiC,IAAAC,+CAAA,mBACM,IAAAC,+CAAA,mBACD,IAAAC,+CAAA,mBACK;IAC7C7F,0DAAA,EAAM;;;;IAJGA,uDAAA,EAAwB;IAAxBA,wDAAA,SAAAwF,OAAA,CAAAC,UAAA,CAAAnC,EAAA,CAAwB;IACxBtD,uDAAA,EAA8B;IAA9BA,wDAAA,SAAAwF,OAAA,CAAAC,UAAA,CAAAtC,QAAA,CAA8B;IAC9BnD,uDAAA,EAA6B;IAA7BA,wDAAA,SAAAwF,OAAA,CAAAC,UAAA,CAAArC,OAAA,CAA6B;IAC7BpD,uDAAA,EAAkC;IAAlCA,wDAAA,SAAAwF,OAAA,CAAAC,UAAA,CAAApC,YAAA,CAAkC;;;;;;IAIzCrD,4DAAA,iBAA4F;IAAxBA,wDAAA,mBAAA8F,oEAAA;MAAA9F,2DAAA,CAAA+F,GAAA;MAAA,MAAAP,OAAA,GAAAxF,2DAAA,GAAAmC,SAAA;MAAA,MAAA6D,MAAA,GAAAhG,2DAAA;MAAA,OAAAA,yDAAA,CAASgG,MAAA,CAAAC,OAAA,CAAAT,OAAA,CAAa;IAAA,EAAC;IAACxF,oDAAA,eAAQ;IAAAA,0DAAA,EAAS;;;;;IAC7GA,4DAAA,iBAAmE;IAAAA,oDAAA,qBAAS;IAAAA,0DAAA,EAAS;;;;;IAlB3FA,4DAAA,aAAkD;IAChDA,uDAAA,aAAoF;IAGhFA,4DAFJ,aAA0B,aACC,gBACG;IAAAA,oDAAA,GAAe;IAAAA,0DAAA,EAAS;IAClDA,4DAAA,eAAwB;IAAAA,oDAAA,GAAiB;IAC3CA,0DAD2C,EAAO,EAC5C;IACNA,4DAAA,YAA4B;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAI;IAEtDA,wDAAA,KAAAkG,wCAAA,kBAAkD;IAOlDlG,4DAAA,eAA0B;IAExBA,wDADA,KAAAmG,2CAAA,qBAA4F,KAAAC,2CAAA,qBACzB;IAGzEpG,0DAFI,EAAM,EACF,EACF;;;;IApBwDA,uDAAA,EAAqB;IAArBA,mEAAA,QAAAwF,OAAA,CAAApF,IAAA,CAAqB;IAA1DJ,wDAAA,2BAAAwF,OAAA,CAAAa,IAAA,EAAArG,2DAAA,CAAoC;IAG7BA,uDAAA,GAAe;IAAfA,+DAAA,CAAAwF,OAAA,CAAApF,IAAA,CAAe;IACjBJ,uDAAA,GAAiB;IAAjBA,gEAAA,MAAAwF,OAAA,CAAAc,IAAA,MAAiB;IAEftG,uDAAA,GAAsB;IAAtBA,+DAAA,CAAAwF,OAAA,CAAA9D,WAAA,CAAsB;IAEvB1B,uDAAA,EAAqB;IAArBA,wDAAA,SAAAwF,OAAA,CAAAC,UAAA,CAAqB;IAQrCzF,uDAAA,GAAgC;IAAhCA,wDAAA,SAAAwF,OAAA,CAAAc,IAAA,kBAAgC;IAChCtG,uDAAA,EAA+B;IAA/BA,wDAAA,SAAAwF,OAAA,CAAAc,IAAA,iBAA+B;;;ADd3C,IAAMC,kBAAkB;EAAzB,MAAOA,kBAAkB;IAGTC,gBAAA;IAA4CC,aAAA;IAFhEC,KAAK,GAAW,EAAE;IAElB1C,YAAoBwC,gBAAkC,EAAUC,aAA4B;MAAxE,KAAAD,gBAAgB,GAAhBA,gBAAgB;MAA4B,KAAAC,aAAa,GAAbA,aAAa;IAAkB;IAE/FxC,QAAQA,CAAA;MACR,IAAI,CAACuC,gBAAgB,CAACG,YAAY,EAAE,CAACxC,SAAS,CAACuC,KAAK,IAAG;QACrD,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,KAAK,KAAK,CAAC;MAC7D,CAAC,CAAC;IACJ;IAEEb,OAAOA,CAACY,IAAU;MAChB;MACAE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,CAACzG,IAAI,CAAC;IACpC;IAEA6G,yBAAyBA,CAAA;MACzB,MAAMC,MAAM,GAAG,IAAI,CAACT,aAAa,CAACU,WAAW,EAAE,IAAI;QAAEC,eAAe,EAAE;MAAC,CAAE;MACzE,MAAMC,SAAS,GAAG,IAAI,CAACb,gBAAgB,CAACW,WAAW,EAAE;MAErD,MAAMG,QAAQ,GAAW,EAAE;MAE3B,MAAMC,OAAO,GAAGF,SAAS,CAACG,GAAG,CAACX,IAAI,IAAG;QACnC,IACEA,IAAI,CAACP,IAAI,KAAK,WAAW,IACzBO,IAAI,CAACY,cAAc,IAAI,IAAI,IAC3BZ,IAAI,CAACY,cAAc,KAAKP,MAAM,CAACE,eAAe,IAAI,CAAC,CAAC,IACpDP,IAAI,CAACC,SAAS,KAAK,IAAI,EACvB;UACAQ,QAAQ,CAACI,IAAI,CAAC;YAAE,GAAGb,IAAI;YAAEC,SAAS,EAAE;UAAI,CAAE,CAAC;UAC3C,OAAO;YAAE,GAAGD,IAAI;YAAEC,SAAS,EAAE;UAAI,CAAE;QACrC;QACA,OAAOD,IAAI;MACb,CAAC,CAAC;MAEF,IAAIS,QAAQ,CAAC7D,MAAM,GAAG,CAAC,EAAE;QACvB,IAAI,CAAC+C,gBAAgB,CAACmB,YAAY,CAACJ,OAAO,CAAC;QAC3C;QACA;MACF;IACF;;uBAxCahB,kBAAkB,EAAAvG,+DAAA,CAAA0E,8EAAA,GAAA1E,+DAAA,CAAA2E,wEAAA;IAAA;;YAAlB4B,kBAAkB;MAAA1B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA2C,4BAAAzC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV7BnF,4DADF,aAAuB,SACjB;UAAAA,oDAAA,eAAQ;UAAAA,0DAAA,EAAK;UACjBA,wDAAA,IAAA6H,iCAAA,iBAAmD;UAInD7H,4DAAA,aAAuB;UACrBA,wDAAA,IAAA8H,iCAAA,kBAAkD;UAuBtD9H,0DADE,EAAM,EACF;;;UA5BEA,uDAAA,GAAwB;UAAxBA,wDAAA,SAAAoF,GAAA,CAAAsB,KAAA,CAAAjD,MAAA,OAAwB;UAKYzD,uDAAA,GAAQ;UAARA,wDAAA,YAAAoF,GAAA,CAAAsB,KAAA,CAAQ;;;;;;;SDIvCH,kBAAkB;AAAA,K;;;;;;;;;;;;;;;;;;;AEV6B;AAEQ;AACN;;;;;;;;;ICmBtDvG,4DAAA,gBAC0D;IAAhCA,wDAAA,mBAAAgI,iEAAA;MAAAhI,2DAAA,CAAA8C,GAAA;MAAA,MAAAmF,QAAA,GAAAjI,2DAAA,GAAAmC,SAAA;MAAA,MAAA6D,MAAA,GAAAhG,2DAAA;MAAA,OAAAA,yDAAA,CAASgG,MAAA,CAAAkC,WAAA,CAAAD,QAAA,CAAA3F,EAAA,CAAqB;IAAA,EAAC;IACvDtC,oDAAA,eACF;IAAAA,0DAAA,EAAS;;;;;IAQPA,4DAAA,SAA2C;IAAAA,oDAAA,GAAe;IAAAA,0DAAA,EAAK;;;;IAApBA,uDAAA,EAAe;IAAfA,+DAAA,CAAAmI,OAAA,CAAA/H,IAAA,CAAe;;;;;IAC1DJ,4DAAA,SAA2B;IAAAA,oDAAA,GAAwB;IAAAA,0DAAA,EAAK;;;;IAA7BA,uDAAA,EAAwB;IAAxBA,gEAAA,SAAAiI,QAAA,CAAAG,QAAA,KAAwB;;;;;IACnDpI,4DAAA,SAA8B;IAAAA,oDAAA,GAA2B;IAAAA,0DAAA,EAAK;;;;IAAhCA,uDAAA,EAA2B;IAA3BA,gEAAA,mBAAAiI,QAAA,CAAAI,WAAA,KAA2B;;;;;IAJ3DrI,4DADF,cAA6F,aACnF;IAAAA,oDAAA,iBAAU;IAAAA,0DAAA,EAAS;IAC3BA,4DAAA,SAAI;IAGFA,wDAFA,IAAAsI,0CAAA,iBAA2C,IAAAC,0CAAA,gBAChB,IAAAC,0CAAA,gBACG;IAElCxI,0DADE,EAAK,EACD;;;;IAJmBA,uDAAA,GAAoB;IAApBA,wDAAA,YAAAiI,QAAA,CAAAQ,WAAA,CAAoB;IACpCzI,uDAAA,EAAoB;IAApBA,wDAAA,SAAAiI,QAAA,CAAAG,QAAA,CAAoB;IACpBpI,uDAAA,EAAuB;IAAvBA,wDAAA,SAAAiI,QAAA,CAAAI,WAAA,CAAuB;;;;;IAIhCrI,4DAAA,UAAkC;IAAAA,oDAAA,GAAwC;IAAAA,0DAAA,EAAM;;;;IAA9CA,uDAAA,EAAwC;IAAxCA,gEAAA,mBAAAiI,QAAA,CAAAS,cAAA,KAAwC;;;;;;IAGxE1I,4DADF,cAA8E,iBAClB;IAA/BA,wDAAA,mBAAA2I,+DAAA;MAAA3I,2DAAA,CAAA4I,GAAA;MAAA,MAAAX,QAAA,GAAAjI,2DAAA,GAAAmC,SAAA;MAAA,MAAA6D,MAAA,GAAAhG,2DAAA;MAAA,OAAAA,yDAAA,CAASgG,MAAA,CAAA6C,UAAA,CAAAZ,QAAA,CAAA3F,EAAA,CAAoB;IAAA,EAAC;IAACtC,oDAAA,oBAAa;IACzEA,0DADyE,EAAS,EAC5E;;;;;;IAGJA,4DADF,cAAsD,iBACS;IAAlCA,wDAAA,mBAAA8I,+DAAA;MAAA9I,2DAAA,CAAA+I,GAAA;MAAA,MAAAd,QAAA,GAAAjI,2DAAA,GAAAmC,SAAA;MAAA,MAAA6D,MAAA,GAAAhG,2DAAA;MAAA,OAAAA,yDAAA,CAASgG,MAAA,CAAAgD,aAAA,CAAAf,QAAA,CAAA3F,EAAA,CAAuB;IAAA,EAAC;IAACtC,oDAAA,eAAQ;IAAAA,0DAAA,EAAS;IACtFA,4DAAA,iBAAyD;IAA9BA,wDAAA,mBAAAiJ,+DAAA;MAAAjJ,2DAAA,CAAA+I,GAAA;MAAA,MAAAd,QAAA,GAAAjI,2DAAA,GAAAmC,SAAA;MAAA,MAAA6D,MAAA,GAAAhG,2DAAA;MAAA,OAAAA,yDAAA,CAASgG,MAAA,CAAAkD,SAAA,CAAAjB,QAAA,CAAA3F,EAAA,CAAmB;IAAA,EAAC;IAACtC,oDAAA,qBAAc;IACjEA,0DADiE,EAAS,EACpE;;;;;IA3BNA,4DADF,SAA0F,SACpF;IAAAA,oDAAA,GACF;IAAAA,wDAAA,IAAAmJ,wCAAA,oBAC0D;IAG5DnJ,0DAAA,EAAK;IACLA,4DAAA,QAAG;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAI;IAC9BA,4DAAA,WAA2C;IAAAA,oDAAA,GAA0B;IAAAA,0DAAA,EAAI;IAiBzEA,wDAfA,IAAAoJ,qCAAA,iBAA6F,IAAAC,qCAAA,iBAS3D,KAAAC,sCAAA,iBAE4C,KAAAC,sCAAA,iBAIxB;IAIxDvJ,0DAAA,EAAK;;;;IA7BoCA,yDAAA,cAAAiI,QAAA,CAAAuB,MAAA,iBAAgD;IACnFxJ,uDAAA,GACF;IADEA,gEAAA,KAAAiI,QAAA,CAAApH,KAAA,MACF;IAASb,uDAAA,EAAuD;IAAvDA,wDAAA,SAAAiI,QAAA,CAAA3B,IAAA,eAAA2B,QAAA,CAAAuB,MAAA,aAAuD;IAK/DxJ,uDAAA,GAAuB;IAAvBA,+DAAA,CAAAiI,QAAA,CAAAvG,WAAA,CAAuB;IACR1B,uDAAA,EAAwB;IAAxBA,wDAAA,YAAAiI,QAAA,CAAAuB,MAAA,CAAwB;IAACxJ,uDAAA,EAA0B;IAA1BA,gEAAA,aAAAiI,QAAA,CAAAuB,MAAA,KAA0B;IAE/DxJ,uDAAA,EAAsE;IAAtEA,wDAAA,UAAAiI,QAAA,CAAAQ,WAAA,kBAAAR,QAAA,CAAAQ,WAAA,CAAAhF,MAAA,KAAAwE,QAAA,CAAAG,QAAA,IAAAH,QAAA,CAAAI,WAAA,CAAsE;IAStErI,uDAAA,EAA0B;IAA1BA,wDAAA,SAAAiI,QAAA,CAAAS,cAAA,CAA0B;IAEV1I,uDAAA,EAAsD;IAAtDA,wDAAA,SAAAiI,QAAA,CAAA3B,IAAA,eAAA2B,QAAA,CAAAuB,MAAA,YAAsD;IAItDxJ,uDAAA,EAA8B;IAA9BA,wDAAA,SAAAiI,QAAA,CAAAuB,MAAA,aAA8B;;;ADlCnD,IAAMC,iBAAiB;EAAxB,MAAOA,iBAAiB;IAIRC,YAAA;IAAoClD,gBAAA;IAC9CC,aAAA;IAJVkD,MAAM,GAAY,EAAE;IACpB/C,MAAM,GAAoB,MAAM;IAEhC5C,YAAoB0F,YAA0B,EAAUlD,gBAAkC,EAChFC,aAA4B;MADlB,KAAAiD,YAAY,GAAZA,YAAY;MAAwB,KAAAlD,gBAAgB,GAAhBA,gBAAgB;MAC9D,KAAAC,aAAa,GAAbA,aAAa;IAAmB;IAE1CxC,QAAQA,CAAA;MACN,IAAI,CAACyF,YAAY,CAACE,SAAS,EAAE,CAACzF,SAAS,CAAC0F,EAAE,IAAI,IAAI,CAACF,MAAM,GAAGE,EAAE,CAAC;IACjE;IAEAC,YAAYA,CAACxD,IAAqB;MAChC,IAAI,CAACM,MAAM,GAAGN,IAAI;IACpB;IAEA,IAAIyD,cAAcA,CAAA;MAClB,OAAO,IAAI,CAACJ,MAAM,CAAC/C,MAAM,CAACoD,CAAC,IAAIA,CAAC,CAAC1D,IAAI,KAAK,IAAI,CAACM,MAAM,IAAIoD,CAAC,CAACC,QAAQ,CAAC;IACtE;IAEEpB,UAAUA,CAACvG,EAAU;MACnB,IAAI,CAACoH,YAAY,CAACb,UAAU,CAACvG,EAAE,CAAC;IAClC;IAEA4G,SAASA,CAAC5G,EAAU;MAClB,IAAI,CAACoH,YAAY,CAACR,SAAS,CAAC5G,EAAE,CAAC;IACjC;IAEA0G,aAAaA,CAAC1G,EAAU;MACtB,IAAI,CAACoH,YAAY,CAACQ,aAAa,CAAC5H,EAAE,EAAE,IAAI,CAACkE,gBAAgB,EAAE,IAAI,CAACC,aAAa,CAAC;IAChF;IAEA;IAEF;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IAEEyB,WAAWA,CAAC5F,EAAU;MACpB,IAAI,CAACoH,YAAY,CAACxB,WAAW,CAAC5F,EAAE,CAAC;IACnC;;uBAnDWmH,iBAAiB,EAAAzJ,+DAAA,CAAA0E,sEAAA,GAAA1E,+DAAA,CAAA2E,8EAAA,GAAA3E,+DAAA,CAAA4E,wEAAA;IAAA;;YAAjB6E,iBAAiB;MAAA5E,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAkF,2BAAAhF,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCC5BnF,4DADF,aAAsB,SAChB;UAAAA,oDAAA,eAAQ;UAAAA,0DAAA,EAAK;UAGfA,4DADF,aAAqB,gBACuD;UAA/BA,wDAAA,mBAAAoK,mDAAA;YAAA,OAAShF,GAAA,CAAA0E,YAAA,CAAa,MAAM,CAAC;UAAA,EAAC;UAAC9J,oDAAA,kBAAW;UAAAA,0DAAA,EAAS;UAC9FA,4DAAA,gBAA0E;UAA/BA,wDAAA,mBAAAqK,mDAAA;YAAA,OAASjF,GAAA,CAAA0E,YAAA,CAAa,MAAM,CAAC;UAAA,EAAC;UAAC9J,oDAAA,kBAAW;UACvFA,0DADuF,EAAS,EAC1F;UAENA,4DAAA,SAAI;UACFA,wDAAA,IAAAsK,+BAAA,kBAA0F;UA+B9FtK,0DADE,EAAK,EACD;;;UApCMA,uDAAA,GAAkC;UAAlCA,yDAAA,WAAAoF,GAAA,CAAAwB,MAAA,YAAkC;UAClC5G,uDAAA,GAAkC;UAAlCA,yDAAA,WAAAoF,GAAA,CAAAwB,MAAA,YAAkC;UAIpB5G,uDAAA,GAAiB;UAAjBA,wDAAA,YAAAoF,GAAA,CAAA2E,cAAA,CAAiB;;;;;;;SDT9BN,iBAAiB;AAAA,K;;;;;;;;;;;;;;;;;;;;;;;AEXsC;AACN;AACF;AAIO;AACT;;;;;;;;;;ICAtDzJ,4DAAA,QAA0B;IAAAA,oDAAA,GAA2B;IAAAA,0DAAA,EAAI;;;;IAA/BA,uDAAA,EAA2B;IAA3BA,gEAAA,qBAAA0K,OAAA,CAAAC,KAAA,KAA2B;;;;;IACrD3K,4DAAA,WAA6C;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAI;;;;;IAK9DA,4DAAA,cAAwC;IAAAA,oDAAA,GAAa;IAAAA,0DAAA,EAAM;;;;IAAnBA,uDAAA,EAAa;IAAbA,+DAAA,CAAAgG,MAAA,CAAA4E,OAAA,CAAa;;;;;;IAZrD5K,4DAAA,aAAoD;IACpDA,uDAAA,aAA8D;IAE5DA,4DADF,aAAuB,aACb;IAAAA,oDAAA,GAAe;IAAAA,0DAAA,EAAS;IAChCA,4DAAA,QAAG;IAAAA,oDAAA,GAAsB;IAAAA,0DAAA,EAAI;IAC7BA,4DAAA,QAAG;IAAAA,oDAAA,GAA2B;IAAAA,0DAAA,EAAI;IAElCA,wDADA,IAAA6K,gCAAA,eAA0B,KAAAC,iCAAA,eACmB;IAC7C9K,4DAAA,iBAAmF;IAApBA,wDAAA,mBAAA+K,sDAAA;MAAA,MAAAL,OAAA,GAAA1K,2DAAA,CAAA8C,GAAA,EAAAX,SAAA;MAAA,MAAA6D,MAAA,GAAAhG,2DAAA;MAAA,OAAAA,yDAAA,CAASgG,MAAA,CAAAgF,GAAA,CAAAN,OAAA,CAAS;IAAA,EAAC;IAChF1K,oDAAA,gBACF;IACFA,0DADE,EAAS,EACL;IACNA,wDAAA,KAAAiL,mCAAA,iBAAwC;IAC1CjL,0DAAA,EAAM;;;;;IAZmBA,uDAAA,EAAoC;IAApCA,wDAAA,2BAAA0K,OAAA,CAAArE,IAAA,EAAArG,2DAAA,CAAoC;IAEjDA,uDAAA,GAAe;IAAfA,+DAAA,CAAA0K,OAAA,CAAAtK,IAAA,CAAe;IACpBJ,uDAAA,GAAsB;IAAtBA,+DAAA,CAAA0K,OAAA,CAAAhJ,WAAA,CAAsB;IACtB1B,uDAAA,GAA2B;IAA3BA,gEAAA,YAAA0K,OAAA,CAAAQ,KAAA,SAA2B;IAC1BlL,uDAAA,EAAoB;IAApBA,wDAAA,SAAA0K,OAAA,CAAAC,KAAA,KAAoB;IACpB3K,uDAAA,EAAsB;IAAtBA,wDAAA,SAAA0K,OAAA,CAAAC,KAAA,OAAsB;IACO3K,uDAAA,EAA6B;IAA7BA,wDAAA,aAAA0K,OAAA,CAAAC,KAAA,OAA6B;IAI1D3K,uDAAA,GAAa;IAAbA,wDAAA,SAAAgG,MAAA,CAAA4E,OAAA,CAAa;;;ADEd,IAAMO,aAAa;EAApB,MAAOA,aAAa;IAKd3E,gBAAA;IACAC,aAAA;IACA2E,YAAA;IACAC,WAAA;IACAC,QAAA;IARVC,YAAY,GAAe,EAAE;IAC7BX,OAAO,GAAG,EAAE;IAEZ5G,YACUwC,gBAAkC,EAClCC,aAA4B,EAC5B2E,YAA0B,EAC1BC,WAAwB,EACxBC,QAAyB;MAJzB,KAAA9E,gBAAgB,GAAhBA,gBAAgB;MAChB,KAAAC,aAAa,GAAbA,aAAa;MACb,KAAA2E,YAAY,GAAZA,YAAY;MACZ,KAAAC,WAAW,GAAXA,WAAW;MACX,KAAAC,QAAQ,GAARA,QAAQ;IACd;IAEJrH,QAAQA,CAAA;MACN,IAAI,CAACoH,WAAW,CAACG,YAAY,EAAE,CAACrH,SAAS,CAACuC,KAAK,IAAG;QAChD,IAAI,CAAC6E,YAAY,GAAG7E,KAAK;MAC3B,CAAC,CAAC;IACJ;IAEMsE,GAAGA,CAACnE,IAAc;MAAA,IAAA4E,KAAA;MAAA,OAAAC,wKAAA;QACtB,IAAI7E,IAAI,CAAC8D,KAAK,IAAI,CAAC,EAAE;QAErB,IAAIc,KAAI,CAAChF,aAAa,CAACkF,GAAG,CAAC9E,IAAI,CAACqE,KAAM,CAAC,EAAE;UACvC,MAAMU,aAAa,GAAG;YAAE,GAAG/E,IAAI;YAAEgF,UAAU,EAAE,IAAIC,IAAI;UAAE,CAAE;UACzDL,KAAI,CAACjF,gBAAgB,CAACuF,OAAO,CAACH,aAAa,CAAC;UAC5CH,KAAI,CAACJ,WAAW,CAACW,WAAW,CAACnF,IAAI,CAACvE,EAAE,EAAE,CAAC,CAAC,CAAC;UAEzC,IAAI;YACF,MAAMmJ,KAAI,CAACH,QAAQ,CAACW,iBAAiB,EAAE;YACvCR,KAAI,CAACL,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC;YACpCT,KAAI,CAACU,WAAW,CAAC,YAAYtF,IAAI,CAACzG,IAAI,EAAE,CAAC;UAC3C,CAAC,CAAC,OAAOgM,GAAG,EAAE;YACZrF,OAAO,CAACsF,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;YAC5CX,KAAI,CAACU,WAAW,CAAC,wBAAwB,CAAC;UAC5C;QACF,CAAC,MAAM;UACLV,KAAI,CAACU,WAAW,CAAC,kBAAkB,CAAC;QACtC;MAAC;IACH;IACAA,WAAWA,CAACG,IAAY;MACtB,IAAI,CAAC1B,OAAO,GAAG0B,IAAI;MAEnBC,UAAU,CAAC,MAAK;QACd,IAAI,CAAC3B,OAAO,GAAG,EAAE;MACnB,CAAC,EAAE,IAAI,CAAC;IACV;;uBA5CWO,aAAa,EAAAnL,+DAAA,CAAA0E,8EAAA,GAAA1E,+DAAA,CAAA2E,wEAAA,GAAA3E,+DAAA,CAAA4E,sEAAA,GAAA5E,+DAAA,CAAAwM,oEAAA,GAAAxM,+DAAA,CAAAyM,6EAAA;IAAA;;YAAbtB,aAAa;MAAAtG,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAyH,uBAAAvH,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCfxBnF,4DADF,aAAkB,SACZ;UAAAA,oDAAA,WAAI;UAAAA,0DAAA,EAAK;UACbA,wDAAA,IAAA2M,4BAAA,kBAAoD;UAFtD3M,0DAAA,EAAkB;;;UAEmBA,uDAAA,GAAe;UAAfA,wDAAA,YAAAoF,GAAA,CAAAmG,YAAA,CAAe;;;;;;;SDcvCJ,aAAa;AAAA,K;;;;;;;;;;;;;;;;;AEfoC;;;;;;ICC1DnL,4DADF,aAA+C,SACzC;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAK;IAEdA,4DADN,SAAI,SACE,aAAQ;IAAAA,oDAAA,UAAG;IAAAA,0DAAA,EAAS;IAACA,oDAAA,GAAc;IAAAA,0DAAA,EAAK;IACxCA,4DAAJ,SAAI,aAAQ;IAAAA,oDAAA,oBAAO;IAAAA,0DAAA,EAAS;IAACA,oDAAA,IAAoB;IAAAA,0DAAA,EAAK;IAClDA,4DAAJ,UAAI,cAAQ;IAAAA,oDAAA,sBAAS;IAAAA,0DAAA,EAAS;IAACA,oDAAA,IAAmB;IAAAA,0DAAA,EAAK;IACnDA,4DAAJ,UAAI,cAAQ;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAS;IAACA,oDAAA,IAAwB;IAAAA,0DAAA,EAAK;IAC3DA,4DAAJ,UAAI,cAAQ;IAAAA,oDAAA,YAAI;IAAAA,0DAAA,EAAS;IAACA,oDAAA,IAAiB;IAE/CA,0DAF+C,EAAK,EAC7C,EACD;;;;IANuBA,uDAAA,GAAc;IAAdA,gEAAA,MAAA4M,MAAA,CAAA1J,KAAA,CAAAI,EAAA,KAAc;IACVtD,uDAAA,GAAoB;IAApBA,gEAAA,MAAA4M,MAAA,CAAA1J,KAAA,CAAAC,QAAA,KAAoB;IAClBnD,uDAAA,GAAmB;IAAnBA,gEAAA,MAAA4M,MAAA,CAAA1J,KAAA,CAAAE,OAAA,KAAmB;IAChBpD,uDAAA,GAAwB;IAAxBA,gEAAA,MAAA4M,MAAA,CAAA1J,KAAA,CAAAG,YAAA,KAAwB;IAChCrD,uDAAA,GAAiB;IAAjBA,gEAAA,MAAA4M,MAAA,CAAA1J,KAAA,CAAAK,KAAA,KAAiB;;;;;IAK7CvD,4DADF,UAAoB,QACf;IAAAA,oDAAA,2BAAoB;IACzBA,0DADyB,EAAI,EACvB;;;ADJD,IAAM6M,cAAc;EAArB,MAAOA,cAAc;IAGLpG,aAAA;IAFpBvD,KAAK,GAAuB,IAAI;IAEhCc,YAAoByC,aAA4B;MAA5B,KAAAA,aAAa,GAAbA,aAAa;IAAkB;IAEnDxC,QAAQA,CAAA;MACN,IAAI,CAACwC,aAAa,CAACqG,SAAS,EAAE,CAAC3I,SAAS,CAAC4I,CAAC,IAAI,IAAI,CAAC7J,KAAK,GAAG6J,CAAC,CAAC;IAC/D;;uBAPWF,cAAc,EAAA7M,+DAAA,CAAA0E,wEAAA;IAAA;;YAAdmI,cAAc;MAAAhI,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA+H,wBAAA7H,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV3BnF,4DAAA,aAAc;UAYZA,wDAXA,IAAAiN,6BAAA,kBAA+C,IAAAC,6BAAA,iBAW3B;UAGtBlN,0DAAA,EAAM;;;UAdEA,uDAAA,EAAW;UAAXA,wDAAA,SAAAoF,GAAA,CAAAlC,KAAA,CAAW;UAWXlD,uDAAA,EAAY;UAAZA,wDAAA,UAAAoF,GAAA,CAAAlC,KAAA,CAAY;;;;;;;SDFP2J,cAAc;AAAA,K;;;;;;;;;;;;;;;;;;;;;;AETc;;;;;;;;;;;;;ICAvC7M,4DAAA,iBACwD;IAAtDA,wDAAA,mBAAAmN,wDAAA;MAAA,MAAAC,MAAA,GAAApN,2DAAA,CAAA8C,GAAA,EAAAuK,KAAA;MAAA,MAAArH,MAAA,GAAAhG,2DAAA;MAAA,OAAAA,yDAAA,CAAAgG,MAAA,CAAAsH,YAAA,GAAAF,MAAA;IAAA,EAA4B;IAC5BpN,uDAAA,cAAgE;IAClEA,0DAAA,EAAS;;;;;IAH8CA,yDAAA,WAAAgG,MAAA,CAAAsH,YAAA,KAAAF,MAAA,CAAqC;IAC7DpN,wDAAA,UAAAgG,MAAA,CAAAuH,SAAA,CAAAH,MAAA,EAAwB;IAChDpN,uDAAA,EAAuC;IAAvCA,wDAAA,0BAAAgG,MAAA,CAAAwH,QAAA,CAAAJ,MAAA,GAAApN,2DAAA,CAAuC;;;ADMzC,IAAMyN,aAAa;EAApB,MAAOA,aAAa;IAMJ5J,MAAA;IALpByJ,YAAY,GAAG,CAAC;IACPI,QAAQ,GAAG,CAAC;IACrBF,QAAQ,GAAG,CAAC,YAAY,EAAE,cAAc,EAAE,kBAAkB,EAAE,WAAW,EAAE,cAAc,CAAC;IAC1FD,SAAS,GAAG,CAAC,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC;IAEhEvJ,YAAoBH,MAAc;MAAd,KAAAA,MAAM,GAANA,MAAM;IAAY;IAEtC;IACA8J,MAAM,GAAG,CAAC;IAGVC,YAAYA,CAACC,KAAiB;MAC5B,IAAI,CAACF,MAAM,GAAGE,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;IACxC;IAGAC,UAAUA,CAACH,KAAiB;MAC1B,MAAMI,IAAI,GAAGJ,KAAK,CAACK,cAAc,CAAC,CAAC,CAAC,CAACH,OAAO;MAC5C,MAAMI,IAAI,GAAGF,IAAI,GAAG,IAAI,CAACN,MAAM;MAE/B,IAAIQ,IAAI,GAAG,EAAE,IAAI,IAAI,CAACb,YAAY,GAAG,CAAC,EAAE;QACtC,IAAI,CAACA,YAAY,EAAE;MACrB,CAAC,MAAM,IAAIa,IAAI,GAAG,CAAC,EAAE,IAAI,IAAI,CAACb,YAAY,GAAG,IAAI,CAACI,QAAQ,EAAE;QAC1D,IAAI,CAACJ,YAAY,EAAE;MACrB;IACF;IAEAc,WAAWA,CAAA;MACT,IAAI,CAACvK,MAAM,CAACW,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACpC;;uBA9BWiJ,aAAa,EAAAzN,+DAAA,CAAA0E,mDAAA;IAAA;;YAAb+I,aAAa;MAAA5I,SAAA;MAAAwJ,YAAA,WAAAC,2BAAAnJ,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAbnF,wDAAA,wBAAAuO,4CAAAC,MAAA;YAAA,OAAApJ,GAAA,CAAAwI,YAAA,CAAAY,MAAA,CACV;UAAA,EADuB,sBAAAC,0CAAAD,MAAA;YAAA,OAAbpJ,GAAA,CAAA4I,UAAA,CAAAQ,MAAA,CACZ;UAAA,EADyB;;;;;;;;UCT1BxO,4DAAA,aAAqB;UACnBA,wDAAA,IAAA0O,+BAAA,oBACwD;UAG1D1O,0DAAA,EAAM;UAKEA,4DAJR,aAA0B,aACK,aACoE,aAC1E,aACQ;UAAAA,uDAAA,gBAAuB;UAClDA,0DADkD,EAAM,EAClD;UAEJA,4DADF,aAAmB,aACQ;UAAAA,uDAAA,qBAA+B;UAC1DA,0DAD0D,EAAM,EAC1D;UAEJA,4DADF,cAAmB,cACQ;UAAAA,uDAAA,oBAA6B;UACxDA,0DADwD,EAAM,EACxD;UAEJA,4DADF,cAAmB,cACQ;UAAAA,uDAAA,qBAA+B;UAC1DA,0DAD0D,EAAM,EAC1D;UAEJA,4DADF,cAAmB,cACQ;UAAAA,uDAAA,gBAAqB;UAGpDA,0DAHoD,EAAM,EAChD,EACF,EACF;UACNA,uDAAA,cAAkC;UAO9BA,4DANJ,cAA0B,cAKI,kBACkC;UAApDA,wDAAA,mBAAA2O,gDAAA;YAAA,OAAAvJ,GAAA,CAAAkI,YAAA,IAAAlI,GAAA,CAAAkI,YAAA,GAAwC,CAAC,GAAG,CAAC,IAAI,CAAC;UAAA,EAAC;UAACtN,oDAAA,cAAC;UAAAA,0DAAA,EAAS;UACtEA,4DAAA,kBAAwD;UAAhDA,wDAAA,mBAAA4O,gDAAA;YAAA,OAAAxJ,GAAA,CAAAkI,YAAA,IAAAlI,GAAA,CAAAkI,YAAA,GAAwC,CAAC,IAAI,CAAC;UAAA,EAAC;UAACtN,oDAAA,cAAC;UAC3DA,0DAD2D,EAAS,EAC9D;UACNA,4DAAA,kBAA+E;UAAhDA,wDAAA,mBAAA6O,gDAAA;YAAA,OAASzJ,GAAA,CAAAgJ,WAAA,EAAa;UAAA,EAAC;UACpDpO,uDAAA,eAA+E;UAGrFA,0DAFI,EAAS,EACL,EACF;;;UAvCkBA,uDAAA,EAAgB;UAAhBA,wDAAA,YAAAA,6DAAA,IAAA+O,GAAA,EAAgB;UAON/O,uDAAA,GAAgE;UAAhEA,yDAAA,+BAAAoF,GAAA,CAAAkI,YAAA,cAAgE;;;;;;;SDCrFG,aAAa;AAAA,K;;;;;;;;;;;;;;;;;;;;;;;AERqB;AACE;AACM;AACgB;AACG;AACZ;AACW;AACd;;;AAapD,IAAM0B,UAAU;EAAjB,MAAOA,UAAU;;uBAAVA,UAAU;IAAA;;YAAVA;IAAU;;gBAFXF,yDAAY,EAAEC,yDAAY,CAACE,QAAQ,CAAC,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,SAAS,EAAE7B,0DAAaA;MAAA,CAAE,CAAC,CAAC;IAAA;;SAE5E0B,UAAU;AAAA;;sHAAVA,UAAU;IAAAI,YAAA,GATnB9B,0DAAa,EACbhE,4EAAiB,EACjBlD,+EAAkB,EAClBsG,mEAAc,EACdnJ,8EAAiB,EACjByH,gEAAa;IAAAqE,OAAA,GAELP,yDAAY,EAAAvK,yDAAA;EAAA;AAAA,K","sources":["./src/app/components/boss-list/boss-list.ts","./src/app/components/boss-list/boss-list.html","./src/app/components/inventory/inventory.ts","./src/app/components/inventory/inventory.html","./src/app/components/questlog/questlog.ts","./src/app/components/questlog/questlog.html","./src/app/components/shop/shop.ts","./src/app/components/shop/shop.html","./src/app/components/stats/stats.ts","./src/app/components/stats/stats.html","./src/app/views/game/game.component.ts","./src/app/views/game/game.component.html","./src/app/views/game/game.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { BossService } from '@core/services/boss.service';\r\nimport { Boss } from '@core/models/boss.model';\r\nimport { BattleService } from '@core/services/battle.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-boss-list',\r\n  standalone: false,\r\n  templateUrl: './boss-list.html',\r\n  styleUrls: ['./boss-list.scss']\r\n})\r\nexport class BossListComponent implements OnInit {\r\n  bosses: Boss[] = [];\r\n  advantageVisibility: Record<string, boolean> = {}; \r\n\r\n  constructor(\r\n    private bossService: BossService,\r\n    private battleService: BattleService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.bossService.getBosses().subscribe(b => {\r\n      this.bosses = b;\r\n      this.bosses.forEach(boss => this.advantageVisibility[boss.id] = false); \r\n    });\r\n  }\r\n\r\n  toggleAdvantages(bossId: string) {\r\n    this.advantageVisibility[bossId] = !this.advantageVisibility[bossId];\r\n  }\r\n\r\n  showAdvantages(bossId: string): boolean {\r\n    return this.advantageVisibility[bossId];\r\n  }\r\n\r\n  startBattle(bossId: string) {\r\n    this.battleService.startBattle(bossId);\r\n    this.router.navigate(['/battle']);\r\n  }\r\n\r\n  statIcon(stat: string): string {\r\n  switch (stat) {\r\n    case 'strength': return '🗡️';\r\n    case 'agility': return '🎯';\r\n    case 'intelligence': return '🧠';\r\n    case 'hp': return '❤️';\r\n    case 'level': return '⭐';\r\n    case 'money': return '💰';\r\n    case 'experience': return '📘';\r\n    default: return '❔';\r\n  }\r\n}\r\n\r\n}\r\n","<div class=\"boss-list\">\r\n  <h2>Bossübersicht</h2>\r\n\r\n  <div *ngFor=\"let boss of bosses\" class=\"boss-card\" [class.defeated]=\"boss.defeated\">\r\n    <img [src]=\"'/assets/bosses/' + boss.image\" alt=\"{{ boss.name }}\" *ngIf=\"boss.image\" />\r\n    <div class=\"boss-details\">\r\n      <h3>{{ boss.name }} <span *ngIf=\"boss.title\">({{ boss.title }})</span></h3>\r\n      <p class=\"description\">{{ boss.description }}</p>\r\n\r\n      <div class=\"boss-stats\">\r\n        <span>🗡️ {{ boss.stats.strength }}</span>\r\n        <span>🎯 {{ boss.stats.agility }}</span>\r\n        <span>🧠 {{ boss.stats.intelligence }}</span>\r\n        <span>❤️ {{ boss.stats.hp }}</span>\r\n        <span>💰 {{ boss.stats.money }}</span>\r\n        <span>⭐ {{ boss.stats.level }}</span>\r\n      </div>\r\n\r\n      <p>Status: <strong>{{ boss.defeated ? 'Besiegt' : 'Bereit zum Kampf' }}</strong></p>\r\n      <p *ngIf=\"boss.attempts\">Versuche: {{ boss.attempts }}</p>\r\n\r\n      <div *ngIf=\"boss.advantages?.length\" class=\"advantages\">\r\n        <button class=\"toggle-btn\" (click)=\"toggleAdvantages(boss.id)\">\r\n          {{ showAdvantages(boss.id) ? '−' : '+' }} Pot. Vorteile\r\n        </button>\r\n\r\n        <div class=\"advantages-list\" *ngIf=\"showAdvantages(boss.id)\">\r\n          <div *ngFor=\"let adv of boss.advantages\" class=\"advantage-entry\">\r\n            <div class=\"advantage-header\">\r\n              <span class=\"advantage-name\">{{ adv.name }}</span>\r\n              <span class=\"advantage-desc\">{{ adv.description }}</span>\r\n            </div>\r\n\r\n            <div class=\"conditions\">\r\n              <span *ngFor=\"let cond of adv.condition\" class=\"condition-pill\">\r\n                <span class=\"icon-stat\">{{ statIcon(cond.stat) }}</span>\r\n                <span>{{ cond.stat }} {{ cond.operator }} {{ cond.value }}</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <button class=\"rpg-button\" (click)=\"startBattle(boss.id)\" [disabled]=\"boss.defeated\">\r\n        Kampf starten\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { Item } from '@core/models/item.model';\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  standalone: false,\r\n  templateUrl: './inventory.html',\r\n  styleUrls: ['./inventory.scss']\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n  items: Item[] = [];\r\n\r\n  constructor(private inventoryService: InventoryService, private playerService: PlayerService) {}\r\n\r\n  ngOnInit(): void {\r\n  this.inventoryService.getInventory().subscribe(items => {\r\n    this.items = items.filter(item => item.available !== false);\r\n  });\r\n}\r\n\r\n  useItem(item: Item) {\r\n    // Hier kommt gleich deine Logik rein\r\n    console.log('Benutzt:', item.name);\r\n  }\r\n\r\n  checkForUnlockedEquipment() {\r\n  const player = this.playerService.getSnapshot() ?? { questsCompleted: 0 };\r\n  const inventory = this.inventoryService.getSnapshot();\r\n\r\n  const unlocked: Item[] = [];\r\n\r\n  const updated = inventory.map(item => {\r\n    if (\r\n      item.type === 'equipment' &&\r\n      item.questsRequired != null &&\r\n      item.questsRequired <= (player.questsCompleted ?? 0) &&\r\n      item.available !== true\r\n    ) {\r\n      unlocked.push({ ...item, available: true });\r\n      return { ...item, available: true };\r\n    }\r\n    return item;\r\n  });\r\n\r\n  if (unlocked.length > 0) {\r\n    this.inventoryService.setInventory(updated);\r\n    // optional: notify the player\r\n    //console.log('Neue Ausrüstung verfügbar:', unlocked.map(i => i.name).join(', '));\r\n  }\r\n}\r\n}\r\n\r\n","<div class=\"inventory\">\r\n  <h2>Inventar</h2>\r\n  <div *ngIf=\"items.length === 0\" class=\"empty-note\">\r\n    Du besitzt keine Items.\r\n  </div>\r\n\r\n  <div class=\"item-list\">\r\n    <div class=\"item-card\" *ngFor=\"let item of items\">\r\n      <img class=\"item-icon\" [src]=\"'/assets/icons/' + item.icon\" alt=\"{{ item.name }}\" />\r\n      <div class=\"item-details\">\r\n        <div class=\"item-header\">\r\n          <strong class=\"item-name\">{{ item.name }}</strong>\r\n          <span class=\"item-type\">({{ item.type }})</span>\r\n        </div>\r\n        <p class=\"item-description\">{{ item.description }}</p>\r\n\r\n        <div class=\"item-bonuses\" *ngIf=\"item.bonusStats\">\r\n          <span *ngIf=\"item.bonusStats.hp\">❤️ HP +{{ item.bonusStats.hp }}</span>\r\n          <span *ngIf=\"item.bonusStats.strength\">🗡️ Stärke +{{ item.bonusStats.strength }}</span>\r\n          <span *ngIf=\"item.bonusStats.agility\">🎯 Geschick +{{ item.bonusStats.agility }}</span>\r\n          <span *ngIf=\"item.bonusStats.intelligence\">🧠 Intelligenz +{{ item.bonusStats.intelligence }}</span>\r\n        </div>\r\n\r\n        <div class=\"item-actions\">\r\n          <button *ngIf=\"item.type === 'consumable'\" class=\"rpg-button small\" (click)=\"useItem(item)\">Benutzen</button>\r\n          <button *ngIf=\"item.type === 'equipment'\" class=\"rpg-button small\">Ausrüsten</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { QuestService } from '@core/services/quest.service';\r\nimport { Quest } from '@core/models/quest.model';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\n\r\n@Component({\r\n  selector: 'app-questlog',\r\n  standalone: false,\r\n  templateUrl: './questlog.html',\r\n  styleUrls: ['./questlog.scss']\r\n})\r\nexport class QuestlogComponent implements OnInit {\r\n  quests: Quest[] = [];\r\n  filter: 'main' | 'side' = 'main';\r\n\r\n  constructor(private questService: QuestService, private inventoryService: InventoryService,\r\n    private playerService: PlayerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.questService.getQuests().subscribe(qs => this.quests = qs);\r\n  }\r\n\r\n  toggleFilter(type: 'main' | 'side') {\r\n    this.filter = type;\r\n  }\r\n\r\n  get filteredQuests() {\r\n  return this.quests.filter(q => q.type === this.filter && q.acquired);\r\n}\r\n\r\n  startQuest(id: string) {\r\n    this.questService.startQuest(id);\r\n  }\r\n\r\n  failQuest(id: string) {\r\n    this.questService.failQuest(id);\r\n  }\r\n\r\n  completeQuest(id: string) {\r\n    this.questService.markCompleted(id, this.inventoryService, this.playerService);\r\n  }\r\n\r\n  // confirmingAction: { type: 'complete' | 'fail'; questId: string } | null = null;\r\n\r\n// openConfirm(type: 'complete' | 'fail', questId: string) {\r\n//   this.confirmingAction = { type, questId };\r\n// }\r\n\r\n// cancelConfirm() {\r\n//   this.confirmingAction = null;\r\n// }\r\n\r\n// confirmAction() {\r\n//   if (!this.confirmingAction) return;\r\n//   const { type, questId } = this.confirmingAction;\r\n//   if (type === 'complete') this.questService.markCompleted(questId, this.inventoryService, this.playerService);\r\n//   else this.questService.failQuest(questId);\r\n//   this.confirmingAction = null;\r\n// }\r\n\r\n  cancelQuest(id: string) {\r\n    this.questService.cancelQuest(id);\r\n  }\r\n\r\n}\r\n","<!-- Modal auskommentieren -->\r\n<!--\r\n<div class=\"modal-backdrop\" *ngIf=\"confirmingAction\">\r\n  <div class=\"modal-panel\">\r\n    <p>Diese Quest wirklich {{ confirmingAction.type === 'complete' ? 'abschließen' : 'als fehlgeschlagen' }} markieren?</p>\r\n    <div class=\"modal-buttons\">\r\n      <button class=\"rpg-button\" (click)=\"confirmAction()\">Ja</button>\r\n      <button class=\"rpg-button\" (click)=\"cancelConfirm()\">Nein</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n-->\r\n<div class=\"questlog\">\r\n  <h2>Questlog</h2>\r\n\r\n  <div class=\"filters\">\r\n    <button [class.active]=\"filter === 'main'\" (click)=\"toggleFilter('main')\">Hauptquests</button>\r\n    <button [class.active]=\"filter === 'side'\" (click)=\"toggleFilter('side')\">Nebenquests</button>\r\n  </div>\r\n\r\n  <ul>\r\n    <li *ngFor=\"let quest of filteredQuests\" [class.completed]=\"quest.status === 'completed'\">\r\n      <h3>{{ quest.title }}\r\n        <button *ngIf=\"quest.type === 'side' && quest.status === 'doing'\" class=\"quest-cancel-btn\"\r\n          title=\"Quest abbrechen\" (click)=\"cancelQuest(quest.id)\">\r\n          ✖\r\n        </button>\r\n      </h3>\r\n      <p>{{ quest.description }}</p>\r\n      <p class=\"status\" [ngClass]=\"quest.status\">Status: {{ quest.status }}</p>\r\n\r\n      <div *ngIf=\"quest.rewardItems?.length || quest.rewardXp || quest.rewardMoney\" class=\"reward\">\r\n        <strong>Belohnung:</strong>\r\n        <ul>\r\n          <li *ngFor=\"let item of quest.rewardItems\">{{ item.name }}</li>\r\n          <li *ngIf=\"quest.rewardXp\">XP: {{ quest.rewardXp }}</li>\r\n          <li *ngIf=\"quest.rewardMoney\">💰: {{ quest.rewardMoney }}</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div *ngIf=\"quest.failedAttempts\">Fehlversuche: {{ quest.failedAttempts }}</div>\r\n\r\n      <div class=\"actions\" *ngIf=\"quest.type === 'side' && quest.status === 'open'\">\r\n        <button class=\"rpg-button\" (click)=\"startQuest(quest.id)\">Quest starten</button>\r\n      </div>\r\n\r\n      <div class=\"actions\" *ngIf=\"quest.status === 'doing'\">\r\n        <button class=\"rpg-button\" (click)=\"completeQuest(quest.id)\">Erledigt</button>\r\n<button class=\"rpg-button\" (click)=\"failQuest(quest.id)\">Fehlgeschlagen</button>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { SoundService } from '@core/services/sound.service';\r\nimport { ShopItem } from '@core/models/item.model';\r\nimport { createShopItems } from './shop.factory';\r\nimport { GameState } from '@core/models/game-state.model';\r\nimport { GameSaveService } from '@core/services/game-save.service';\r\nimport { ShopService } from '@core/services/shop.service';\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  standalone: false,\r\n  templateUrl: './shop.html',\r\n  styleUrls: ['./shop.scss']\r\n})\r\nexport class ShopComponent implements OnInit {\r\n  itemsForSale: ShopItem[] = [];\r\n  message = '';\r\n\r\n  constructor(\r\n    private inventoryService: InventoryService,\r\n    private playerService: PlayerService,\r\n    private soundService: SoundService,\r\n    private shopService: ShopService,\r\n    private gameSave: GameSaveService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.shopService.getShopItems().subscribe(items => {\r\n      this.itemsForSale = items;\r\n    });\r\n  }\r\n\r\n  async buy(item: ShopItem) {\r\n    if (item.stock <= 0) return;\r\n\r\n    if (this.playerService.pay(item.price!)) {\r\n      const purchasedItem = { ...item, acquiredAt: new Date() };\r\n      this.inventoryService.addItem(purchasedItem);\r\n      this.shopService.updateStock(item.id, -1);\r\n\r\n      try {\r\n        await this.gameSave.updateCurrentGame();\r\n        this.soundService.playEffect('item');\r\n        this.showMessage(`Gekauft: ${item.name}`);\r\n      } catch (err) {\r\n        console.error('Fehler beim Speichern:', err);\r\n        this.showMessage('Fehler beim Speichern!');\r\n      }\r\n    } else {\r\n      this.showMessage('Nicht genug Gil!');\r\n    }\r\n  }\r\n  showMessage(text: string) {\r\n    this.message = text;\r\n\r\n    setTimeout(() => {\r\n      this.message = '';\r\n    }, 3000);\r\n  }\r\n\r\n}\r\n","<div class=\"shop\">\r\n  <h2>Shop</h2>\r\n  <div class=\"item\" *ngFor=\"let item of itemsForSale\">\r\n  <img class=\"item-icon\" [src]=\"'/assets/icons/' + item.icon\" />\r\n  <div class=\"item-info\">\r\n    <strong>{{ item.name }}</strong>\r\n    <p>{{ item.description }}</p>\r\n    <p>Preis: {{ item.price }} Gil</p>\r\n    <p *ngIf=\"item.stock > 0\">Verfügbar: {{ item.stock }}</p>\r\n    <p *ngIf=\"item.stock === 0\" class=\"sold-out\">Ausverkauft</p>\r\n    <button class=\"rpg-button small\" [disabled]=\"item.stock === 0\" (click)=\"buy(item)\">\r\n      Kaufen\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"message\" class=\"shop-toast\">{{ message }}</div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { PlayerStats } from '@core/models/player-stats.model';\r\n\r\n@Component({\r\n  selector: 'app-stats',\r\n  standalone: false,\r\n  templateUrl: './stats.html',\r\n  styleUrls: ['./stats.scss']\r\n})\r\nexport class StatsComponent implements OnInit {\r\n  stats: PlayerStats | null = null;\r\n\r\n  constructor(private playerService: PlayerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.playerService.getPlayer().subscribe(p => this.stats = p);\r\n  }\r\n}\r\n","<div class=\"\">\r\n  <div *ngIf=\"stats\" class=\"stats stats-content\">\r\n    <h2>Deine Werte</h2>\r\n    <ul>\r\n      <li><strong>HP:</strong> {{ stats.hp }}</li>\r\n      <li><strong>Stärke:</strong> {{ stats.strength }}</li>\r\n      <li><strong>Agilität:</strong> {{ stats.agility }}</li>\r\n      <li><strong>Intelligenz:</strong> {{ stats.intelligence }}</li>\r\n      <li><strong>Gil:</strong> {{ stats.money }}</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div *ngIf=\"!stats\">\r\n    <p>Keine Werte geladen.</p>\r\n  </div>\r\n</div>\r\n","import { Component, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  standalone: false,\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.scss']\r\n})\r\nexport class GameComponent {\r\n  currentIndex = 0;\r\n  readonly maxIndex = 4;\r\n  navIcons = ['skills.svg', 'backpack.svg', 'scroll-quill.svg', 'brute.svg', 'swap-bag.svg'];\r\n  navLabels = ['Charakter', 'Inventar', 'Quests', 'Bosse', 'Shop'];\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  // Optional: mit Touch-Events\r\n  startX = 0;\r\n\r\n  @HostListener('touchstart', ['$event'])\r\n  onTouchStart(event: TouchEvent) {\r\n    this.startX = event.touches[0].clientX;\r\n  }\r\n\r\n  @HostListener('touchend', ['$event'])\r\n  onTouchEnd(event: TouchEvent) {\r\n    const endX = event.changedTouches[0].clientX;\r\n    const diff = endX - this.startX;\r\n\r\n    if (diff > 50 && this.currentIndex > 0) {\r\n      this.currentIndex--;\r\n    } else if (diff < -50 && this.currentIndex < this.maxIndex) {\r\n      this.currentIndex++;\r\n    }\r\n  }\r\n\r\n  openScanner() {\r\n    this.router.navigate(['/scanner']);\r\n  }\r\n\r\n}\r\n","<div class=\"top-nav\">\r\n  <button *ngFor=\"let i of [0,1,2,3,4]; let idx = index\" [class.active]=\"currentIndex === idx\"\r\n    (click)=\"currentIndex = idx\" [title]=\"navLabels[idx]\">\r\n    <img [src]=\"'assets/icons/' + navIcons[idx]\" class=\"nav-icon\" />\r\n  </button>\r\n</div>\r\n<div class=\"game-wrapper\">\r\n  <div class=\"slider-viewport\">\r\n    <div class=\"slider-container\" [style.transform]=\"'translateX(-' + (currentIndex * 100) + '%)'\">\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-stats></app-stats></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-inventory></app-inventory></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-questlog></app-questlog></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-boss-list></app-boss-list></div>\r\n      </div>\r\n      <div class=\"slide\">\r\n        <div class=\"slide-inner\"><app-shop></app-shop></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"footer-divider\"></div>\r\n  <div class=\"swipe-footer\">\r\n    <!--<div class=\"swipe-indicator\">\r\n      <span *ngFor=\"let i of [0,1,2,3,4]; let idx = index\" [class.active]=\"idx === currentIndex\">•</span>\r\n    </div>-->\r\n\r\n    <div class=\"swipe-controls\">\r\n      <button (click)=\"currentIndex = (currentIndex - 1 + 5) % 5\">◀</button>\r\n      <button (click)=\"currentIndex = (currentIndex + 1) % 5\">▶</button>\r\n    </div>\r\n    <button class=\"qr-scan-button\" (click)=\"openScanner()\" title=\"QR-Code scannen\">\r\n      <img src=\"assets/icons/eye-target.svg\" class=\"icon qr-icon\" alt=\"QR-Scanner\" />\r\n    </button>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GameComponent } from './game.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { QuestlogComponent } from '../../components/questlog/questlog';\r\nimport { InventoryComponent } from '../../components/inventory/inventory';\r\nimport { StatsComponent } from '../../components/stats/stats';\r\nimport { BossListComponent } from '../../components/boss-list/boss-list';\r\nimport { ShopComponent } from '../../components/shop/shop';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GameComponent,\r\n    QuestlogComponent,\r\n    InventoryComponent,\r\n    StatsComponent,\r\n    BossListComponent,\r\n    ShopComponent\r\n    ],\r\n  imports: [CommonModule, RouterModule.forChild([{ path: '', component: GameComponent }])]\r\n})\r\nexport class GameModule {}\r\n"],"names":["BossService","BattleService","Router","i0","ɵɵelement","ɵɵpropertyInterpolate","boss_r2","name","ɵɵproperty","image","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","title","attempts","ɵɵtextInterpolate","ctx_r3","statIcon","cond_r5","stat","ɵɵtextInterpolate3","operator","value","ɵɵtemplate","BossListComponent_div_3_div_26_div_3_div_1_span_7_Template","adv_r6","description","condition","BossListComponent_div_3_div_26_div_3_div_1_Template","advantages","ɵɵlistener","BossListComponent_div_3_div_26_Template_button_click_1_listener","ɵɵrestoreView","_r3","ɵɵnextContext","$implicit","ɵɵresetView","toggleAdvantages","id","BossListComponent_div_3_div_26_div_3_Template","showAdvantages","BossListComponent_div_3_img_1_Template","BossListComponent_div_3_span_5_Template","BossListComponent_div_3_p_25_Template","BossListComponent_div_3_div_26_Template","BossListComponent_div_3_Template_button_click_27_listener","_r1","startBattle","ɵɵclassProp","defeated","stats","strength","agility","intelligence","hp","money","level","length","BossListComponent","bossService","battleService","router","bosses","advantageVisibility","constructor","ngOnInit","getBosses","subscribe","b","forEach","boss","bossId","navigate","ɵɵdirectiveInject","i1","i2","i3","selectors","decls","vars","consts","template","BossListComponent_Template","rf","ctx","BossListComponent_div_3_Template","InventoryService","PlayerService","item_r1","bonusStats","InventoryComponent_div_5_div_10_span_1_Template","InventoryComponent_div_5_div_10_span_2_Template","InventoryComponent_div_5_div_10_span_3_Template","InventoryComponent_div_5_div_10_span_4_Template","InventoryComponent_div_5_button_12_Template_button_click_0_listener","_r2","ctx_r2","useItem","InventoryComponent_div_5_div_10_Template","InventoryComponent_div_5_button_12_Template","InventoryComponent_div_5_button_13_Template","icon","type","InventoryComponent","inventoryService","playerService","items","getInventory","filter","item","available","console","log","checkForUnlockedEquipment","player","getSnapshot","questsCompleted","inventory","unlocked","updated","map","questsRequired","push","setInventory","InventoryComponent_Template","InventoryComponent_div_3_Template","InventoryComponent_div_5_Template","QuestService","QuestlogComponent_li_9_button_3_Template_button_click_0_listener","quest_r2","cancelQuest","item_r4","rewardXp","rewardMoney","QuestlogComponent_li_9_div_8_li_4_Template","QuestlogComponent_li_9_div_8_li_5_Template","QuestlogComponent_li_9_div_8_li_6_Template","rewardItems","failedAttempts","QuestlogComponent_li_9_div_10_Template_button_click_1_listener","_r5","startQuest","QuestlogComponent_li_9_div_11_Template_button_click_1_listener","_r6","completeQuest","QuestlogComponent_li_9_div_11_Template_button_click_3_listener","failQuest","QuestlogComponent_li_9_button_3_Template","QuestlogComponent_li_9_div_8_Template","QuestlogComponent_li_9_div_9_Template","QuestlogComponent_li_9_div_10_Template","QuestlogComponent_li_9_div_11_Template","status","QuestlogComponent","questService","quests","getQuests","qs","toggleFilter","filteredQuests","q","acquired","markCompleted","QuestlogComponent_Template","QuestlogComponent_Template_button_click_4_listener","QuestlogComponent_Template_button_click_6_listener","QuestlogComponent_li_9_Template","SoundService","GameSaveService","ShopService","item_r2","stock","message","ShopComponent_div_3_p_9_Template","ShopComponent_div_3_p_10_Template","ShopComponent_div_3_Template_button_click_11_listener","buy","ShopComponent_div_3_div_13_Template","price","ShopComponent","soundService","shopService","gameSave","itemsForSale","getShopItems","_this","_asyncToGenerator","pay","purchasedItem","acquiredAt","Date","addItem","updateStock","updateCurrentGame","playEffect","showMessage","err","error","text","setTimeout","i4","i5","ShopComponent_Template","ShopComponent_div_3_Template","ctx_r0","StatsComponent","getPlayer","p","StatsComponent_Template","StatsComponent_div_1_Template","StatsComponent_div_2_Template","GameComponent_button_1_Template_button_click_0_listener","idx_r2","index","currentIndex","navLabels","navIcons","GameComponent","maxIndex","startX","onTouchStart","event","touches","clientX","onTouchEnd","endX","changedTouches","diff","openScanner","hostBindings","GameComponent_HostBindings","GameComponent_touchstart_HostBindingHandler","$event","GameComponent_touchend_HostBindingHandler","GameComponent_button_1_Template","GameComponent_Template_button_click_23_listener","GameComponent_Template_button_click_25_listener","GameComponent_Template_button_click_27_listener","ɵɵpureFunction0","_c0","ɵɵstyleProp","CommonModule","RouterModule","GameModule","forChild","path","component","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}