{"version":3,"file":"src_app_views_battle_battle_module_ts.js","mappings":"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","sources":["./src/app/core/services/battle.service.ts","./src/app/core/services/game-save.service.ts","./src/app/core/services/player.service.ts","./src/app/core/utils/evaluate-condition.ts","./src/app/views/battle/battle.component.ts","./src/app/views/battle/battle.component.html","./src/app/views/battle/battle.module.ts","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Boss } from '../models/boss.model';\r\nimport { GameState } from '../models/game-state.model';\r\nimport { Battle } from '../models/battle.model';\r\nimport { evaluateCondition } from '../utils/evaluate-condition';\r\nimport { Router } from '@angular/router';\r\nimport { GameSaveService } from './game-save.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BattleService {\r\n  private currentBattle$ = new BehaviorSubject<Battle | null>(null);\r\n  private gameState!: GameState;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private gameSave: GameSaveService\r\n  ) { }\r\n\r\n  setGameState(state: GameState) {\r\n    this.gameState = state;\r\n  }\r\n\r\n  startBattle(bossId: string): void {\r\n    const boss = this.gameState.bosses.find(b => b.id === bossId);\r\n    if (!boss) return;\r\n\r\n    const unlockedAdvantages = boss.advantages.filter(adv =>\r\n      evaluateCondition(adv.condition, this.gameState.player)\r\n    );\r\n\r\n    const battle: Battle = {\r\n      id: `${bossId}-${Date.now()}`,\r\n      bossId: boss.id,\r\n      advantagesUnlocked: unlockedAdvantages,\r\n      startedAt: new Date()\r\n    };\r\n\r\n    this.currentBattle$.next(battle);\r\n  }\r\n\r\n  getCurrentBattle() {\r\n    return this.currentBattle$.asObservable();\r\n  }\r\n\r\n  async finishBattle(won: boolean): Promise<void> {\r\n    const battle = this.currentBattle$.value;\r\n    if (!battle) return;\r\n\r\n    battle.outcome = won ? 'win' : 'loss';\r\n    battle.finishedAt = new Date();\r\n\r\n    const boss = this.gameState.bosses.find(b => b.id === battle.bossId);\r\n    if (boss) {\r\n      if (won) {\r\n        boss.defeated = true;\r\n      } else {\r\n        boss.attempts = (boss.attempts || 0) + 1;\r\n      }\r\n    }\r\n\r\n    this.gameState.battles.push(battle);\r\n    this.currentBattle$.next(null);\r\n\r\n    await this.gameSave.updateCurrentGame();\r\n\r\n    this.router.navigate(['/game']);\r\n  }\r\n\r\n  getSnapshot(): Battle[] {\r\n    return this.gameState.battles;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\r\nimport { GameState } from '../models/game-state.model';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { PlayerService } from './player.service';\r\nimport { InventoryService } from './inventory.service';\r\nimport { ShopService } from './shop.service';\r\nimport { BattleService } from './battle.service';\r\nimport { BossService } from './boss.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GameSaveService {\r\n  private lastGameStateId!: number;\r\n  private currentSnapshotBuilder!: () => GameState;\r\n\r\n  constructor(private db: NgxIndexedDBService) {}\r\n\r\n  registerSnapshotBuilder(builder: () => GameState) {\r\n    this.currentSnapshotBuilder = builder;\r\n  }\r\n\r\n  async saveNewGame(state: Omit<GameState, 'id'>): Promise<GameState> {\r\n    state.updatedAt = new Date();\r\n    const result = await firstValueFrom(this.db.add('gameStates', state));\r\n    const id = typeof result === 'number' ? result : (result as any).id;\r\n    this.lastGameStateId = id;\r\n    return { ...state, id };\r\n  }\r\n\r\n  async updateCurrentGame(): Promise<GameState> {\r\n    if (!this.currentSnapshotBuilder) throw new Error('No snapshot builder registered.');\r\n    const snapshot = this.currentSnapshotBuilder();\r\n    snapshot.updatedAt = new Date();\r\n    return this.updateGame(snapshot);\r\n  }\r\n\r\n  async updateGame(state: GameState): Promise<GameState> {\r\n    await firstValueFrom(this.db.update('gameStates', state));\r\n    return state;\r\n  }\r\n\r\n  async loadGame(id: number): Promise<GameState> {\r\n    this.lastGameStateId = id;\r\n    return firstValueFrom(this.db.getByKey('gameStates', id));\r\n  }\r\n\r\n  async listGames(): Promise<GameState[]> {\r\n    return firstValueFrom(this.db.getAll('gameStates'));\r\n  }\r\n}\r\n\r\n  /* deleteGame(id: number): Promise<void> {\r\n   return firstValueFrom(this.db.delete('gameStates', id));\r\n   }*/\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { PlayerStats } from '../models/player-stats.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PlayerService {\r\n  private player$ = new BehaviorSubject<PlayerStats | null>(null);\r\n\r\n  setPlayer(stats: PlayerStats) {\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  getPlayer() {\r\n    return this.player$.asObservable();\r\n  }\r\n\r\n  updatePlayer(stats: PlayerStats) {\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  heal(amount: number) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    stats.hp += amount;\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  pay(amount: number): boolean {\r\n    const stats = this.player$.value;\r\n    if (!stats || stats.money < amount) return false;\r\n    stats.money -= amount;\r\n    this.player$.next({ ...stats });\r\n    return true;\r\n  }\r\n\r\n  addMoney(amount: number) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    stats.money += amount;\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  addXp(amount: number) {\r\n    const stats = this.player$.value;\r\n    if (!stats) return;\r\n    stats.experience += amount;\r\n    this.player$.next({ ...stats });\r\n  }\r\n\r\n  updateStats(partial: Partial<PlayerStats>) {\r\n    const current = this.player$.value!;\r\n    this.player$.next({ ...current, ...partial });\r\n  }\r\n\r\n\r\n  getSnapshot(): PlayerStats | null {\r\n    return this.player$.value;\r\n  }\r\n}\r\n","import { AdvantageCondition } from '../models/boss.model';\r\nimport { PlayerStats } from '../models/player-stats.model';\r\n\r\nexport function evaluateCondition(conditions: AdvantageCondition[], stats: PlayerStats): boolean {\r\n  return conditions.every(cond => {\r\n    const statVal = stats[cond.stat] ?? 0;\r\n    switch (cond.operator) {\r\n      case '>=': return statVal >= cond.value;\r\n      case '<=': return statVal <= cond.value;\r\n      case '>': return statVal > cond.value;\r\n      case '<': return statVal < cond.value;\r\n      case '==': return statVal === cond.value;\r\n      case '!=': return statVal !== cond.value;\r\n      default: return false;\r\n    }\r\n  });\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BattleService } from '../../core/services/battle.service';\r\nimport { Battle } from '@core/models/battle.model';\r\nimport { SoundService } from '../../core/services/sound.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { PlayerStats } from '@core/models/player-stats.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-battle',\r\n  templateUrl: './battle.component.html',\r\n  styleUrls: ['./battle.component.scss']\r\n})\r\nexport class BattleComponent implements OnInit {\r\n  battle: Battle | null = null;\r\n  playerHp: number | null = null;\r\n  hpInput: number = 0;\r\n\r\n  constructor(\r\n    private battleService: BattleService,\r\n    private soundService: SoundService,\r\n    private playerService: PlayerService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.battleService.getCurrentBattle().subscribe(b => {\r\n      this.battle = b;\r\n      if (b) {\r\n        this.soundService.playBossMusic(b.bossId);\r\n        this.loadPlayerHp();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadPlayerHp() {\r\n    this.playerService.getPlayer().subscribe(player => {\r\n      if (!player) return;\r\n      this.playerHp = player.hp;\r\n    });\r\n  }\r\n\r\n\r\n  adjustHp(isPercent: boolean) {\r\n    if (!this.playerHp || this.hpInput <= 0) return;\r\n\r\n    let amount = isPercent\r\n      ? Math.floor((this.hpInput / 100) * this.playerHp)\r\n      : this.hpInput;\r\n\r\n    //const confirmed = window.confirm(`Wirklich ${amount} HP abziehen?`);\r\n    //if (!confirmed) return;\r\n\r\n    this.playerService.getPlayer().subscribe(player => {\r\n      if (!player) return; // Absicherung\r\n\r\n      const newHp = player.hp - amount;\r\n      player.hp = newHp;\r\n      this.playerService.updatePlayer(player);\r\n      this.playerHp = player.hp;\r\n    });\r\n  }\r\n\r\n  finish(won: boolean) {\r\n    this.battleService.finishBattle(won).then(() => {\r\n      this.router.navigate(['/game']);\r\n    });\r\n  }\r\n}\r\n","<div class=\"battle-container\" *ngIf=\"battle\">\r\n  <h2 class=\"boss-name\">Kampf gegen: {{ battle.bossId }}</h2>\r\n  <p class=\"timestamp\">Beginn: {{ battle.startedAt | date: 'shortTime' }}</p>\r\n\r\n  <div class=\"advantages\" *ngIf=\"battle.advantagesUnlocked.length > 0\">\r\n    <h3>Deine Vorteile</h3>\r\n    <ul>\r\n      <li *ngFor=\"let adv of battle.advantagesUnlocked\">\r\n        <strong>{{ adv.name }}</strong><br />\r\n        <span>{{ adv.description }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n<div class=\"hp-manipulation\" *ngIf=\"playerHp !== null\">\r\n  <h3>HP: {{ playerHp }} </h3>\r\n\r\n  <label>\r\n    <input type=\"number\" [(ngModel)]=\"hpInput\" placeholder=\"z. B. 10 oder 25\" />\r\n  </label>\r\n\r\n  <div class=\"buttons\">\r\n    <button class=\"rpg-button\" (click)=\"adjustHp(false)\">HP abziehen</button>\r\n    <button class=\"rpg-button\" (click)=\"adjustHp(true)\">HP % abziehen</button>\r\n  </div>\r\n</div>\r\n  <div class=\"battle-actions\">\r\n    <button class=\"rpg-button win\" (click)=\"finish(true)\">Sieg</button>\r\n    <button class=\"rpg-button lose\" (click)=\"finish(false)\">Niederlage</button>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"!battle\" class=\"no-battle\">\r\n  <p>Kein aktiver Kampf.</p>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {  BattleComponent } from './battle.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [BattleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([{ path: '', component: BattleComponent }]),\r\n    FormsModule \r\n  ]\r\n})\r\nexport class BattleModule {}\r\n\r\n","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n"],"names":["BehaviorSubject","evaluateCondition","Router","GameSaveService","BattleService","router","gameSave","currentBattle$","gameState","constructor","setGameState","state","startBattle","bossId","boss","bosses","find","b","id","unlockedAdvantages","advantages","filter","adv","condition","player","battle","Date","now","advantagesUnlocked","startedAt","next","getCurrentBattle","asObservable","finishBattle","won","_this","_asyncToGenerator","value","outcome","finishedAt","defeated","attempts","battles","push","updateCurrentGame","navigate","getSnapshot","i0","ɵɵinject","i1","i2","factory","ɵfac","providedIn","NgxIndexedDBService","firstValueFrom","db","lastGameStateId","currentSnapshotBuilder","registerSnapshotBuilder","builder","saveNewGame","updatedAt","result","add","_this2","Error","snapshot","updateGame","_this3","update","loadGame","_this4","getByKey","listGames","_this5","getAll","PlayerService","player$","setPlayer","stats","getPlayer","updatePlayer","heal","amount","hp","pay","money","addMoney","addXp","experience","updateStats","partial","current","conditions","every","cond","statVal","stat","operator","SoundService","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","adv_r2","name","description","ɵɵtemplate","BattleComponent_div_0_div_6_li_4_Template","ɵɵproperty","ctx_r2","ɵɵtwoWayListener","BattleComponent_div_0_div_7_Template_input_ngModelChange_4_listener","$event","ɵɵrestoreView","_r4","ɵɵnextContext","ɵɵtwoWayBindingSet","hpInput","ɵɵresetView","ɵɵlistener","BattleComponent_div_0_div_7_Template_button_click_6_listener","adjustHp","BattleComponent_div_0_div_7_Template_button_click_8_listener","ɵɵtextInterpolate1","playerHp","ɵɵtwoWayProperty","BattleComponent_div_0_div_6_Template","BattleComponent_div_0_div_7_Template","BattleComponent_div_0_Template_button_click_9_listener","_r1","finish","BattleComponent_div_0_Template_button_click_11_listener","ɵɵpipeBind2","length","BattleComponent","battleService","soundService","playerService","ngOnInit","subscribe","playBossMusic","loadPlayerHp","isPercent","Math","floor","newHp","then","ɵɵdirectiveInject","i3","i4","selectors","decls","vars","consts","template","BattleComponent_Template","rf","ctx","BattleComponent_div_0_Template","BattleComponent_div_1_Template","CommonModule","RouterModule","FormsModule","BattleModule","forChild","path","component","declarations","imports","EmptyError","SafeSubscriber","source","config","hasConfig","Promise","resolve","reject","subscriber","unsubscribe","error","complete","defaultValue"],"sourceRoot":"webpack:///","x_google_ignoreList":[7]}