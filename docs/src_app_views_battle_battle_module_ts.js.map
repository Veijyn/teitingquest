{"version":3,"file":"src_app_views_battle_battle_module_ts.js","mappings":"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","sources":["./src/app/views/battle/battle.component.ts","./src/app/views/battle/battle.component.html","./src/app/views/battle/battle.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { BattleService } from '../../core/services/battle.service';\r\nimport { Battle } from '@core/models/battle.model';\r\nimport { SoundService } from '../../core/services/sound.service';\r\nimport { PlayerService } from '@core/services/player.service';\r\nimport { QuestService } from '@core/services/quest.service';\r\nimport { InventoryService } from '@core/services/inventory.service';\r\nimport { PlayerStats } from '@core/models/player-stats.model';\r\nimport { Router } from '@angular/router';\r\nimport { Boss } from '@core/models/boss.model';\r\n\r\n@Component({\r\n  selector: 'app-battle',\r\n  templateUrl: './battle.component.html',\r\n  styleUrls: ['./battle.component.scss']\r\n})\r\nexport class BattleComponent implements OnInit {\r\n  battle: Battle | null = null;\r\n  boss: Boss | null = null;\r\n  playerHp: number | null = null;\r\n  playerStats: PlayerStats | null = null;\r\n  hpInput: number = 0;\r\n  confirmWinVisible: boolean = false;\r\n\r\n  constructor(\r\n    private battleService: BattleService,\r\n    private soundService: SoundService,\r\n    private playerService: PlayerService,\r\n    private questService: QuestService,\r\n    private inventoryService: InventoryService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.battleService.getCurrentBattle().subscribe(b => {\r\n      this.battle = b;\r\n      if (b) {\r\n        this.soundService.playBossMusic(b.bossId);\r\n        this.loadBoss(b.bossId);\r\n        this.loadPlayerStats();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadBoss(bossId: string) {\r\n    const bosses = this.battleService.getGameState().bosses;\r\n    this.boss = bosses.find(b => b.id === bossId) || null;\r\n  }\r\n\r\n  loadPlayerStats() {\r\n    this.playerService.getPlayer().subscribe(player => {\r\n      if (!player) return;\r\n      this.playerHp = player.hp;\r\n\r\n      // Effektive Werte berechnen\r\n      const effectiveStats = this.playerService.getEffectiveStats();\r\n      this.playerStats = effectiveStats;\r\n    });\r\n  }\r\n\r\n  formatCondition(stat: string, operator: string, value: number): string {\r\n    const statMap: { [key: string]: string } = {\r\n      strength: 'Stärke',\r\n      agility: 'Geschicklichkeit',\r\n      intelligence: 'Intelligenz',\r\n      hp: 'HP',\r\n      money: 'Geld',\r\n      level: 'Level',\r\n      experience: 'EP',\r\n      questsCompleted: 'Quests'\r\n    };\r\n    return `${statMap[stat] || stat} ${operator} ${value}`;\r\n  }\r\n\r\n  toggleConfirmWin() {\r\n    this.confirmWinVisible = !this.confirmWinVisible;\r\n  }\r\n\r\n  adjustHp(isPercent: boolean) {\r\n    const inputValue = parseInt(String(this.hpInput), 10);\r\n    if (isNaN(inputValue) || inputValue <= 0) return;\r\n\r\n    const player = this.playerService.getSnapshot();\r\n    if (!player) return;\r\n\r\n    const currentHp = player.hp;\r\n    const amount = isPercent\r\n      ? Math.floor((inputValue / 100) * currentHp)\r\n      : inputValue;\r\n\r\n    const newHp = Math.max(0, currentHp - amount);\r\n    if (newHp === currentHp) return;\r\n\r\n    const updated = { ...player, hp: newHp };\r\n    this.playerService.updatePlayer(updated);\r\n    this.playerHp = newHp;\r\n  }\r\n\r\n  finish(won: boolean) {\r\n    const player = this.playerService.getSnapshot();\r\n    if (!player) return;\r\n\r\n    if (won && this.boss?.questId) {\r\n      this.questService.markCompleted(this.boss.questId, this.inventoryService, this.playerService);\r\n    }\r\n\r\n    if (!won) {\r\n      // Spieler wurde „besiegt“ – auf 0 HP setzen und dann sofort wiederbeleben\r\n      const level = player.level ?? 1;\r\n      const restoredHp = 20 + Math.max(0, level - 1) * 3;\r\n\r\n      const updatedPlayer = { ...player, hp: restoredHp };\r\n      this.playerService.updatePlayer(updatedPlayer);\r\n    }\r\n\r\n    this.battleService.finishBattle(won).then(() => {\r\n      this.router.navigate(['/game']);\r\n    });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/game']);\r\n  }\r\n}\r\n","<div class=\"battle-container\" *ngIf=\"battle && boss\">\r\n  <div class=\"boss-header\">\r\n    <img *ngIf=\"boss.image\" [src]=\"'assets/icons/' + boss.image\" alt=\"{{ boss.name }}\" class=\"boss-icon\" />\r\n    <h2 class=\"boss-name\">Kampf gegen: {{ boss.name }}</h2>\r\n  </div>\r\n\r\n  <p class=\"timestamp\">Beginn: {{ battle.startedAt | date: 'shortTime' }}</p>\r\n\r\n  <div class=\"advantages\" *ngIf=\"battle.advantagesUnlocked.length > 0\">\r\n    <h3>Kampfeffekte</h3>\r\n    <ul>\r\n      <li *ngFor=\"let adv of battle.advantagesUnlocked\">\r\n        <strong>{{ adv.name }}</strong><br />\r\n        <span>{{ adv.description }}</span><br />\r\n        <small class=\"condition-chip\" *ngFor=\"let cond of adv.condition\">\r\n          {{ formatCondition(cond.stat, cond.operator, cond.value) }}\r\n        </small>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"player-stats\" *ngIf=\"playerStats\">\r\n    <h3>Deine Werte</h3>\r\n    <ul>\r\n      <li>Level: {{ playerStats.level }}</li>\r\n      <li>HP: {{ playerStats.hp }}</li>\r\n      <li>Stärke: {{ playerStats.strength }}</li>\r\n      <li>Geschicklichkeit: {{ playerStats.agility }}</li>\r\n      <li>Intelligenz: {{ playerStats.intelligence }}</li>\r\n      <li>Gil: {{ playerStats.money }}</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"hp-manipulation\" *ngIf=\"playerHp !== null\">\r\n  <h3>HP anpassen</h3>\r\n  <div class=\"hp-input-row\">\r\n    <input type=\"number\" [(ngModel)]=\"hpInput\" placeholder=\"10\" min=\"1\" />\r\n    <button class=\"rpg-button action\" (click)=\"adjustHp(false)\">Abziehen</button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"battle-actions-row\">\r\n  <!-- Sieg-Button mit Toggle -->\r\n  <div class=\"confirmable-button\">\r\n    <button class=\"rpg-button win\" (click)=\"toggleConfirmWin()\">Sieg</button>\r\n    <div class=\"confirm-collapse\" *ngIf=\"confirmWinVisible\">\r\n      <p>Sieg wirklich bestätigen?</p>\r\n      <button class=\"rpg-button confirm\" (click)=\"finish(true)\">Ja, sicher!</button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Niederlage direkt -->\r\n  <button class=\"rpg-button lose\" (click)=\"finish(false)\">Niederlage</button>\r\n</div>\r\n\r\n<div class=\"back-button\">\r\n  <button class=\"rpg-button back\" (click)=\"goBack()\">Zurück</button>\r\n</div>\r\n<div *ngIf=\"!battle\" class=\"no-battle\">\r\n  <p>Kein aktiver Kampf.</p>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {  BattleComponent } from './battle.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [BattleComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([{ path: '', component: BattleComponent }]),\r\n    FormsModule \r\n  ]\r\n})\r\nexport class BattleModule {}\r\n\r\n"],"names":["BattleService","SoundService","PlayerService","QuestService","InventoryService","Router","i0","ɵɵelement","ɵɵpropertyInterpolate","ctx_r1","boss","name","ɵɵproperty","image","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","formatCondition","cond_r3","stat","operator","value","ɵɵtemplate","BattleComponent_div_0_div_8_li_4_small_7_Template","ɵɵtextInterpolate","adv_r4","description","condition","BattleComponent_div_0_div_8_li_4_Template","battle","advantagesUnlocked","playerStats","level","hp","strength","agility","intelligence","money","ɵɵtwoWayListener","BattleComponent_div_0_div_10_Template_input_ngModelChange_4_listener","$event","ɵɵrestoreView","_r5","ɵɵnextContext","ɵɵtwoWayBindingSet","hpInput","ɵɵresetView","ɵɵlistener","BattleComponent_div_0_div_10_Template_button_click_5_listener","adjustHp","ɵɵtwoWayProperty","BattleComponent_div_0_div_15_Template_button_click_3_listener","_r6","finish","BattleComponent_div_0_img_2_Template","BattleComponent_div_0_div_8_Template","BattleComponent_div_0_div_9_Template","BattleComponent_div_0_div_10_Template","BattleComponent_div_0_Template_button_click_13_listener","_r1","toggleConfirmWin","BattleComponent_div_0_div_15_Template","BattleComponent_div_0_Template_button_click_16_listener","BattleComponent_div_0_Template_button_click_19_listener","goBack","BattleComponent_div_0_div_21_Template","ɵɵpipeBind2","startedAt","length","playerHp","confirmWinVisible","BattleComponent","battleService","soundService","playerService","questService","inventoryService","router","constructor","ngOnInit","getCurrentBattle","subscribe","b","playBossMusic","bossId","loadBoss","loadPlayerStats","bosses","getGameState","find","id","getPlayer","player","effectiveStats","getEffectiveStats","statMap","experience","questsCompleted","isPercent","inputValue","parseInt","String","isNaN","getSnapshot","currentHp","amount","Math","floor","newHp","max","updated","updatePlayer","won","questId","markCompleted","restoredHp","updatedPlayer","finishBattle","then","navigate","ɵɵdirectiveInject","i1","i2","i3","i4","i5","i6","selectors","decls","vars","consts","template","BattleComponent_Template","rf","ctx","BattleComponent_div_0_Template","CommonModule","RouterModule","FormsModule","BattleModule","forChild","path","component","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}